File: inefficientEqualsOverridingInInlineClass.kt - d1416e855bfdd3045ecd62db8ec34832
  NL("\n")
  NL("\n")
  NL("\n")
  NL("\n")
  packageHeader
  importList
  topLevelObject
    declaration
      classDeclaration
        modifiers
          annotation
            singleAnnotation
              AT_PRE_WS("\n@")
              unescapedAnnotation
                userType
                  simpleUserType
                    simpleIdentifier
                      Identifier("JvmInline")
            NL("\n")
          modifier
            classModifier
              VALUE("value")
        CLASS("class")
        simpleIdentifier
          Identifier("IC1")
        primaryConstructor
          classParameters
            LPAREN("(")
            classParameter
              VAL("val")
              simpleIdentifier
                Identifier("x")
              COLON(":")
              type
                typeReference
                  userType
                    simpleUserType
                      simpleIdentifier
                        Identifier("Int")
            RPAREN(")")
        classBody
          LCURL("{")
          NL("\n")
          classMemberDeclarations
            classMemberDeclaration
              declaration
                functionDeclaration
                  modifiers
                    modifier
                      memberModifier
                        OVERRIDE("override")
                  FUN("fun")
                  simpleIdentifier
                    Identifier("equals")
                  functionValueParameters
                    LPAREN("(")
                    functionValueParameter
                      parameter
                        simpleIdentifier
                          Identifier("other")
                        COLON(":")
                        type
                          nullableType
                            typeReference
                              userType
                                simpleUserType
                                  simpleIdentifier
                                    Identifier("Any")
                            quest
                              QUEST_NO_WS("?")
                    RPAREN(")")
                  COLON(":")
                  type
                    typeReference
                      userType
                        simpleUserType
                          simpleIdentifier
                            Identifier("Boolean")
                  functionBody
                    block
                      LCURL("{")
                      NL("\n")
                      statements
                        statement
                          expression
                            disjunction
                              conjunction
                                equality
                                  comparison
                                    genericCallLikeComparison
                                      infixOperation
                                        elvisExpression
                                          infixFunctionCall
                                            rangeExpression
                                              additiveExpression
                                                multiplicativeExpression
                                                  asExpression
                                                    prefixUnaryExpression
                                                      postfixUnaryExpression
                                                        primaryExpression
                                                          ifExpression
                                                            IF("if")
                                                            LPAREN("(")
                                                            expression
                                                              disjunction
                                                                conjunction
                                                                  equality
                                                                    comparison
                                                                      genericCallLikeComparison
                                                                        infixOperation
                                                                          elvisExpression
                                                                            infixFunctionCall
                                                                              rangeExpression
                                                                                additiveExpression
                                                                                  multiplicativeExpression
                                                                                    asExpression
                                                                                      prefixUnaryExpression
                                                                                        postfixUnaryExpression
                                                                                          primaryExpression
                                                                                            simpleIdentifier
                                                                                              Identifier("other")
                                                                          isOperator
                                                                            NOT_IS("!is ")
                                                                          type
                                                                            typeReference
                                                                              userType
                                                                                simpleUserType
                                                                                  simpleIdentifier
                                                                                    Identifier("IC1")
                                                            RPAREN(")")
                                                            controlStructureBody
                                                              block
                                                                LCURL("{")
                                                                NL("\n")
                                                                statements
                                                                  statement
                                                                    expression
                                                                      disjunction
                                                                        conjunction
                                                                          equality
                                                                            comparison
                                                                              genericCallLikeComparison
                                                                                infixOperation
                                                                                  elvisExpression
                                                                                    infixFunctionCall
                                                                                      rangeExpression
                                                                                        additiveExpression
                                                                                          multiplicativeExpression
                                                                                            asExpression
                                                                                              prefixUnaryExpression
                                                                                                postfixUnaryExpression
                                                                                                  primaryExpression
                                                                                                    jumpExpression
                                                                                                      RETURN("return")
                                                                                                      expression
                                                                                                        disjunction
                                                                                                          conjunction
                                                                                                            equality
                                                                                                              comparison
                                                                                                                genericCallLikeComparison
                                                                                                                  infixOperation
                                                                                                                    elvisExpression
                                                                                                                      infixFunctionCall
                                                                                                                        rangeExpression
                                                                                                                          additiveExpression
                                                                                                                            multiplicativeExpression
                                                                                                                              asExpression
                                                                                                                                prefixUnaryExpression
                                                                                                                                  postfixUnaryExpression
                                                                                                                                    primaryExpression
                                                                                                                                      literalConstant
                                                                                                                                        BooleanLiteral("false")
                                                                  semis
                                                                    NL("\n")
                                                                RCURL("}")
                        semis
                          NL("\n")
                        statement
                          expression
                            disjunction
                              conjunction
                                equality
                                  comparison
                                    genericCallLikeComparison
                                      infixOperation
                                        elvisExpression
                                          infixFunctionCall
                                            rangeExpression
                                              additiveExpression
                                                multiplicativeExpression
                                                  asExpression
                                                    prefixUnaryExpression
                                                      postfixUnaryExpression
                                                        primaryExpression
                                                          jumpExpression
                                                            RETURN("return")
                                                            expression
                                                              disjunction
                                                                conjunction
                                                                  equality
                                                                    comparison
                                                                      genericCallLikeComparison
                                                                        infixOperation
                                                                          elvisExpression
                                                                            infixFunctionCall
                                                                              rangeExpression
                                                                                additiveExpression
                                                                                  multiplicativeExpression
                                                                                    asExpression
                                                                                      prefixUnaryExpression
                                                                                        postfixUnaryExpression
                                                                                          primaryExpression
                                                                                            simpleIdentifier
                                                                                              Identifier("x")
                                                                    equalityOperator
                                                                      EQEQ("==")
                                                                    comparison
                                                                      genericCallLikeComparison
                                                                        infixOperation
                                                                          elvisExpression
                                                                            infixFunctionCall
                                                                              rangeExpression
                                                                                additiveExpression
                                                                                  multiplicativeExpression
                                                                                    asExpression
                                                                                      prefixUnaryExpression
                                                                                        postfixUnaryExpression
                                                                                          primaryExpression
                                                                                            simpleIdentifier
                                                                                              Identifier("other")
                                                                                          postfixUnarySuffix
                                                                                            navigationSuffix
                                                                                              memberAccessOperator
                                                                                                DOT(".")
                                                                                              simpleIdentifier
                                                                                                Identifier("x")
                        semis
                          NL("\n")
                      RCURL("}")
            semis
              NL("\n")
          RCURL("}")
    semis
      NL("\n")
  topLevelObject
    declaration
      classDeclaration
        modifiers
          annotation
            singleAnnotation
              AT_PRE_WS("\n@")
              unescapedAnnotation
                userType
                  simpleUserType
                    simpleIdentifier
                      Identifier("JvmInline")
            NL("\n")
          modifier
            classModifier
              VALUE("value")
        CLASS("class")
        simpleIdentifier
          Identifier("IC2")
        primaryConstructor
          classParameters
            LPAREN("(")
            classParameter
              VAL("val")
              simpleIdentifier
                Identifier("x")
              COLON(":")
              type
                typeReference
                  userType
                    simpleUserType
                      simpleIdentifier
                        Identifier("Int")
            RPAREN(")")
        classBody
          LCURL("{")
          NL("\n")
          classMemberDeclarations
            classMemberDeclaration
              declaration
                functionDeclaration
                  modifiers
                    modifier
                      memberModifier
                        OVERRIDE("override")
                  FUN("fun")
                  simpleIdentifier
                    Identifier("hashCode")
                  functionValueParameters
                    LPAREN("(")
                    RPAREN(")")
                  functionBody
                    ASSIGNMENT("=")
                    expression
                      disjunction
                        conjunction
                          equality
                            comparison
                              genericCallLikeComparison
                                infixOperation
                                  elvisExpression
                                    infixFunctionCall
                                      rangeExpression
                                        additiveExpression
                                          multiplicativeExpression
                                            asExpression
                                              prefixUnaryExpression
                                                postfixUnaryExpression
                                                  primaryExpression
                                                    literalConstant
                                                      IntegerLiteral("0")
            semis
              NL("\n")
          RCURL("}")
    semis
      NL("\n")
  topLevelObject
    declaration
      classDeclaration
        modifiers
          annotation
            singleAnnotation
              AT_PRE_WS("\n@")
              unescapedAnnotation
                userType
                  simpleUserType
                    simpleIdentifier
                      Identifier("JvmInline")
            NL("\n")
          modifier
            classModifier
              VALUE("value")
        CLASS("class")
        simpleIdentifier
          Identifier("IC3")
        primaryConstructor
          classParameters
            LPAREN("(")
            classParameter
              VAL("val")
              simpleIdentifier
                Identifier("x")
              COLON(":")
              type
                typeReference
                  userType
                    simpleUserType
                      simpleIdentifier
                        Identifier("Int")
            RPAREN(")")
        classBody
          LCURL("{")
          NL("\n")
          classMemberDeclarations
            classMemberDeclaration
              declaration
                functionDeclaration
                  modifiers
                    modifier
                      memberModifier
                        OVERRIDE("override")
                  FUN("fun")
                  simpleIdentifier
                    Identifier("equals")
                  functionValueParameters
                    LPAREN("(")
                    functionValueParameter
                      parameter
                        simpleIdentifier
                          Identifier("other")
                        COLON(":")
                        type
                          nullableType
                            typeReference
                              userType
                                simpleUserType
                                  simpleIdentifier
                                    Identifier("Any")
                            quest
                              QUEST_NO_WS("?")
                    RPAREN(")")
                  functionBody
                    ASSIGNMENT("=")
                    expression
                      disjunction
                        conjunction
                          equality
                            comparison
                              genericCallLikeComparison
                                infixOperation
                                  elvisExpression
                                    infixFunctionCall
                                      rangeExpression
                                        additiveExpression
                                          multiplicativeExpression
                                            asExpression
                                              prefixUnaryExpression
                                                postfixUnaryExpression
                                                  primaryExpression
                                                    literalConstant
                                                      BooleanLiteral("true")
            semis
              NL("\n")
              NL("\n")
            classMemberDeclaration
              declaration
                functionDeclaration
                  modifiers
                    modifier
                      functionModifier
                        OPERATOR("operator")
                  FUN("fun")
                  simpleIdentifier
                    Identifier("equals")
                  functionValueParameters
                    LPAREN("(")
                    functionValueParameter
                      parameter
                        simpleIdentifier
                          Identifier("other")
                        COLON(":")
                        type
                          typeReference
                            userType
                              simpleUserType
                                simpleIdentifier
                                  Identifier("IC3")
                    RPAREN(")")
                  functionBody
                    ASSIGNMENT("=")
                    expression
                      disjunction
                        conjunction
                          equality
                            comparison
                              genericCallLikeComparison
                                infixOperation
                                  elvisExpression
                                    infixFunctionCall
                                      rangeExpression
                                        additiveExpression
                                          multiplicativeExpression
                                            asExpression
                                              prefixUnaryExpression
                                                postfixUnaryExpression
                                                  primaryExpression
                                                    literalConstant
                                                      BooleanLiteral("true")
            semis
              NL("\n")
              NL("\n")
            classMemberDeclaration
              declaration
                functionDeclaration
                  modifiers
                    modifier
                      memberModifier
                        OVERRIDE("override")
                  FUN("fun")
                  simpleIdentifier
                    Identifier("hashCode")
                  functionValueParameters
                    LPAREN("(")
                    RPAREN(")")
                  functionBody
                    ASSIGNMENT("=")
                    expression
                      disjunction
                        conjunction
                          equality
                            comparison
                              genericCallLikeComparison
                                infixOperation
                                  elvisExpression
                                    infixFunctionCall
                                      rangeExpression
                                        additiveExpression
                                          multiplicativeExpression
                                            asExpression
                                              prefixUnaryExpression
                                                postfixUnaryExpression
                                                  primaryExpression
                                                    literalConstant
                                                      IntegerLiteral("0")
            semis
              NL("\n")
          RCURL("}")
    semis
      NL("\n")
  topLevelObject
    declaration
      classDeclaration
        modifiers
          annotation
            singleAnnotation
              AT_PRE_WS("\n@")
              unescapedAnnotation
                userType
                  simpleUserType
                    simpleIdentifier
                      Identifier("JvmInline")
            NL("\n")
          modifier
            classModifier
              VALUE("value")
        CLASS("class")
        simpleIdentifier
          Identifier("IC4")
        typeParameters
          LANGLE("<")
          typeParameter
            simpleIdentifier
              Identifier("T")
          RANGLE(">")
        primaryConstructor
          classParameters
            LPAREN("(")
            classParameter
              VAL("val")
              simpleIdentifier
                Identifier("x")
              COLON(":")
              type
                typeReference
                  userType
                    simpleUserType
                      simpleIdentifier
                        Identifier("Int")
            RPAREN(")")
        classBody
          LCURL("{")
          NL("\n")
          classMemberDeclarations
            classMemberDeclaration
              declaration
                functionDeclaration
                  modifiers
                    modifier
                      memberModifier
                        OVERRIDE("override")
                  FUN("fun")
                  simpleIdentifier
                    Identifier("equals")
                  functionValueParameters
                    LPAREN("(")
                    functionValueParameter
                      parameter
                        simpleIdentifier
                          Identifier("other")
                        COLON(":")
                        type
                          nullableType
                            typeReference
                              userType
                                simpleUserType
                                  simpleIdentifier
                                    Identifier("Any")
                            quest
                              QUEST_NO_WS("?")
                    RPAREN(")")
                  functionBody
                    ASSIGNMENT("=")
                    expression
                      disjunction
                        conjunction
                          equality
                            comparison
                              genericCallLikeComparison
                                infixOperation
                                  elvisExpression
                                    infixFunctionCall
                                      rangeExpression
                                        additiveExpression
                                          multiplicativeExpression
                                            asExpression
                                              prefixUnaryExpression
                                                postfixUnaryExpression
                                                  primaryExpression
                                                    literalConstant
                                                      BooleanLiteral("true")
            semis
              NL("\n")
              NL("\n")
            classMemberDeclaration
              declaration
                functionDeclaration
                  FUN("fun")
                  simpleIdentifier
                    Identifier("equals")
                  functionValueParameters
                    LPAREN("(")
                    functionValueParameter
                      parameter
                        simpleIdentifier
                          Identifier("other")
                        COLON(":")
                        type
                          typeReference
                            userType
                              simpleUserType
                                simpleIdentifier
                                  Identifier("IC4")
                                typeArguments
                                  LANGLE("<")
                                  typeProjection
                                    type
                                      typeReference
                                        userType
                                          simpleUserType
                                            simpleIdentifier
                                              Identifier("T")
                                  RANGLE(">")
                    RPAREN(")")
                  functionBody
                    ASSIGNMENT("=")
                    expression
                      disjunction
                        conjunction
                          equality
                            comparison
                              genericCallLikeComparison
                                infixOperation
                                  elvisExpression
                                    infixFunctionCall
                                      rangeExpression
                                        additiveExpression
                                          multiplicativeExpression
                                            asExpression
                                              prefixUnaryExpression
                                                postfixUnaryExpression
                                                  primaryExpression
                                                    literalConstant
                                                      BooleanLiteral("true")
            semis
              NL("\n")
              NL("\n")
            classMemberDeclaration
              declaration
                functionDeclaration
                  modifiers
                    modifier
                      memberModifier
                        OVERRIDE("override")
                  FUN("fun")
                  simpleIdentifier
                    Identifier("hashCode")
                  functionValueParameters
                    LPAREN("(")
                    RPAREN(")")
                  functionBody
                    ASSIGNMENT("=")
                    expression
                      disjunction
                        conjunction
                          equality
                            comparison
                              genericCallLikeComparison
                                infixOperation
                                  elvisExpression
                                    infixFunctionCall
                                      rangeExpression
                                        additiveExpression
                                          multiplicativeExpression
                                            asExpression
                                              prefixUnaryExpression
                                                postfixUnaryExpression
                                                  primaryExpression
                                                    literalConstant
                                                      IntegerLiteral("0")
            semis
              NL("\n")
          RCURL("}")
    semis
      NL("\n")
  EOF("<EOF>")
