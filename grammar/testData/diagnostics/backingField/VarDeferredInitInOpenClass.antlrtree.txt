File: VarDeferredInitInOpenClass.kt - 5de6fdada1ebc05e76cd774159cf0e38
  NL("\n")
  NL("\n")
  NL("\n")
  NL("\n")
  NL("\n")
  NL("\n")
  NL("\n")
  NL("\n")
  NL("\n")
  NL("\n")
  NL("\n")
  NL("\n")
  NL("\n")
  NL("\n")
  NL("\n")
  NL("\n")
  NL("\n")
  NL("\n")
  NL("\n")
  NL("\n")
  NL("\n")
  NL("\n")
  NL("\n")
  NL("\n")
  NL("\n")
  NL("\n")
  NL("\n")
  NL("\n")
  NL("\n")
  NL("\n")
  NL("\n")
  NL("\n")
  NL("\n")
  packageHeader
  importList
  topLevelObject
    declaration
      classDeclaration
        modifiers
          modifier
            inheritanceModifier
              OPEN("open")
        CLASS("class")
        simpleIdentifier
          Identifier("Foo")
  LCURL("{")
  NL("\n")
  NL("\n")
  NL("\n")
  topLevelObject
    declaration
      propertyDeclaration
        VAR("var")
        variableDeclaration
          simpleIdentifier
            Identifier("a00")
          COLON(":")
          type
            typeReference
              userType
                simpleUserType
                  simpleIdentifier
                    Identifier("Int")
    semis
      SEMICOLON(";")
  topLevelObject
    declaration
      propertyDeclaration
        VAR("var")
        variableDeclaration
          simpleIdentifier
            Identifier("a01")
          COLON(":")
          type
            typeReference
              userType
                simpleUserType
                  simpleIdentifier
                    Identifier("Int")
        semi
          SEMICOLON(";")
        setter
          SET("set")
          LPAREN("(")
          functionValueParameterWithOptionalType
            parameterWithOptionalType
              simpleIdentifier
                Identifier("v")
          RPAREN(")")
          functionBody
            block
              LCURL("{")
              statements
                statement
                  assignment
                    directlyAssignableExpression
                      simpleIdentifier
                        FIELD("field")
                    ASSIGNMENT("=")
                    expression
                      disjunction
                        conjunction
                          equality
                            comparison
                              genericCallLikeComparison
                                infixOperation
                                  elvisExpression
                                    infixFunctionCall
                                      rangeExpression
                                        additiveExpression
                                          multiplicativeExpression
                                            asExpression
                                              prefixUnaryExpression
                                                postfixUnaryExpression
                                                  primaryExpression
                                                    simpleIdentifier
                                                      Identifier("v")
              RCURL("}")
    semis
      SEMICOLON(";")
  topLevelObject
    declaration
      propertyDeclaration
        VAR("var")
        variableDeclaration
          simpleIdentifier
            Identifier("a02")
          COLON(":")
          type
            typeReference
              userType
                simpleUserType
                  simpleIdentifier
                    Identifier("Int")
        semi
          SEMICOLON(";")
        setter
          SET("set")
    semis
      SEMICOLON(";")
  topLevelObject
    declaration
      propertyDeclaration
        VAR("var")
        variableDeclaration
          simpleIdentifier
            Identifier("a03")
          COLON(":")
          type
            typeReference
              userType
                simpleUserType
                  simpleIdentifier
                    Identifier("Int")
        semi
          SEMICOLON(";")
        setter
          SET("set")
          LPAREN("(")
          functionValueParameterWithOptionalType
            parameterWithOptionalType
              simpleIdentifier
                Identifier("v")
          RPAREN(")")
          functionBody
            block
              LCURL("{")
              statements
              RCURL("}")
    semis
      SEMICOLON(";")
      NL("\n")
  topLevelObject
    declaration
      propertyDeclaration
        VAR("var")
        variableDeclaration
          simpleIdentifier
            Identifier("e00")
          COLON(":")
          type
            typeReference
              userType
                simpleUserType
                  simpleIdentifier
                    Identifier("Int")
    semis
      SEMICOLON(";")
  topLevelObject
    declaration
      propertyDeclaration
        VAR("var")
        variableDeclaration
          simpleIdentifier
            Identifier("e01")
          COLON(":")
          type
            typeReference
              userType
                simpleUserType
                  simpleIdentifier
                    Identifier("Int")
        semi
          SEMICOLON(";")
        setter
          SET("set")
          LPAREN("(")
          functionValueParameterWithOptionalType
            parameterWithOptionalType
              simpleIdentifier
                Identifier("v")
          RPAREN(")")
          functionBody
            block
              LCURL("{")
              statements
                statement
                  assignment
                    directlyAssignableExpression
                      simpleIdentifier
                        FIELD("field")
                    ASSIGNMENT("=")
                    expression
                      disjunction
                        conjunction
                          equality
                            comparison
                              genericCallLikeComparison
                                infixOperation
                                  elvisExpression
                                    infixFunctionCall
                                      rangeExpression
                                        additiveExpression
                                          multiplicativeExpression
                                            asExpression
                                              prefixUnaryExpression
                                                postfixUnaryExpression
                                                  primaryExpression
                                                    simpleIdentifier
                                                      Identifier("v")
              RCURL("}")
    semis
      SEMICOLON(";")
  topLevelObject
    declaration
      propertyDeclaration
        VAR("var")
        variableDeclaration
          simpleIdentifier
            Identifier("e02")
          COLON(":")
          type
            typeReference
              userType
                simpleUserType
                  simpleIdentifier
                    Identifier("Int")
        semi
          SEMICOLON(";")
        setter
          SET("set")
    semis
      SEMICOLON(";")
  topLevelObject
    declaration
      propertyDeclaration
        VAR("var")
        variableDeclaration
          simpleIdentifier
            Identifier("e03")
          COLON(":")
          type
            typeReference
              userType
                simpleUserType
                  simpleIdentifier
                    Identifier("Int")
        semi
          SEMICOLON(";")
        setter
          SET("set")
          LPAREN("(")
          functionValueParameterWithOptionalType
            parameterWithOptionalType
              simpleIdentifier
                Identifier("v")
          RPAREN(")")
          functionBody
            block
              LCURL("{")
              statements
              RCURL("}")
    semis
      SEMICOLON(";")
      NL("\n")
  topLevelObject
    declaration
      propertyDeclaration
        VAR("var")
        variableDeclaration
          simpleIdentifier
            Identifier("c00")
          COLON(":")
          type
            typeReference
              userType
                simpleUserType
                  simpleIdentifier
                    Identifier("Int")
        ASSIGNMENT("=")
        expression
          disjunction
            conjunction
              equality
                comparison
                  genericCallLikeComparison
                    infixOperation
                      elvisExpression
                        infixFunctionCall
                          rangeExpression
                            additiveExpression
                              multiplicativeExpression
                                asExpression
                                  prefixUnaryExpression
                                    postfixUnaryExpression
                                      primaryExpression
                                        literalConstant
                                          IntegerLiteral("1")
    semis
      SEMICOLON(";")
  topLevelObject
    declaration
      propertyDeclaration
        VAR("var")
        variableDeclaration
          simpleIdentifier
            Identifier("c01")
          COLON(":")
          type
            typeReference
              userType
                simpleUserType
                  simpleIdentifier
                    Identifier("Int")
        ASSIGNMENT("=")
        expression
          disjunction
            conjunction
              equality
                comparison
                  genericCallLikeComparison
                    infixOperation
                      elvisExpression
                        infixFunctionCall
                          rangeExpression
                            additiveExpression
                              multiplicativeExpression
                                asExpression
                                  prefixUnaryExpression
                                    postfixUnaryExpression
                                      primaryExpression
                                        literalConstant
                                          IntegerLiteral("1")
        semi
          SEMICOLON(";")
        setter
          SET("set")
          LPAREN("(")
          functionValueParameterWithOptionalType
            parameterWithOptionalType
              simpleIdentifier
                Identifier("v")
          RPAREN(")")
          functionBody
            block
              LCURL("{")
              statements
                statement
                  assignment
                    directlyAssignableExpression
                      simpleIdentifier
                        FIELD("field")
                    ASSIGNMENT("=")
                    expression
                      disjunction
                        conjunction
                          equality
                            comparison
                              genericCallLikeComparison
                                infixOperation
                                  elvisExpression
                                    infixFunctionCall
                                      rangeExpression
                                        additiveExpression
                                          multiplicativeExpression
                                            asExpression
                                              prefixUnaryExpression
                                                postfixUnaryExpression
                                                  primaryExpression
                                                    simpleIdentifier
                                                      Identifier("v")
              RCURL("}")
    semis
      SEMICOLON(";")
  topLevelObject
    declaration
      propertyDeclaration
        VAR("var")
        variableDeclaration
          simpleIdentifier
            Identifier("c02")
          COLON(":")
          type
            typeReference
              userType
                simpleUserType
                  simpleIdentifier
                    Identifier("Int")
        ASSIGNMENT("=")
        expression
          disjunction
            conjunction
              equality
                comparison
                  genericCallLikeComparison
                    infixOperation
                      elvisExpression
                        infixFunctionCall
                          rangeExpression
                            additiveExpression
                              multiplicativeExpression
                                asExpression
                                  prefixUnaryExpression
                                    postfixUnaryExpression
                                      primaryExpression
                                        literalConstant
                                          IntegerLiteral("1")
        semi
          SEMICOLON(";")
        setter
          SET("set")
    semis
      SEMICOLON(";")
  topLevelObject
    declaration
      propertyDeclaration
        VAR("var")
        variableDeclaration
          simpleIdentifier
            Identifier("c03")
          COLON(":")
          type
            typeReference
              userType
                simpleUserType
                  simpleIdentifier
                    Identifier("Int")
        ASSIGNMENT("=")
        expression
          disjunction
            conjunction
              equality
                comparison
                  genericCallLikeComparison
                    infixOperation
                      elvisExpression
                        infixFunctionCall
                          rangeExpression
                            additiveExpression
                              multiplicativeExpression
                                asExpression
                                  prefixUnaryExpression
                                    postfixUnaryExpression
                                      primaryExpression
                                        literalConstant
                                          IntegerLiteral("1")
        semi
          SEMICOLON(";")
        setter
          SET("set")
          LPAREN("(")
          functionValueParameterWithOptionalType
            parameterWithOptionalType
              simpleIdentifier
                Identifier("v")
          RPAREN(")")
          functionBody
            block
              LCURL("{")
              statements
              RCURL("}")
    semis
      SEMICOLON(";")
      NL("\n")
  topLevelObject
    declaration
      propertyDeclaration
        modifiers
          modifier
            inheritanceModifier
              OPEN("open")
        VAR("var")
        variableDeclaration
          simpleIdentifier
            Identifier("b00")
          COLON(":")
          type
            typeReference
              userType
                simpleUserType
                  simpleIdentifier
                    Identifier("Int")
    semis
      SEMICOLON(";")
  topLevelObject
    declaration
      propertyDeclaration
        modifiers
          modifier
            inheritanceModifier
              OPEN("open")
        VAR("var")
        variableDeclaration
          simpleIdentifier
            Identifier("b01")
          COLON(":")
          type
            typeReference
              userType
                simpleUserType
                  simpleIdentifier
                    Identifier("Int")
        semi
          SEMICOLON(";")
        setter
          SET("set")
          LPAREN("(")
          functionValueParameterWithOptionalType
            parameterWithOptionalType
              simpleIdentifier
                Identifier("v")
          RPAREN(")")
          functionBody
            block
              LCURL("{")
              statements
                statement
                  assignment
                    directlyAssignableExpression
                      simpleIdentifier
                        FIELD("field")
                    ASSIGNMENT("=")
                    expression
                      disjunction
                        conjunction
                          equality
                            comparison
                              genericCallLikeComparison
                                infixOperation
                                  elvisExpression
                                    infixFunctionCall
                                      rangeExpression
                                        additiveExpression
                                          multiplicativeExpression
                                            asExpression
                                              prefixUnaryExpression
                                                postfixUnaryExpression
                                                  primaryExpression
                                                    simpleIdentifier
                                                      Identifier("v")
              RCURL("}")
    semis
      SEMICOLON(";")
  topLevelObject
    declaration
      propertyDeclaration
        modifiers
          modifier
            inheritanceModifier
              OPEN("open")
        VAR("var")
        variableDeclaration
          simpleIdentifier
            Identifier("b02")
          COLON(":")
          type
            typeReference
              userType
                simpleUserType
                  simpleIdentifier
                    Identifier("Int")
        semi
          SEMICOLON(";")
        setter
          SET("set")
    semis
      SEMICOLON(";")
  topLevelObject
    declaration
      propertyDeclaration
        modifiers
          modifier
            inheritanceModifier
              OPEN("open")
        VAR("var")
        variableDeclaration
          simpleIdentifier
            Identifier("b03")
          COLON(":")
          type
            typeReference
              userType
                simpleUserType
                  simpleIdentifier
                    Identifier("Int")
        semi
          SEMICOLON(";")
        setter
          SET("set")
          LPAREN("(")
          functionValueParameterWithOptionalType
            parameterWithOptionalType
              simpleIdentifier
                Identifier("v")
          RPAREN(")")
          functionBody
            block
              LCURL("{")
              statements
              RCURL("}")
    semis
      SEMICOLON(";")
      NL("\n")
  topLevelObject
    declaration
      propertyDeclaration
        modifiers
          modifier
            inheritanceModifier
              OPEN("open")
        VAR("var")
        variableDeclaration
          simpleIdentifier
            Identifier("f00")
          COLON(":")
          type
            typeReference
              userType
                simpleUserType
                  simpleIdentifier
                    Identifier("Int")
    semis
      SEMICOLON(";")
  topLevelObject
    declaration
      propertyDeclaration
        modifiers
          modifier
            inheritanceModifier
              OPEN("open")
        VAR("var")
        variableDeclaration
          simpleIdentifier
            Identifier("f01")
          COLON(":")
          type
            typeReference
              userType
                simpleUserType
                  simpleIdentifier
                    Identifier("Int")
        semi
          SEMICOLON(";")
        setter
          SET("set")
          LPAREN("(")
          functionValueParameterWithOptionalType
            parameterWithOptionalType
              simpleIdentifier
                Identifier("v")
          RPAREN(")")
          functionBody
            block
              LCURL("{")
              statements
                statement
                  assignment
                    directlyAssignableExpression
                      simpleIdentifier
                        FIELD("field")
                    ASSIGNMENT("=")
                    expression
                      disjunction
                        conjunction
                          equality
                            comparison
                              genericCallLikeComparison
                                infixOperation
                                  elvisExpression
                                    infixFunctionCall
                                      rangeExpression
                                        additiveExpression
                                          multiplicativeExpression
                                            asExpression
                                              prefixUnaryExpression
                                                postfixUnaryExpression
                                                  primaryExpression
                                                    simpleIdentifier
                                                      Identifier("v")
              RCURL("}")
    semis
      SEMICOLON(";")
  topLevelObject
    declaration
      propertyDeclaration
        modifiers
          modifier
            inheritanceModifier
              OPEN("open")
        VAR("var")
        variableDeclaration
          simpleIdentifier
            Identifier("f02")
          COLON(":")
          type
            typeReference
              userType
                simpleUserType
                  simpleIdentifier
                    Identifier("Int")
        semi
          SEMICOLON(";")
        setter
          SET("set")
    semis
      SEMICOLON(";")
  topLevelObject
    declaration
      propertyDeclaration
        modifiers
          modifier
            inheritanceModifier
              OPEN("open")
        VAR("var")
        variableDeclaration
          simpleIdentifier
            Identifier("f03")
          COLON(":")
          type
            typeReference
              userType
                simpleUserType
                  simpleIdentifier
                    Identifier("Int")
        semi
          SEMICOLON(";")
        setter
          SET("set")
          LPAREN("(")
          functionValueParameterWithOptionalType
            parameterWithOptionalType
              simpleIdentifier
                Identifier("v")
          RPAREN(")")
          functionBody
            block
              LCURL("{")
              statements
              RCURL("}")
    semis
      SEMICOLON(";")
      NL("\n")
  topLevelObject
    declaration
      propertyDeclaration
        modifiers
          modifier
            inheritanceModifier
              OPEN("open")
        VAR("var")
        variableDeclaration
          simpleIdentifier
            Identifier("d00")
          COLON(":")
          type
            typeReference
              userType
                simpleUserType
                  simpleIdentifier
                    Identifier("Int")
        ASSIGNMENT("=")
        expression
          disjunction
            conjunction
              equality
                comparison
                  genericCallLikeComparison
                    infixOperation
                      elvisExpression
                        infixFunctionCall
                          rangeExpression
                            additiveExpression
                              multiplicativeExpression
                                asExpression
                                  prefixUnaryExpression
                                    postfixUnaryExpression
                                      primaryExpression
                                        literalConstant
                                          IntegerLiteral("1")
    semis
      SEMICOLON(";")
  topLevelObject
    declaration
      propertyDeclaration
        modifiers
          modifier
            inheritanceModifier
              OPEN("open")
        VAR("var")
        variableDeclaration
          simpleIdentifier
            Identifier("d01")
          COLON(":")
          type
            typeReference
              userType
                simpleUserType
                  simpleIdentifier
                    Identifier("Int")
        ASSIGNMENT("=")
        expression
          disjunction
            conjunction
              equality
                comparison
                  genericCallLikeComparison
                    infixOperation
                      elvisExpression
                        infixFunctionCall
                          rangeExpression
                            additiveExpression
                              multiplicativeExpression
                                asExpression
                                  prefixUnaryExpression
                                    postfixUnaryExpression
                                      primaryExpression
                                        literalConstant
                                          IntegerLiteral("1")
        semi
          SEMICOLON(";")
        setter
          SET("set")
          LPAREN("(")
          functionValueParameterWithOptionalType
            parameterWithOptionalType
              simpleIdentifier
                Identifier("v")
          RPAREN(")")
          functionBody
            block
              LCURL("{")
              statements
                statement
                  assignment
                    directlyAssignableExpression
                      simpleIdentifier
                        FIELD("field")
                    ASSIGNMENT("=")
                    expression
                      disjunction
                        conjunction
                          equality
                            comparison
                              genericCallLikeComparison
                                infixOperation
                                  elvisExpression
                                    infixFunctionCall
                                      rangeExpression
                                        additiveExpression
                                          multiplicativeExpression
                                            asExpression
                                              prefixUnaryExpression
                                                postfixUnaryExpression
                                                  primaryExpression
                                                    simpleIdentifier
                                                      Identifier("v")
              RCURL("}")
    semis
      SEMICOLON(";")
  topLevelObject
    declaration
      propertyDeclaration
        modifiers
          modifier
            inheritanceModifier
              OPEN("open")
        VAR("var")
        variableDeclaration
          simpleIdentifier
            Identifier("d02")
          COLON(":")
          type
            typeReference
              userType
                simpleUserType
                  simpleIdentifier
                    Identifier("Int")
        ASSIGNMENT("=")
        expression
          disjunction
            conjunction
              equality
                comparison
                  genericCallLikeComparison
                    infixOperation
                      elvisExpression
                        infixFunctionCall
                          rangeExpression
                            additiveExpression
                              multiplicativeExpression
                                asExpression
                                  prefixUnaryExpression
                                    postfixUnaryExpression
                                      primaryExpression
                                        literalConstant
                                          IntegerLiteral("1")
        semi
          SEMICOLON(";")
        setter
          SET("set")
    semis
      SEMICOLON(";")
  topLevelObject
    declaration
      propertyDeclaration
        modifiers
          modifier
            inheritanceModifier
              OPEN("open")
        VAR("var")
        variableDeclaration
          simpleIdentifier
            Identifier("d03")
          COLON(":")
          type
            typeReference
              userType
                simpleUserType
                  simpleIdentifier
                    Identifier("Int")
        ASSIGNMENT("=")
        expression
          disjunction
            conjunction
              equality
                comparison
                  genericCallLikeComparison
                    infixOperation
                      elvisExpression
                        infixFunctionCall
                          rangeExpression
                            additiveExpression
                              multiplicativeExpression
                                asExpression
                                  prefixUnaryExpression
                                    postfixUnaryExpression
                                      primaryExpression
                                        literalConstant
                                          IntegerLiteral("1")
        semi
          SEMICOLON(";")
        setter
          SET("set")
          LPAREN("(")
          functionValueParameterWithOptionalType
            parameterWithOptionalType
              simpleIdentifier
                Identifier("v")
          RPAREN(")")
          functionBody
            block
              LCURL("{")
              statements
              RCURL("}")
    semis
      SEMICOLON(";")
      NL("\n")
      NL("\n")
  topLevelObject
    declaration
      propertyDeclaration
        VAR("var")
        variableDeclaration
          simpleIdentifier
            Identifier("a10")
          COLON(":")
          type
            typeReference
              userType
                simpleUserType
                  simpleIdentifier
                    Identifier("Int")
        semi
          SEMICOLON(";")
        getter
          GET("get")
          LPAREN("(")
          RPAREN(")")
          functionBody
            ASSIGNMENT("=")
            expression
              disjunction
                conjunction
                  equality
                    comparison
                      genericCallLikeComparison
                        infixOperation
                          elvisExpression
                            infixFunctionCall
                              rangeExpression
                                additiveExpression
                                  multiplicativeExpression
                                    asExpression
                                      prefixUnaryExpression
                                        postfixUnaryExpression
                                          primaryExpression
                                            simpleIdentifier
                                              FIELD("field")
    semis
      SEMICOLON(";")
  topLevelObject
    declaration
      propertyDeclaration
        VAR("var")
        variableDeclaration
          simpleIdentifier
            Identifier("a11")
          COLON(":")
          type
            typeReference
              userType
                simpleUserType
                  simpleIdentifier
                    Identifier("Int")
        semi
          SEMICOLON(";")
        setter
          SET("set")
          LPAREN("(")
          functionValueParameterWithOptionalType
            parameterWithOptionalType
              simpleIdentifier
                Identifier("v")
          RPAREN(")")
          functionBody
            block
              LCURL("{")
              statements
                statement
                  assignment
                    directlyAssignableExpression
                      simpleIdentifier
                        FIELD("field")
                    ASSIGNMENT("=")
                    expression
                      disjunction
                        conjunction
                          equality
                            comparison
                              genericCallLikeComparison
                                infixOperation
                                  elvisExpression
                                    infixFunctionCall
                                      rangeExpression
                                        additiveExpression
                                          multiplicativeExpression
                                            asExpression
                                              prefixUnaryExpression
                                                postfixUnaryExpression
                                                  primaryExpression
                                                    simpleIdentifier
                                                      Identifier("v")
              RCURL("}")
  GET("get")
  LPAREN("(")
  RPAREN(")")
  ASSIGNMENT("=")
  FIELD("field")
  SEMICOLON(";")
  topLevelObject
    declaration
      propertyDeclaration
        VAR("var")
        variableDeclaration
          simpleIdentifier
            Identifier("a12")
          COLON(":")
          type
            typeReference
              userType
                simpleUserType
                  simpleIdentifier
                    Identifier("Int")
        semi
          SEMICOLON(";")
        setter
          SET("set")
  GET("get")
  LPAREN("(")
  RPAREN(")")
  ASSIGNMENT("=")
  FIELD("field")
  SEMICOLON(";")
  topLevelObject
    declaration
      propertyDeclaration
        VAR("var")
        variableDeclaration
          simpleIdentifier
            Identifier("a13")
          COLON(":")
          type
            typeReference
              userType
                simpleUserType
                  simpleIdentifier
                    Identifier("Int")
        semi
          SEMICOLON(";")
        setter
          SET("set")
          LPAREN("(")
          functionValueParameterWithOptionalType
            parameterWithOptionalType
              simpleIdentifier
                Identifier("v")
          RPAREN(")")
          functionBody
            block
              LCURL("{")
              statements
              RCURL("}")
  GET("get")
  LPAREN("(")
  RPAREN(")")
  ASSIGNMENT("=")
  FIELD("field")
  SEMICOLON(";")
  NL("\n")
  topLevelObject
    declaration
      propertyDeclaration
        VAR("var")
        variableDeclaration
          simpleIdentifier
            Identifier("e10")
          COLON(":")
          type
            typeReference
              userType
                simpleUserType
                  simpleIdentifier
                    Identifier("Int")
        semi
          SEMICOLON(";")
        getter
          GET("get")
          LPAREN("(")
          RPAREN(")")
          functionBody
            ASSIGNMENT("=")
            expression
              disjunction
                conjunction
                  equality
                    comparison
                      genericCallLikeComparison
                        infixOperation
                          elvisExpression
                            infixFunctionCall
                              rangeExpression
                                additiveExpression
                                  multiplicativeExpression
                                    asExpression
                                      prefixUnaryExpression
                                        postfixUnaryExpression
                                          primaryExpression
                                            simpleIdentifier
                                              FIELD("field")
    semis
      SEMICOLON(";")
  topLevelObject
    declaration
      propertyDeclaration
        VAR("var")
        variableDeclaration
          simpleIdentifier
            Identifier("e11")
          COLON(":")
          type
            typeReference
              userType
                simpleUserType
                  simpleIdentifier
                    Identifier("Int")
        semi
          SEMICOLON(";")
        setter
          SET("set")
          LPAREN("(")
          functionValueParameterWithOptionalType
            parameterWithOptionalType
              simpleIdentifier
                Identifier("v")
          RPAREN(")")
          functionBody
            block
              LCURL("{")
              statements
                statement
                  assignment
                    directlyAssignableExpression
                      simpleIdentifier
                        FIELD("field")
                    ASSIGNMENT("=")
                    expression
                      disjunction
                        conjunction
                          equality
                            comparison
                              genericCallLikeComparison
                                infixOperation
                                  elvisExpression
                                    infixFunctionCall
                                      rangeExpression
                                        additiveExpression
                                          multiplicativeExpression
                                            asExpression
                                              prefixUnaryExpression
                                                postfixUnaryExpression
                                                  primaryExpression
                                                    simpleIdentifier
                                                      Identifier("v")
              RCURL("}")
  GET("get")
  LPAREN("(")
  RPAREN(")")
  ASSIGNMENT("=")
  FIELD("field")
  SEMICOLON(";")
  topLevelObject
    declaration
      propertyDeclaration
        VAR("var")
        variableDeclaration
          simpleIdentifier
            Identifier("e12")
          COLON(":")
          type
            typeReference
              userType
                simpleUserType
                  simpleIdentifier
                    Identifier("Int")
        semi
          SEMICOLON(";")
        setter
          SET("set")
  GET("get")
  LPAREN("(")
  RPAREN(")")
  ASSIGNMENT("=")
  FIELD("field")
  SEMICOLON(";")
  topLevelObject
    declaration
      propertyDeclaration
        VAR("var")
        variableDeclaration
          simpleIdentifier
            Identifier("e13")
          COLON(":")
          type
            typeReference
              userType
                simpleUserType
                  simpleIdentifier
                    Identifier("Int")
        semi
          SEMICOLON(";")
        setter
          SET("set")
          LPAREN("(")
          functionValueParameterWithOptionalType
            parameterWithOptionalType
              simpleIdentifier
                Identifier("v")
          RPAREN(")")
          functionBody
            block
              LCURL("{")
              statements
              RCURL("}")
  GET("get")
  LPAREN("(")
  RPAREN(")")
  ASSIGNMENT("=")
  FIELD("field")
  SEMICOLON(";")
  NL("\n")
  topLevelObject
    declaration
      propertyDeclaration
        VAR("var")
        variableDeclaration
          simpleIdentifier
            Identifier("c10")
          COLON(":")
          type
            typeReference
              userType
                simpleUserType
                  simpleIdentifier
                    Identifier("Int")
        ASSIGNMENT("=")
        expression
          disjunction
            conjunction
              equality
                comparison
                  genericCallLikeComparison
                    infixOperation
                      elvisExpression
                        infixFunctionCall
                          rangeExpression
                            additiveExpression
                              multiplicativeExpression
                                asExpression
                                  prefixUnaryExpression
                                    postfixUnaryExpression
                                      primaryExpression
                                        literalConstant
                                          IntegerLiteral("1")
        semi
          SEMICOLON(";")
        getter
          GET("get")
          LPAREN("(")
          RPAREN(")")
          functionBody
            ASSIGNMENT("=")
            expression
              disjunction
                conjunction
                  equality
                    comparison
                      genericCallLikeComparison
                        infixOperation
                          elvisExpression
                            infixFunctionCall
                              rangeExpression
                                additiveExpression
                                  multiplicativeExpression
                                    asExpression
                                      prefixUnaryExpression
                                        postfixUnaryExpression
                                          primaryExpression
                                            simpleIdentifier
                                              FIELD("field")
    semis
      SEMICOLON(";")
  topLevelObject
    declaration
      propertyDeclaration
        VAR("var")
        variableDeclaration
          simpleIdentifier
            Identifier("c11")
          COLON(":")
          type
            typeReference
              userType
                simpleUserType
                  simpleIdentifier
                    Identifier("Int")
        ASSIGNMENT("=")
        expression
          disjunction
            conjunction
              equality
                comparison
                  genericCallLikeComparison
                    infixOperation
                      elvisExpression
                        infixFunctionCall
                          rangeExpression
                            additiveExpression
                              multiplicativeExpression
                                asExpression
                                  prefixUnaryExpression
                                    postfixUnaryExpression
                                      primaryExpression
                                        literalConstant
                                          IntegerLiteral("1")
        semi
          SEMICOLON(";")
        setter
          SET("set")
          LPAREN("(")
          functionValueParameterWithOptionalType
            parameterWithOptionalType
              simpleIdentifier
                Identifier("v")
          RPAREN(")")
          functionBody
            block
              LCURL("{")
              statements
                statement
                  assignment
                    directlyAssignableExpression
                      simpleIdentifier
                        FIELD("field")
                    ASSIGNMENT("=")
                    expression
                      disjunction
                        conjunction
                          equality
                            comparison
                              genericCallLikeComparison
                                infixOperation
                                  elvisExpression
                                    infixFunctionCall
                                      rangeExpression
                                        additiveExpression
                                          multiplicativeExpression
                                            asExpression
                                              prefixUnaryExpression
                                                postfixUnaryExpression
                                                  primaryExpression
                                                    simpleIdentifier
                                                      Identifier("v")
              RCURL("}")
  GET("get")
  LPAREN("(")
  RPAREN(")")
  ASSIGNMENT("=")
  FIELD("field")
  SEMICOLON(";")
  topLevelObject
    declaration
      propertyDeclaration
        VAR("var")
        variableDeclaration
          simpleIdentifier
            Identifier("c12")
          COLON(":")
          type
            typeReference
              userType
                simpleUserType
                  simpleIdentifier
                    Identifier("Int")
        ASSIGNMENT("=")
        expression
          disjunction
            conjunction
              equality
                comparison
                  genericCallLikeComparison
                    infixOperation
                      elvisExpression
                        infixFunctionCall
                          rangeExpression
                            additiveExpression
                              multiplicativeExpression
                                asExpression
                                  prefixUnaryExpression
                                    postfixUnaryExpression
                                      primaryExpression
                                        literalConstant
                                          IntegerLiteral("1")
        semi
          SEMICOLON(";")
        setter
          SET("set")
  GET("get")
  LPAREN("(")
  RPAREN(")")
  ASSIGNMENT("=")
  FIELD("field")
  SEMICOLON(";")
  topLevelObject
    declaration
      propertyDeclaration
        VAR("var")
        variableDeclaration
          simpleIdentifier
            Identifier("c13")
          COLON(":")
          type
            typeReference
              userType
                simpleUserType
                  simpleIdentifier
                    Identifier("Int")
        ASSIGNMENT("=")
        expression
          disjunction
            conjunction
              equality
                comparison
                  genericCallLikeComparison
                    infixOperation
                      elvisExpression
                        infixFunctionCall
                          rangeExpression
                            additiveExpression
                              multiplicativeExpression
                                asExpression
                                  prefixUnaryExpression
                                    postfixUnaryExpression
                                      primaryExpression
                                        literalConstant
                                          IntegerLiteral("1")
        semi
          SEMICOLON(";")
        setter
          SET("set")
          LPAREN("(")
          functionValueParameterWithOptionalType
            parameterWithOptionalType
              simpleIdentifier
                Identifier("v")
          RPAREN(")")
          functionBody
            block
              LCURL("{")
              statements
              RCURL("}")
  GET("get")
  LPAREN("(")
  RPAREN(")")
  ASSIGNMENT("=")
  FIELD("field")
  SEMICOLON(";")
  NL("\n")
  topLevelObject
    declaration
      propertyDeclaration
        modifiers
          modifier
            inheritanceModifier
              OPEN("open")
        VAR("var")
        variableDeclaration
          simpleIdentifier
            Identifier("b10")
          COLON(":")
          type
            typeReference
              userType
                simpleUserType
                  simpleIdentifier
                    Identifier("Int")
        semi
          SEMICOLON(";")
        getter
          GET("get")
          LPAREN("(")
          RPAREN(")")
          functionBody
            ASSIGNMENT("=")
            expression
              disjunction
                conjunction
                  equality
                    comparison
                      genericCallLikeComparison
                        infixOperation
                          elvisExpression
                            infixFunctionCall
                              rangeExpression
                                additiveExpression
                                  multiplicativeExpression
                                    asExpression
                                      prefixUnaryExpression
                                        postfixUnaryExpression
                                          primaryExpression
                                            simpleIdentifier
                                              FIELD("field")
    semis
      SEMICOLON(";")
  topLevelObject
    declaration
      propertyDeclaration
        modifiers
          modifier
            inheritanceModifier
              OPEN("open")
        VAR("var")
        variableDeclaration
          simpleIdentifier
            Identifier("b11")
          COLON(":")
          type
            typeReference
              userType
                simpleUserType
                  simpleIdentifier
                    Identifier("Int")
        semi
          SEMICOLON(";")
        setter
          SET("set")
          LPAREN("(")
          functionValueParameterWithOptionalType
            parameterWithOptionalType
              simpleIdentifier
                Identifier("v")
          RPAREN(")")
          functionBody
            block
              LCURL("{")
              statements
                statement
                  assignment
                    directlyAssignableExpression
                      simpleIdentifier
                        FIELD("field")
                    ASSIGNMENT("=")
                    expression
                      disjunction
                        conjunction
                          equality
                            comparison
                              genericCallLikeComparison
                                infixOperation
                                  elvisExpression
                                    infixFunctionCall
                                      rangeExpression
                                        additiveExpression
                                          multiplicativeExpression
                                            asExpression
                                              prefixUnaryExpression
                                                postfixUnaryExpression
                                                  primaryExpression
                                                    simpleIdentifier
                                                      Identifier("v")
              RCURL("}")
  GET("get")
  LPAREN("(")
  RPAREN(")")
  ASSIGNMENT("=")
  FIELD("field")
  SEMICOLON(";")
  topLevelObject
    declaration
      propertyDeclaration
        modifiers
          modifier
            inheritanceModifier
              OPEN("open")
        VAR("var")
        variableDeclaration
          simpleIdentifier
            Identifier("b12")
          COLON(":")
          type
            typeReference
              userType
                simpleUserType
                  simpleIdentifier
                    Identifier("Int")
        semi
          SEMICOLON(";")
        setter
          SET("set")
  GET("get")
  LPAREN("(")
  RPAREN(")")
  ASSIGNMENT("=")
  FIELD("field")
  SEMICOLON(";")
  topLevelObject
    declaration
      propertyDeclaration
        modifiers
          modifier
            inheritanceModifier
              OPEN("open")
        VAR("var")
        variableDeclaration
          simpleIdentifier
            Identifier("b13")
          COLON(":")
          type
            typeReference
              userType
                simpleUserType
                  simpleIdentifier
                    Identifier("Int")
        semi
          SEMICOLON(";")
        setter
          SET("set")
          LPAREN("(")
          functionValueParameterWithOptionalType
            parameterWithOptionalType
              simpleIdentifier
                Identifier("v")
          RPAREN(")")
          functionBody
            block
              LCURL("{")
              statements
              RCURL("}")
  GET("get")
  LPAREN("(")
  RPAREN(")")
  ASSIGNMENT("=")
  FIELD("field")
  SEMICOLON(";")
  NL("\n")
  topLevelObject
    declaration
      propertyDeclaration
        modifiers
          modifier
            inheritanceModifier
              OPEN("open")
        VAR("var")
        variableDeclaration
          simpleIdentifier
            Identifier("f10")
          COLON(":")
          type
            typeReference
              userType
                simpleUserType
                  simpleIdentifier
                    Identifier("Int")
        semi
          SEMICOLON(";")
        getter
          GET("get")
          LPAREN("(")
          RPAREN(")")
          functionBody
            ASSIGNMENT("=")
            expression
              disjunction
                conjunction
                  equality
                    comparison
                      genericCallLikeComparison
                        infixOperation
                          elvisExpression
                            infixFunctionCall
                              rangeExpression
                                additiveExpression
                                  multiplicativeExpression
                                    asExpression
                                      prefixUnaryExpression
                                        postfixUnaryExpression
                                          primaryExpression
                                            simpleIdentifier
                                              FIELD("field")
    semis
      SEMICOLON(";")
  topLevelObject
    declaration
      propertyDeclaration
        modifiers
          modifier
            inheritanceModifier
              OPEN("open")
        VAR("var")
        variableDeclaration
          simpleIdentifier
            Identifier("f11")
          COLON(":")
          type
            typeReference
              userType
                simpleUserType
                  simpleIdentifier
                    Identifier("Int")
        semi
          SEMICOLON(";")
        setter
          SET("set")
          LPAREN("(")
          functionValueParameterWithOptionalType
            parameterWithOptionalType
              simpleIdentifier
                Identifier("v")
          RPAREN(")")
          functionBody
            block
              LCURL("{")
              statements
                statement
                  assignment
                    directlyAssignableExpression
                      simpleIdentifier
                        FIELD("field")
                    ASSIGNMENT("=")
                    expression
                      disjunction
                        conjunction
                          equality
                            comparison
                              genericCallLikeComparison
                                infixOperation
                                  elvisExpression
                                    infixFunctionCall
                                      rangeExpression
                                        additiveExpression
                                          multiplicativeExpression
                                            asExpression
                                              prefixUnaryExpression
                                                postfixUnaryExpression
                                                  primaryExpression
                                                    simpleIdentifier
                                                      Identifier("v")
              RCURL("}")
  GET("get")
  LPAREN("(")
  RPAREN(")")
  ASSIGNMENT("=")
  FIELD("field")
  SEMICOLON(";")
  topLevelObject
    declaration
      propertyDeclaration
        modifiers
          modifier
            inheritanceModifier
              OPEN("open")
        VAR("var")
        variableDeclaration
          simpleIdentifier
            Identifier("f12")
          COLON(":")
          type
            typeReference
              userType
                simpleUserType
                  simpleIdentifier
                    Identifier("Int")
        semi
          SEMICOLON(";")
        setter
          SET("set")
  GET("get")
  LPAREN("(")
  RPAREN(")")
  ASSIGNMENT("=")
  FIELD("field")
  SEMICOLON(";")
  topLevelObject
    declaration
      propertyDeclaration
        modifiers
          modifier
            inheritanceModifier
              OPEN("open")
        VAR("var")
        variableDeclaration
          simpleIdentifier
            Identifier("f13")
          COLON(":")
          type
            typeReference
              userType
                simpleUserType
                  simpleIdentifier
                    Identifier("Int")
        semi
          SEMICOLON(";")
        setter
          SET("set")
          LPAREN("(")
          functionValueParameterWithOptionalType
            parameterWithOptionalType
              simpleIdentifier
                Identifier("v")
          RPAREN(")")
          functionBody
            block
              LCURL("{")
              statements
              RCURL("}")
  GET("get")
  LPAREN("(")
  RPAREN(")")
  ASSIGNMENT("=")
  FIELD("field")
  SEMICOLON(";")
  NL("\n")
  topLevelObject
    declaration
      propertyDeclaration
        modifiers
          modifier
            inheritanceModifier
              OPEN("open")
        VAR("var")
        variableDeclaration
          simpleIdentifier
            Identifier("d10")
          COLON(":")
          type
            typeReference
              userType
                simpleUserType
                  simpleIdentifier
                    Identifier("Int")
        ASSIGNMENT("=")
        expression
          disjunction
            conjunction
              equality
                comparison
                  genericCallLikeComparison
                    infixOperation
                      elvisExpression
                        infixFunctionCall
                          rangeExpression
                            additiveExpression
                              multiplicativeExpression
                                asExpression
                                  prefixUnaryExpression
                                    postfixUnaryExpression
                                      primaryExpression
                                        literalConstant
                                          IntegerLiteral("1")
        semi
          SEMICOLON(";")
        getter
          GET("get")
          LPAREN("(")
          RPAREN(")")
          functionBody
            ASSIGNMENT("=")
            expression
              disjunction
                conjunction
                  equality
                    comparison
                      genericCallLikeComparison
                        infixOperation
                          elvisExpression
                            infixFunctionCall
                              rangeExpression
                                additiveExpression
                                  multiplicativeExpression
                                    asExpression
                                      prefixUnaryExpression
                                        postfixUnaryExpression
                                          primaryExpression
                                            simpleIdentifier
                                              FIELD("field")
    semis
      SEMICOLON(";")
  topLevelObject
    declaration
      propertyDeclaration
        modifiers
          modifier
            inheritanceModifier
              OPEN("open")
        VAR("var")
        variableDeclaration
          simpleIdentifier
            Identifier("d11")
          COLON(":")
          type
            typeReference
              userType
                simpleUserType
                  simpleIdentifier
                    Identifier("Int")
        ASSIGNMENT("=")
        expression
          disjunction
            conjunction
              equality
                comparison
                  genericCallLikeComparison
                    infixOperation
                      elvisExpression
                        infixFunctionCall
                          rangeExpression
                            additiveExpression
                              multiplicativeExpression
                                asExpression
                                  prefixUnaryExpression
                                    postfixUnaryExpression
                                      primaryExpression
                                        literalConstant
                                          IntegerLiteral("1")
        semi
          SEMICOLON(";")
        setter
          SET("set")
          LPAREN("(")
          functionValueParameterWithOptionalType
            parameterWithOptionalType
              simpleIdentifier
                Identifier("v")
          RPAREN(")")
          functionBody
            block
              LCURL("{")
              statements
                statement
                  assignment
                    directlyAssignableExpression
                      simpleIdentifier
                        FIELD("field")
                    ASSIGNMENT("=")
                    expression
                      disjunction
                        conjunction
                          equality
                            comparison
                              genericCallLikeComparison
                                infixOperation
                                  elvisExpression
                                    infixFunctionCall
                                      rangeExpression
                                        additiveExpression
                                          multiplicativeExpression
                                            asExpression
                                              prefixUnaryExpression
                                                postfixUnaryExpression
                                                  primaryExpression
                                                    simpleIdentifier
                                                      Identifier("v")
              RCURL("}")
  GET("get")
  LPAREN("(")
  RPAREN(")")
  ASSIGNMENT("=")
  FIELD("field")
  SEMICOLON(";")
  topLevelObject
    declaration
      propertyDeclaration
        modifiers
          modifier
            inheritanceModifier
              OPEN("open")
        VAR("var")
        variableDeclaration
          simpleIdentifier
            Identifier("d12")
          COLON(":")
          type
            typeReference
              userType
                simpleUserType
                  simpleIdentifier
                    Identifier("Int")
        ASSIGNMENT("=")
        expression
          disjunction
            conjunction
              equality
                comparison
                  genericCallLikeComparison
                    infixOperation
                      elvisExpression
                        infixFunctionCall
                          rangeExpression
                            additiveExpression
                              multiplicativeExpression
                                asExpression
                                  prefixUnaryExpression
                                    postfixUnaryExpression
                                      primaryExpression
                                        literalConstant
                                          IntegerLiteral("1")
        semi
          SEMICOLON(";")
        setter
          SET("set")
  GET("get")
  LPAREN("(")
  RPAREN(")")
  ASSIGNMENT("=")
  FIELD("field")
  SEMICOLON(";")
  topLevelObject
    declaration
      propertyDeclaration
        modifiers
          modifier
            inheritanceModifier
              OPEN("open")
        VAR("var")
        variableDeclaration
          simpleIdentifier
            Identifier("d13")
          COLON(":")
          type
            typeReference
              userType
                simpleUserType
                  simpleIdentifier
                    Identifier("Int")
        ASSIGNMENT("=")
        expression
          disjunction
            conjunction
              equality
                comparison
                  genericCallLikeComparison
                    infixOperation
                      elvisExpression
                        infixFunctionCall
                          rangeExpression
                            additiveExpression
                              multiplicativeExpression
                                asExpression
                                  prefixUnaryExpression
                                    postfixUnaryExpression
                                      primaryExpression
                                        literalConstant
                                          IntegerLiteral("1")
        semi
          SEMICOLON(";")
        setter
          SET("set")
          LPAREN("(")
          functionValueParameterWithOptionalType
            parameterWithOptionalType
              simpleIdentifier
                Identifier("v")
          RPAREN(")")
          functionBody
            block
              LCURL("{")
              statements
              RCURL("}")
  GET("get")
  LPAREN("(")
  RPAREN(")")
  ASSIGNMENT("=")
  FIELD("field")
  SEMICOLON(";")
  NL("\n")
  NL("\n")
  topLevelObject
    declaration
      propertyDeclaration
        VAR("var")
        variableDeclaration
          simpleIdentifier
            Identifier("a20")
          COLON(":")
          type
            typeReference
              userType
                simpleUserType
                  simpleIdentifier
                    Identifier("Int")
        semi
          SEMICOLON(";")
        getter
          GET("get")
    semis
      SEMICOLON(";")
  topLevelObject
    declaration
      propertyDeclaration
        VAR("var")
        variableDeclaration
          simpleIdentifier
            Identifier("a21")
          COLON(":")
          type
            typeReference
              userType
                simpleUserType
                  simpleIdentifier
                    Identifier("Int")
        semi
          SEMICOLON(";")
        setter
          SET("set")
          LPAREN("(")
          functionValueParameterWithOptionalType
            parameterWithOptionalType
              simpleIdentifier
                Identifier("v")
          RPAREN(")")
          functionBody
            block
              LCURL("{")
              statements
                statement
                  assignment
                    directlyAssignableExpression
                      simpleIdentifier
                        FIELD("field")
                    ASSIGNMENT("=")
                    expression
                      disjunction
                        conjunction
                          equality
                            comparison
                              genericCallLikeComparison
                                infixOperation
                                  elvisExpression
                                    infixFunctionCall
                                      rangeExpression
                                        additiveExpression
                                          multiplicativeExpression
                                            asExpression
                                              prefixUnaryExpression
                                                postfixUnaryExpression
                                                  primaryExpression
                                                    simpleIdentifier
                                                      Identifier("v")
              RCURL("}")
  GET("get")
  SEMICOLON(";")
  topLevelObject
    declaration
      propertyDeclaration
        VAR("var")
        variableDeclaration
          simpleIdentifier
            Identifier("a22")
          COLON(":")
          type
            typeReference
              userType
                simpleUserType
                  simpleIdentifier
                    Identifier("Int")
        semi
          SEMICOLON(";")
        setter
          SET("set")
  GET("get")
  SEMICOLON(";")
  topLevelObject
    declaration
      propertyDeclaration
        VAR("var")
        variableDeclaration
          simpleIdentifier
            Identifier("a23")
          COLON(":")
          type
            typeReference
              userType
                simpleUserType
                  simpleIdentifier
                    Identifier("Int")
        semi
          SEMICOLON(";")
        setter
          SET("set")
          LPAREN("(")
          functionValueParameterWithOptionalType
            parameterWithOptionalType
              simpleIdentifier
                Identifier("v")
          RPAREN(")")
          functionBody
            block
              LCURL("{")
              statements
              RCURL("}")
  GET("get")
  SEMICOLON(";")
  NL("\n")
  topLevelObject
    declaration
      propertyDeclaration
        VAR("var")
        variableDeclaration
          simpleIdentifier
            Identifier("e20")
          COLON(":")
          type
            typeReference
              userType
                simpleUserType
                  simpleIdentifier
                    Identifier("Int")
        semi
          SEMICOLON(";")
        getter
          GET("get")
    semis
      SEMICOLON(";")
  topLevelObject
    declaration
      propertyDeclaration
        VAR("var")
        variableDeclaration
          simpleIdentifier
            Identifier("e21")
          COLON(":")
          type
            typeReference
              userType
                simpleUserType
                  simpleIdentifier
                    Identifier("Int")
        semi
          SEMICOLON(";")
        setter
          SET("set")
          LPAREN("(")
          functionValueParameterWithOptionalType
            parameterWithOptionalType
              simpleIdentifier
                Identifier("v")
          RPAREN(")")
          functionBody
            block
              LCURL("{")
              statements
                statement
                  assignment
                    directlyAssignableExpression
                      simpleIdentifier
                        FIELD("field")
                    ASSIGNMENT("=")
                    expression
                      disjunction
                        conjunction
                          equality
                            comparison
                              genericCallLikeComparison
                                infixOperation
                                  elvisExpression
                                    infixFunctionCall
                                      rangeExpression
                                        additiveExpression
                                          multiplicativeExpression
                                            asExpression
                                              prefixUnaryExpression
                                                postfixUnaryExpression
                                                  primaryExpression
                                                    simpleIdentifier
                                                      Identifier("v")
              RCURL("}")
  GET("get")
  SEMICOLON(";")
  topLevelObject
    declaration
      propertyDeclaration
        VAR("var")
        variableDeclaration
          simpleIdentifier
            Identifier("e22")
          COLON(":")
          type
            typeReference
              userType
                simpleUserType
                  simpleIdentifier
                    Identifier("Int")
        semi
          SEMICOLON(";")
        setter
          SET("set")
  GET("get")
  SEMICOLON(";")
  topLevelObject
    declaration
      propertyDeclaration
        VAR("var")
        variableDeclaration
          simpleIdentifier
            Identifier("e23")
          COLON(":")
          type
            typeReference
              userType
                simpleUserType
                  simpleIdentifier
                    Identifier("Int")
        semi
          SEMICOLON(";")
        setter
          SET("set")
          LPAREN("(")
          functionValueParameterWithOptionalType
            parameterWithOptionalType
              simpleIdentifier
                Identifier("v")
          RPAREN(")")
          functionBody
            block
              LCURL("{")
              statements
              RCURL("}")
  GET("get")
  SEMICOLON(";")
  NL("\n")
  topLevelObject
    declaration
      propertyDeclaration
        VAR("var")
        variableDeclaration
          simpleIdentifier
            Identifier("c20")
          COLON(":")
          type
            typeReference
              userType
                simpleUserType
                  simpleIdentifier
                    Identifier("Int")
        ASSIGNMENT("=")
        expression
          disjunction
            conjunction
              equality
                comparison
                  genericCallLikeComparison
                    infixOperation
                      elvisExpression
                        infixFunctionCall
                          rangeExpression
                            additiveExpression
                              multiplicativeExpression
                                asExpression
                                  prefixUnaryExpression
                                    postfixUnaryExpression
                                      primaryExpression
                                        literalConstant
                                          IntegerLiteral("1")
        semi
          SEMICOLON(";")
        getter
          GET("get")
    semis
      SEMICOLON(";")
  topLevelObject
    declaration
      propertyDeclaration
        VAR("var")
        variableDeclaration
          simpleIdentifier
            Identifier("c21")
          COLON(":")
          type
            typeReference
              userType
                simpleUserType
                  simpleIdentifier
                    Identifier("Int")
        ASSIGNMENT("=")
        expression
          disjunction
            conjunction
              equality
                comparison
                  genericCallLikeComparison
                    infixOperation
                      elvisExpression
                        infixFunctionCall
                          rangeExpression
                            additiveExpression
                              multiplicativeExpression
                                asExpression
                                  prefixUnaryExpression
                                    postfixUnaryExpression
                                      primaryExpression
                                        literalConstant
                                          IntegerLiteral("1")
        semi
          SEMICOLON(";")
        setter
          SET("set")
          LPAREN("(")
          functionValueParameterWithOptionalType
            parameterWithOptionalType
              simpleIdentifier
                Identifier("v")
          RPAREN(")")
          functionBody
            block
              LCURL("{")
              statements
                statement
                  assignment
                    directlyAssignableExpression
                      simpleIdentifier
                        FIELD("field")
                    ASSIGNMENT("=")
                    expression
                      disjunction
                        conjunction
                          equality
                            comparison
                              genericCallLikeComparison
                                infixOperation
                                  elvisExpression
                                    infixFunctionCall
                                      rangeExpression
                                        additiveExpression
                                          multiplicativeExpression
                                            asExpression
                                              prefixUnaryExpression
                                                postfixUnaryExpression
                                                  primaryExpression
                                                    simpleIdentifier
                                                      Identifier("v")
              RCURL("}")
  GET("get")
  SEMICOLON(";")
  topLevelObject
    declaration
      propertyDeclaration
        VAR("var")
        variableDeclaration
          simpleIdentifier
            Identifier("c22")
          COLON(":")
          type
            typeReference
              userType
                simpleUserType
                  simpleIdentifier
                    Identifier("Int")
        ASSIGNMENT("=")
        expression
          disjunction
            conjunction
              equality
                comparison
                  genericCallLikeComparison
                    infixOperation
                      elvisExpression
                        infixFunctionCall
                          rangeExpression
                            additiveExpression
                              multiplicativeExpression
                                asExpression
                                  prefixUnaryExpression
                                    postfixUnaryExpression
                                      primaryExpression
                                        literalConstant
                                          IntegerLiteral("1")
        semi
          SEMICOLON(";")
        setter
          SET("set")
  GET("get")
  SEMICOLON(";")
  topLevelObject
    declaration
      propertyDeclaration
        VAR("var")
        variableDeclaration
          simpleIdentifier
            Identifier("c23")
          COLON(":")
          type
            typeReference
              userType
                simpleUserType
                  simpleIdentifier
                    Identifier("Int")
        ASSIGNMENT("=")
        expression
          disjunction
            conjunction
              equality
                comparison
                  genericCallLikeComparison
                    infixOperation
                      elvisExpression
                        infixFunctionCall
                          rangeExpression
                            additiveExpression
                              multiplicativeExpression
                                asExpression
                                  prefixUnaryExpression
                                    postfixUnaryExpression
                                      primaryExpression
                                        literalConstant
                                          IntegerLiteral("1")
        semi
          SEMICOLON(";")
        setter
          SET("set")
          LPAREN("(")
          functionValueParameterWithOptionalType
            parameterWithOptionalType
              simpleIdentifier
                Identifier("v")
          RPAREN(")")
          functionBody
            block
              LCURL("{")
              statements
              RCURL("}")
  GET("get")
  SEMICOLON(";")
  NL("\n")
  topLevelObject
    declaration
      propertyDeclaration
        modifiers
          modifier
            inheritanceModifier
              OPEN("open")
        VAR("var")
        variableDeclaration
          simpleIdentifier
            Identifier("b20")
          COLON(":")
          type
            typeReference
              userType
                simpleUserType
                  simpleIdentifier
                    Identifier("Int")
        semi
          SEMICOLON(";")
        getter
          GET("get")
    semis
      SEMICOLON(";")
  topLevelObject
    declaration
      propertyDeclaration
        modifiers
          modifier
            inheritanceModifier
              OPEN("open")
        VAR("var")
        variableDeclaration
          simpleIdentifier
            Identifier("b21")
          COLON(":")
          type
            typeReference
              userType
                simpleUserType
                  simpleIdentifier
                    Identifier("Int")
        semi
          SEMICOLON(";")
        setter
          SET("set")
          LPAREN("(")
          functionValueParameterWithOptionalType
            parameterWithOptionalType
              simpleIdentifier
                Identifier("v")
          RPAREN(")")
          functionBody
            block
              LCURL("{")
              statements
                statement
                  assignment
                    directlyAssignableExpression
                      simpleIdentifier
                        FIELD("field")
                    ASSIGNMENT("=")
                    expression
                      disjunction
                        conjunction
                          equality
                            comparison
                              genericCallLikeComparison
                                infixOperation
                                  elvisExpression
                                    infixFunctionCall
                                      rangeExpression
                                        additiveExpression
                                          multiplicativeExpression
                                            asExpression
                                              prefixUnaryExpression
                                                postfixUnaryExpression
                                                  primaryExpression
                                                    simpleIdentifier
                                                      Identifier("v")
              RCURL("}")
  GET("get")
  SEMICOLON(";")
  topLevelObject
    declaration
      propertyDeclaration
        modifiers
          modifier
            inheritanceModifier
              OPEN("open")
        VAR("var")
        variableDeclaration
          simpleIdentifier
            Identifier("b22")
          COLON(":")
          type
            typeReference
              userType
                simpleUserType
                  simpleIdentifier
                    Identifier("Int")
        semi
          SEMICOLON(";")
        setter
          SET("set")
  GET("get")
  SEMICOLON(";")
  topLevelObject
    declaration
      propertyDeclaration
        modifiers
          modifier
            inheritanceModifier
              OPEN("open")
        VAR("var")
        variableDeclaration
          simpleIdentifier
            Identifier("b23")
          COLON(":")
          type
            typeReference
              userType
                simpleUserType
                  simpleIdentifier
                    Identifier("Int")
        semi
          SEMICOLON(";")
        setter
          SET("set")
          LPAREN("(")
          functionValueParameterWithOptionalType
            parameterWithOptionalType
              simpleIdentifier
                Identifier("v")
          RPAREN(")")
          functionBody
            block
              LCURL("{")
              statements
              RCURL("}")
  GET("get")
  SEMICOLON(";")
  NL("\n")
  topLevelObject
    declaration
      propertyDeclaration
        modifiers
          modifier
            inheritanceModifier
              OPEN("open")
        VAR("var")
        variableDeclaration
          simpleIdentifier
            Identifier("f20")
          COLON(":")
          type
            typeReference
              userType
                simpleUserType
                  simpleIdentifier
                    Identifier("Int")
        semi
          SEMICOLON(";")
        getter
          GET("get")
    semis
      SEMICOLON(";")
  topLevelObject
    declaration
      propertyDeclaration
        modifiers
          modifier
            inheritanceModifier
              OPEN("open")
        VAR("var")
        variableDeclaration
          simpleIdentifier
            Identifier("f21")
          COLON(":")
          type
            typeReference
              userType
                simpleUserType
                  simpleIdentifier
                    Identifier("Int")
        semi
          SEMICOLON(";")
        setter
          SET("set")
          LPAREN("(")
          functionValueParameterWithOptionalType
            parameterWithOptionalType
              simpleIdentifier
                Identifier("v")
          RPAREN(")")
          functionBody
            block
              LCURL("{")
              statements
                statement
                  assignment
                    directlyAssignableExpression
                      simpleIdentifier
                        FIELD("field")
                    ASSIGNMENT("=")
                    expression
                      disjunction
                        conjunction
                          equality
                            comparison
                              genericCallLikeComparison
                                infixOperation
                                  elvisExpression
                                    infixFunctionCall
                                      rangeExpression
                                        additiveExpression
                                          multiplicativeExpression
                                            asExpression
                                              prefixUnaryExpression
                                                postfixUnaryExpression
                                                  primaryExpression
                                                    simpleIdentifier
                                                      Identifier("v")
              RCURL("}")
  GET("get")
  SEMICOLON(";")
  topLevelObject
    declaration
      propertyDeclaration
        modifiers
          modifier
            inheritanceModifier
              OPEN("open")
        VAR("var")
        variableDeclaration
          simpleIdentifier
            Identifier("f22")
          COLON(":")
          type
            typeReference
              userType
                simpleUserType
                  simpleIdentifier
                    Identifier("Int")
        semi
          SEMICOLON(";")
        setter
          SET("set")
  GET("get")
  SEMICOLON(";")
  topLevelObject
    declaration
      propertyDeclaration
        modifiers
          modifier
            inheritanceModifier
              OPEN("open")
        VAR("var")
        variableDeclaration
          simpleIdentifier
            Identifier("f23")
          COLON(":")
          type
            typeReference
              userType
                simpleUserType
                  simpleIdentifier
                    Identifier("Int")
        semi
          SEMICOLON(";")
        setter
          SET("set")
          LPAREN("(")
          functionValueParameterWithOptionalType
            parameterWithOptionalType
              simpleIdentifier
                Identifier("v")
          RPAREN(")")
          functionBody
            block
              LCURL("{")
              statements
              RCURL("}")
  GET("get")
  SEMICOLON(";")
  NL("\n")
  topLevelObject
    declaration
      propertyDeclaration
        modifiers
          modifier
            inheritanceModifier
              OPEN("open")
        VAR("var")
        variableDeclaration
          simpleIdentifier
            Identifier("d20")
          COLON(":")
          type
            typeReference
              userType
                simpleUserType
                  simpleIdentifier
                    Identifier("Int")
        ASSIGNMENT("=")
        expression
          disjunction
            conjunction
              equality
                comparison
                  genericCallLikeComparison
                    infixOperation
                      elvisExpression
                        infixFunctionCall
                          rangeExpression
                            additiveExpression
                              multiplicativeExpression
                                asExpression
                                  prefixUnaryExpression
                                    postfixUnaryExpression
                                      primaryExpression
                                        literalConstant
                                          IntegerLiteral("1")
        semi
          SEMICOLON(";")
        getter
          GET("get")
    semis
      SEMICOLON(";")
  topLevelObject
    declaration
      propertyDeclaration
        modifiers
          modifier
            inheritanceModifier
              OPEN("open")
        VAR("var")
        variableDeclaration
          simpleIdentifier
            Identifier("d21")
          COLON(":")
          type
            typeReference
              userType
                simpleUserType
                  simpleIdentifier
                    Identifier("Int")
        ASSIGNMENT("=")
        expression
          disjunction
            conjunction
              equality
                comparison
                  genericCallLikeComparison
                    infixOperation
                      elvisExpression
                        infixFunctionCall
                          rangeExpression
                            additiveExpression
                              multiplicativeExpression
                                asExpression
                                  prefixUnaryExpression
                                    postfixUnaryExpression
                                      primaryExpression
                                        literalConstant
                                          IntegerLiteral("1")
        semi
          SEMICOLON(";")
        setter
          SET("set")
          LPAREN("(")
          functionValueParameterWithOptionalType
            parameterWithOptionalType
              simpleIdentifier
                Identifier("v")
          RPAREN(")")
          functionBody
            block
              LCURL("{")
              statements
                statement
                  assignment
                    directlyAssignableExpression
                      simpleIdentifier
                        FIELD("field")
                    ASSIGNMENT("=")
                    expression
                      disjunction
                        conjunction
                          equality
                            comparison
                              genericCallLikeComparison
                                infixOperation
                                  elvisExpression
                                    infixFunctionCall
                                      rangeExpression
                                        additiveExpression
                                          multiplicativeExpression
                                            asExpression
                                              prefixUnaryExpression
                                                postfixUnaryExpression
                                                  primaryExpression
                                                    simpleIdentifier
                                                      Identifier("v")
              RCURL("}")
  GET("get")
  SEMICOLON(";")
  topLevelObject
    declaration
      propertyDeclaration
        modifiers
          modifier
            inheritanceModifier
              OPEN("open")
        VAR("var")
        variableDeclaration
          simpleIdentifier
            Identifier("d22")
          COLON(":")
          type
            typeReference
              userType
                simpleUserType
                  simpleIdentifier
                    Identifier("Int")
        ASSIGNMENT("=")
        expression
          disjunction
            conjunction
              equality
                comparison
                  genericCallLikeComparison
                    infixOperation
                      elvisExpression
                        infixFunctionCall
                          rangeExpression
                            additiveExpression
                              multiplicativeExpression
                                asExpression
                                  prefixUnaryExpression
                                    postfixUnaryExpression
                                      primaryExpression
                                        literalConstant
                                          IntegerLiteral("1")
        semi
          SEMICOLON(";")
        setter
          SET("set")
  GET("get")
  SEMICOLON(";")
  topLevelObject
    declaration
      propertyDeclaration
        modifiers
          modifier
            inheritanceModifier
              OPEN("open")
        VAR("var")
        variableDeclaration
          simpleIdentifier
            Identifier("d23")
          COLON(":")
          type
            typeReference
              userType
                simpleUserType
                  simpleIdentifier
                    Identifier("Int")
        ASSIGNMENT("=")
        expression
          disjunction
            conjunction
              equality
                comparison
                  genericCallLikeComparison
                    infixOperation
                      elvisExpression
                        infixFunctionCall
                          rangeExpression
                            additiveExpression
                              multiplicativeExpression
                                asExpression
                                  prefixUnaryExpression
                                    postfixUnaryExpression
                                      primaryExpression
                                        literalConstant
                                          IntegerLiteral("1")
        semi
          SEMICOLON(";")
        setter
          SET("set")
          LPAREN("(")
          functionValueParameterWithOptionalType
            parameterWithOptionalType
              simpleIdentifier
                Identifier("v")
          RPAREN(")")
          functionBody
            block
              LCURL("{")
              statements
              RCURL("}")
  GET("get")
  SEMICOLON(";")
  NL("\n")
  NL("\n")
  topLevelObject
    declaration
      propertyDeclaration
        VAR("var")
        variableDeclaration
          simpleIdentifier
            Identifier("a30")
          COLON(":")
          type
            typeReference
              userType
                simpleUserType
                  simpleIdentifier
                    Identifier("Int")
        semi
          SEMICOLON(";")
        getter
          GET("get")
          LPAREN("(")
          RPAREN(")")
          functionBody
            ASSIGNMENT("=")
            expression
              disjunction
                conjunction
                  equality
                    comparison
                      genericCallLikeComparison
                        infixOperation
                          elvisExpression
                            infixFunctionCall
                              rangeExpression
                                additiveExpression
                                  multiplicativeExpression
                                    asExpression
                                      prefixUnaryExpression
                                        postfixUnaryExpression
                                          primaryExpression
                                            literalConstant
                                              IntegerLiteral("1")
    semis
      SEMICOLON(";")
  topLevelObject
    declaration
      propertyDeclaration
        VAR("var")
        variableDeclaration
          simpleIdentifier
            Identifier("a31")
          COLON(":")
          type
            typeReference
              userType
                simpleUserType
                  simpleIdentifier
                    Identifier("Int")
        semi
          SEMICOLON(";")
        setter
          SET("set")
          LPAREN("(")
          functionValueParameterWithOptionalType
            parameterWithOptionalType
              simpleIdentifier
                Identifier("v")
          RPAREN(")")
          functionBody
            block
              LCURL("{")
              statements
                statement
                  assignment
                    directlyAssignableExpression
                      simpleIdentifier
                        FIELD("field")
                    ASSIGNMENT("=")
                    expression
                      disjunction
                        conjunction
                          equality
                            comparison
                              genericCallLikeComparison
                                infixOperation
                                  elvisExpression
                                    infixFunctionCall
                                      rangeExpression
                                        additiveExpression
                                          multiplicativeExpression
                                            asExpression
                                              prefixUnaryExpression
                                                postfixUnaryExpression
                                                  primaryExpression
                                                    simpleIdentifier
                                                      Identifier("v")
              RCURL("}")
  GET("get")
  LPAREN("(")
  RPAREN(")")
  ASSIGNMENT("=")
  IntegerLiteral("1")
  SEMICOLON(";")
  topLevelObject
    declaration
      propertyDeclaration
        VAR("var")
        variableDeclaration
          simpleIdentifier
            Identifier("a32")
          COLON(":")
          type
            typeReference
              userType
                simpleUserType
                  simpleIdentifier
                    Identifier("Int")
        semi
          SEMICOLON(";")
        setter
          SET("set")
  GET("get")
  LPAREN("(")
  RPAREN(")")
  ASSIGNMENT("=")
  IntegerLiteral("1")
  SEMICOLON(";")
  topLevelObject
    declaration
      propertyDeclaration
        VAR("var")
        variableDeclaration
          simpleIdentifier
            Identifier("a33")
          COLON(":")
          type
            typeReference
              userType
                simpleUserType
                  simpleIdentifier
                    Identifier("Int")
        semi
          SEMICOLON(";")
        setter
          SET("set")
          LPAREN("(")
          functionValueParameterWithOptionalType
            parameterWithOptionalType
              simpleIdentifier
                Identifier("v")
          RPAREN(")")
          functionBody
            block
              LCURL("{")
              statements
              RCURL("}")
  GET("get")
  LPAREN("(")
  RPAREN(")")
  ASSIGNMENT("=")
  IntegerLiteral("1")
  SEMICOLON(";")
  NL("\n")
  topLevelObject
    declaration
      propertyDeclaration
        VAR("var")
        variableDeclaration
          simpleIdentifier
            Identifier("e30")
          COLON(":")
          type
            typeReference
              userType
                simpleUserType
                  simpleIdentifier
                    Identifier("Int")
        semi
          SEMICOLON(";")
        getter
          GET("get")
          LPAREN("(")
          RPAREN(")")
          functionBody
            ASSIGNMENT("=")
            expression
              disjunction
                conjunction
                  equality
                    comparison
                      genericCallLikeComparison
                        infixOperation
                          elvisExpression
                            infixFunctionCall
                              rangeExpression
                                additiveExpression
                                  multiplicativeExpression
                                    asExpression
                                      prefixUnaryExpression
                                        postfixUnaryExpression
                                          primaryExpression
                                            literalConstant
                                              IntegerLiteral("1")
    semis
      SEMICOLON(";")
  topLevelObject
    declaration
      propertyDeclaration
        VAR("var")
        variableDeclaration
          simpleIdentifier
            Identifier("e31")
          COLON(":")
          type
            typeReference
              userType
                simpleUserType
                  simpleIdentifier
                    Identifier("Int")
        semi
          SEMICOLON(";")
        setter
          SET("set")
          LPAREN("(")
          functionValueParameterWithOptionalType
            parameterWithOptionalType
              simpleIdentifier
                Identifier("v")
          RPAREN(")")
          functionBody
            block
              LCURL("{")
              statements
                statement
                  assignment
                    directlyAssignableExpression
                      simpleIdentifier
                        FIELD("field")
                    ASSIGNMENT("=")
                    expression
                      disjunction
                        conjunction
                          equality
                            comparison
                              genericCallLikeComparison
                                infixOperation
                                  elvisExpression
                                    infixFunctionCall
                                      rangeExpression
                                        additiveExpression
                                          multiplicativeExpression
                                            asExpression
                                              prefixUnaryExpression
                                                postfixUnaryExpression
                                                  primaryExpression
                                                    simpleIdentifier
                                                      Identifier("v")
              RCURL("}")
  GET("get")
  LPAREN("(")
  RPAREN(")")
  ASSIGNMENT("=")
  IntegerLiteral("1")
  SEMICOLON(";")
  topLevelObject
    declaration
      propertyDeclaration
        VAR("var")
        variableDeclaration
          simpleIdentifier
            Identifier("e32")
          COLON(":")
          type
            typeReference
              userType
                simpleUserType
                  simpleIdentifier
                    Identifier("Int")
        semi
          SEMICOLON(";")
        setter
          SET("set")
  GET("get")
  LPAREN("(")
  RPAREN(")")
  ASSIGNMENT("=")
  IntegerLiteral("1")
  SEMICOLON(";")
  topLevelObject
    declaration
      propertyDeclaration
        VAR("var")
        variableDeclaration
          simpleIdentifier
            Identifier("e33")
          COLON(":")
          type
            typeReference
              userType
                simpleUserType
                  simpleIdentifier
                    Identifier("Int")
        semi
          SEMICOLON(";")
        setter
          SET("set")
          LPAREN("(")
          functionValueParameterWithOptionalType
            parameterWithOptionalType
              simpleIdentifier
                Identifier("v")
          RPAREN(")")
          functionBody
            block
              LCURL("{")
              statements
              RCURL("}")
  GET("get")
  LPAREN("(")
  RPAREN(")")
  ASSIGNMENT("=")
  IntegerLiteral("1")
  SEMICOLON(";")
  NL("\n")
  topLevelObject
    declaration
      propertyDeclaration
        VAR("var")
        variableDeclaration
          simpleIdentifier
            Identifier("c30")
          COLON(":")
          type
            typeReference
              userType
                simpleUserType
                  simpleIdentifier
                    Identifier("Int")
        ASSIGNMENT("=")
        expression
          disjunction
            conjunction
              equality
                comparison
                  genericCallLikeComparison
                    infixOperation
                      elvisExpression
                        infixFunctionCall
                          rangeExpression
                            additiveExpression
                              multiplicativeExpression
                                asExpression
                                  prefixUnaryExpression
                                    postfixUnaryExpression
                                      primaryExpression
                                        literalConstant
                                          IntegerLiteral("1")
        semi
          SEMICOLON(";")
        getter
          GET("get")
          LPAREN("(")
          RPAREN(")")
          functionBody
            ASSIGNMENT("=")
            expression
              disjunction
                conjunction
                  equality
                    comparison
                      genericCallLikeComparison
                        infixOperation
                          elvisExpression
                            infixFunctionCall
                              rangeExpression
                                additiveExpression
                                  multiplicativeExpression
                                    asExpression
                                      prefixUnaryExpression
                                        postfixUnaryExpression
                                          primaryExpression
                                            literalConstant
                                              IntegerLiteral("1")
    semis
      SEMICOLON(";")
  topLevelObject
    declaration
      propertyDeclaration
        VAR("var")
        variableDeclaration
          simpleIdentifier
            Identifier("c31")
          COLON(":")
          type
            typeReference
              userType
                simpleUserType
                  simpleIdentifier
                    Identifier("Int")
        ASSIGNMENT("=")
        expression
          disjunction
            conjunction
              equality
                comparison
                  genericCallLikeComparison
                    infixOperation
                      elvisExpression
                        infixFunctionCall
                          rangeExpression
                            additiveExpression
                              multiplicativeExpression
                                asExpression
                                  prefixUnaryExpression
                                    postfixUnaryExpression
                                      primaryExpression
                                        literalConstant
                                          IntegerLiteral("1")
        semi
          SEMICOLON(";")
        setter
          SET("set")
          LPAREN("(")
          functionValueParameterWithOptionalType
            parameterWithOptionalType
              simpleIdentifier
                Identifier("v")
          RPAREN(")")
          functionBody
            block
              LCURL("{")
              statements
                statement
                  assignment
                    directlyAssignableExpression
                      simpleIdentifier
                        FIELD("field")
                    ASSIGNMENT("=")
                    expression
                      disjunction
                        conjunction
                          equality
                            comparison
                              genericCallLikeComparison
                                infixOperation
                                  elvisExpression
                                    infixFunctionCall
                                      rangeExpression
                                        additiveExpression
                                          multiplicativeExpression
                                            asExpression
                                              prefixUnaryExpression
                                                postfixUnaryExpression
                                                  primaryExpression
                                                    simpleIdentifier
                                                      Identifier("v")
              RCURL("}")
  GET("get")
  LPAREN("(")
  RPAREN(")")
  ASSIGNMENT("=")
  IntegerLiteral("1")
  SEMICOLON(";")
  topLevelObject
    declaration
      propertyDeclaration
        VAR("var")
        variableDeclaration
          simpleIdentifier
            Identifier("c32")
          COLON(":")
          type
            typeReference
              userType
                simpleUserType
                  simpleIdentifier
                    Identifier("Int")
        ASSIGNMENT("=")
        expression
          disjunction
            conjunction
              equality
                comparison
                  genericCallLikeComparison
                    infixOperation
                      elvisExpression
                        infixFunctionCall
                          rangeExpression
                            additiveExpression
                              multiplicativeExpression
                                asExpression
                                  prefixUnaryExpression
                                    postfixUnaryExpression
                                      primaryExpression
                                        literalConstant
                                          IntegerLiteral("1")
        semi
          SEMICOLON(";")
        setter
          SET("set")
  GET("get")
  LPAREN("(")
  RPAREN(")")
  ASSIGNMENT("=")
  IntegerLiteral("1")
  SEMICOLON(";")
  topLevelObject
    declaration
      propertyDeclaration
        VAR("var")
        variableDeclaration
          simpleIdentifier
            Identifier("c33")
          COLON(":")
          type
            typeReference
              userType
                simpleUserType
                  simpleIdentifier
                    Identifier("Int")
        ASSIGNMENT("=")
        expression
          disjunction
            conjunction
              equality
                comparison
                  genericCallLikeComparison
                    infixOperation
                      elvisExpression
                        infixFunctionCall
                          rangeExpression
                            additiveExpression
                              multiplicativeExpression
                                asExpression
                                  prefixUnaryExpression
                                    postfixUnaryExpression
                                      primaryExpression
                                        literalConstant
                                          IntegerLiteral("1")
        semi
          SEMICOLON(";")
        setter
          SET("set")
          LPAREN("(")
          functionValueParameterWithOptionalType
            parameterWithOptionalType
              simpleIdentifier
                Identifier("v")
          RPAREN(")")
          functionBody
            block
              LCURL("{")
              statements
              RCURL("}")
  GET("get")
  LPAREN("(")
  RPAREN(")")
  ASSIGNMENT("=")
  IntegerLiteral("1")
  SEMICOLON(";")
  NL("\n")
  topLevelObject
    declaration
      propertyDeclaration
        modifiers
          modifier
            inheritanceModifier
              OPEN("open")
        VAR("var")
        variableDeclaration
          simpleIdentifier
            Identifier("b30")
          COLON(":")
          type
            typeReference
              userType
                simpleUserType
                  simpleIdentifier
                    Identifier("Int")
        semi
          SEMICOLON(";")
        getter
          GET("get")
          LPAREN("(")
          RPAREN(")")
          functionBody
            ASSIGNMENT("=")
            expression
              disjunction
                conjunction
                  equality
                    comparison
                      genericCallLikeComparison
                        infixOperation
                          elvisExpression
                            infixFunctionCall
                              rangeExpression
                                additiveExpression
                                  multiplicativeExpression
                                    asExpression
                                      prefixUnaryExpression
                                        postfixUnaryExpression
                                          primaryExpression
                                            literalConstant
                                              IntegerLiteral("1")
    semis
      SEMICOLON(";")
  topLevelObject
    declaration
      propertyDeclaration
        modifiers
          modifier
            inheritanceModifier
              OPEN("open")
        VAR("var")
        variableDeclaration
          simpleIdentifier
            Identifier("b31")
          COLON(":")
          type
            typeReference
              userType
                simpleUserType
                  simpleIdentifier
                    Identifier("Int")
        semi
          SEMICOLON(";")
        setter
          SET("set")
          LPAREN("(")
          functionValueParameterWithOptionalType
            parameterWithOptionalType
              simpleIdentifier
                Identifier("v")
          RPAREN(")")
          functionBody
            block
              LCURL("{")
              statements
                statement
                  assignment
                    directlyAssignableExpression
                      simpleIdentifier
                        FIELD("field")
                    ASSIGNMENT("=")
                    expression
                      disjunction
                        conjunction
                          equality
                            comparison
                              genericCallLikeComparison
                                infixOperation
                                  elvisExpression
                                    infixFunctionCall
                                      rangeExpression
                                        additiveExpression
                                          multiplicativeExpression
                                            asExpression
                                              prefixUnaryExpression
                                                postfixUnaryExpression
                                                  primaryExpression
                                                    simpleIdentifier
                                                      Identifier("v")
              RCURL("}")
  GET("get")
  LPAREN("(")
  RPAREN(")")
  ASSIGNMENT("=")
  IntegerLiteral("1")
  SEMICOLON(";")
  topLevelObject
    declaration
      propertyDeclaration
        modifiers
          modifier
            inheritanceModifier
              OPEN("open")
        VAR("var")
        variableDeclaration
          simpleIdentifier
            Identifier("b32")
          COLON(":")
          type
            typeReference
              userType
                simpleUserType
                  simpleIdentifier
                    Identifier("Int")
        semi
          SEMICOLON(";")
        setter
          SET("set")
  GET("get")
  LPAREN("(")
  RPAREN(")")
  ASSIGNMENT("=")
  IntegerLiteral("1")
  SEMICOLON(";")
  topLevelObject
    declaration
      propertyDeclaration
        modifiers
          modifier
            inheritanceModifier
              OPEN("open")
        VAR("var")
        variableDeclaration
          simpleIdentifier
            Identifier("b33")
          COLON(":")
          type
            typeReference
              userType
                simpleUserType
                  simpleIdentifier
                    Identifier("Int")
        semi
          SEMICOLON(";")
        setter
          SET("set")
          LPAREN("(")
          functionValueParameterWithOptionalType
            parameterWithOptionalType
              simpleIdentifier
                Identifier("v")
          RPAREN(")")
          functionBody
            block
              LCURL("{")
              statements
              RCURL("}")
  GET("get")
  LPAREN("(")
  RPAREN(")")
  ASSIGNMENT("=")
  IntegerLiteral("1")
  SEMICOLON(";")
  NL("\n")
  topLevelObject
    declaration
      propertyDeclaration
        modifiers
          modifier
            inheritanceModifier
              OPEN("open")
        VAR("var")
        variableDeclaration
          simpleIdentifier
            Identifier("f30")
          COLON(":")
          type
            typeReference
              userType
                simpleUserType
                  simpleIdentifier
                    Identifier("Int")
        semi
          SEMICOLON(";")
        getter
          GET("get")
          LPAREN("(")
          RPAREN(")")
          functionBody
            ASSIGNMENT("=")
            expression
              disjunction
                conjunction
                  equality
                    comparison
                      genericCallLikeComparison
                        infixOperation
                          elvisExpression
                            infixFunctionCall
                              rangeExpression
                                additiveExpression
                                  multiplicativeExpression
                                    asExpression
                                      prefixUnaryExpression
                                        postfixUnaryExpression
                                          primaryExpression
                                            literalConstant
                                              IntegerLiteral("1")
    semis
      SEMICOLON(";")
  topLevelObject
    declaration
      propertyDeclaration
        modifiers
          modifier
            inheritanceModifier
              OPEN("open")
        VAR("var")
        variableDeclaration
          simpleIdentifier
            Identifier("f31")
          COLON(":")
          type
            typeReference
              userType
                simpleUserType
                  simpleIdentifier
                    Identifier("Int")
        semi
          SEMICOLON(";")
        setter
          SET("set")
          LPAREN("(")
          functionValueParameterWithOptionalType
            parameterWithOptionalType
              simpleIdentifier
                Identifier("v")
          RPAREN(")")
          functionBody
            block
              LCURL("{")
              statements
                statement
                  assignment
                    directlyAssignableExpression
                      simpleIdentifier
                        FIELD("field")
                    ASSIGNMENT("=")
                    expression
                      disjunction
                        conjunction
                          equality
                            comparison
                              genericCallLikeComparison
                                infixOperation
                                  elvisExpression
                                    infixFunctionCall
                                      rangeExpression
                                        additiveExpression
                                          multiplicativeExpression
                                            asExpression
                                              prefixUnaryExpression
                                                postfixUnaryExpression
                                                  primaryExpression
                                                    simpleIdentifier
                                                      Identifier("v")
              RCURL("}")
  GET("get")
  LPAREN("(")
  RPAREN(")")
  ASSIGNMENT("=")
  IntegerLiteral("1")
  SEMICOLON(";")
  topLevelObject
    declaration
      propertyDeclaration
        modifiers
          modifier
            inheritanceModifier
              OPEN("open")
        VAR("var")
        variableDeclaration
          simpleIdentifier
            Identifier("f32")
          COLON(":")
          type
            typeReference
              userType
                simpleUserType
                  simpleIdentifier
                    Identifier("Int")
        semi
          SEMICOLON(";")
        setter
          SET("set")
  GET("get")
  LPAREN("(")
  RPAREN(")")
  ASSIGNMENT("=")
  IntegerLiteral("1")
  SEMICOLON(";")
  topLevelObject
    declaration
      propertyDeclaration
        modifiers
          modifier
            inheritanceModifier
              OPEN("open")
        VAR("var")
        variableDeclaration
          simpleIdentifier
            Identifier("f33")
          COLON(":")
          type
            typeReference
              userType
                simpleUserType
                  simpleIdentifier
                    Identifier("Int")
        semi
          SEMICOLON(";")
        setter
          SET("set")
          LPAREN("(")
          functionValueParameterWithOptionalType
            parameterWithOptionalType
              simpleIdentifier
                Identifier("v")
          RPAREN(")")
          functionBody
            block
              LCURL("{")
              statements
              RCURL("}")
  GET("get")
  LPAREN("(")
  RPAREN(")")
  ASSIGNMENT("=")
  IntegerLiteral("1")
  SEMICOLON(";")
  NL("\n")
  topLevelObject
    declaration
      propertyDeclaration
        modifiers
          modifier
            inheritanceModifier
              OPEN("open")
        VAR("var")
        variableDeclaration
          simpleIdentifier
            Identifier("d30")
          COLON(":")
          type
            typeReference
              userType
                simpleUserType
                  simpleIdentifier
                    Identifier("Int")
        ASSIGNMENT("=")
        expression
          disjunction
            conjunction
              equality
                comparison
                  genericCallLikeComparison
                    infixOperation
                      elvisExpression
                        infixFunctionCall
                          rangeExpression
                            additiveExpression
                              multiplicativeExpression
                                asExpression
                                  prefixUnaryExpression
                                    postfixUnaryExpression
                                      primaryExpression
                                        literalConstant
                                          IntegerLiteral("1")
        semi
          SEMICOLON(";")
        getter
          GET("get")
          LPAREN("(")
          RPAREN(")")
          functionBody
            ASSIGNMENT("=")
            expression
              disjunction
                conjunction
                  equality
                    comparison
                      genericCallLikeComparison
                        infixOperation
                          elvisExpression
                            infixFunctionCall
                              rangeExpression
                                additiveExpression
                                  multiplicativeExpression
                                    asExpression
                                      prefixUnaryExpression
                                        postfixUnaryExpression
                                          primaryExpression
                                            literalConstant
                                              IntegerLiteral("1")
    semis
      SEMICOLON(";")
  topLevelObject
    declaration
      propertyDeclaration
        modifiers
          modifier
            inheritanceModifier
              OPEN("open")
        VAR("var")
        variableDeclaration
          simpleIdentifier
            Identifier("d31")
          COLON(":")
          type
            typeReference
              userType
                simpleUserType
                  simpleIdentifier
                    Identifier("Int")
        ASSIGNMENT("=")
        expression
          disjunction
            conjunction
              equality
                comparison
                  genericCallLikeComparison
                    infixOperation
                      elvisExpression
                        infixFunctionCall
                          rangeExpression
                            additiveExpression
                              multiplicativeExpression
                                asExpression
                                  prefixUnaryExpression
                                    postfixUnaryExpression
                                      primaryExpression
                                        literalConstant
                                          IntegerLiteral("1")
        semi
          SEMICOLON(";")
        setter
          SET("set")
          LPAREN("(")
          functionValueParameterWithOptionalType
            parameterWithOptionalType
              simpleIdentifier
                Identifier("v")
          RPAREN(")")
          functionBody
            block
              LCURL("{")
              statements
                statement
                  assignment
                    directlyAssignableExpression
                      simpleIdentifier
                        FIELD("field")
                    ASSIGNMENT("=")
                    expression
                      disjunction
                        conjunction
                          equality
                            comparison
                              genericCallLikeComparison
                                infixOperation
                                  elvisExpression
                                    infixFunctionCall
                                      rangeExpression
                                        additiveExpression
                                          multiplicativeExpression
                                            asExpression
                                              prefixUnaryExpression
                                                postfixUnaryExpression
                                                  primaryExpression
                                                    simpleIdentifier
                                                      Identifier("v")
              RCURL("}")
  GET("get")
  LPAREN("(")
  RPAREN(")")
  ASSIGNMENT("=")
  IntegerLiteral("1")
  SEMICOLON(";")
  topLevelObject
    declaration
      propertyDeclaration
        modifiers
          modifier
            inheritanceModifier
              OPEN("open")
        VAR("var")
        variableDeclaration
          simpleIdentifier
            Identifier("d32")
          COLON(":")
          type
            typeReference
              userType
                simpleUserType
                  simpleIdentifier
                    Identifier("Int")
        ASSIGNMENT("=")
        expression
          disjunction
            conjunction
              equality
                comparison
                  genericCallLikeComparison
                    infixOperation
                      elvisExpression
                        infixFunctionCall
                          rangeExpression
                            additiveExpression
                              multiplicativeExpression
                                asExpression
                                  prefixUnaryExpression
                                    postfixUnaryExpression
                                      primaryExpression
                                        literalConstant
                                          IntegerLiteral("1")
        semi
          SEMICOLON(";")
        setter
          SET("set")
  GET("get")
  LPAREN("(")
  RPAREN(")")
  ASSIGNMENT("=")
  IntegerLiteral("1")
  SEMICOLON(";")
  topLevelObject
    declaration
      propertyDeclaration
        modifiers
          modifier
            inheritanceModifier
              OPEN("open")
        VAR("var")
        variableDeclaration
          simpleIdentifier
            Identifier("d33")
          COLON(":")
          type
            typeReference
              userType
                simpleUserType
                  simpleIdentifier
                    Identifier("Int")
        ASSIGNMENT("=")
        expression
          disjunction
            conjunction
              equality
                comparison
                  genericCallLikeComparison
                    infixOperation
                      elvisExpression
                        infixFunctionCall
                          rangeExpression
                            additiveExpression
                              multiplicativeExpression
                                asExpression
                                  prefixUnaryExpression
                                    postfixUnaryExpression
                                      primaryExpression
                                        literalConstant
                                          IntegerLiteral("1")
        semi
          SEMICOLON(";")
        setter
          SET("set")
          LPAREN("(")
          functionValueParameterWithOptionalType
            parameterWithOptionalType
              simpleIdentifier
                Identifier("v")
          RPAREN(")")
          functionBody
            block
              LCURL("{")
              statements
              RCURL("}")
  GET("get")
  LPAREN("(")
  RPAREN(")")
  ASSIGNMENT("=")
  IntegerLiteral("1")
  SEMICOLON(";")
  NL("\n")
  NL("\n")
  INIT("init")
  LCURL("{")
  NL("\n")
  Identifier("a00")
  ASSIGNMENT("=")
  IntegerLiteral("1")
  NL("\n")
  Identifier("a01")
  ASSIGNMENT("=")
  IntegerLiteral("1")
  NL("\n")
  Identifier("a02")
  ASSIGNMENT("=")
  IntegerLiteral("1")
  NL("\n")
  Identifier("a03")
  ASSIGNMENT("=")
  IntegerLiteral("1")
  NL("\n")
  Identifier("a10")
  ASSIGNMENT("=")
  IntegerLiteral("1")
  NL("\n")
  Identifier("a11")
  ASSIGNMENT("=")
  IntegerLiteral("1")
  NL("\n")
  Identifier("a12")
  ASSIGNMENT("=")
  IntegerLiteral("1")
  NL("\n")
  Identifier("a13")
  ASSIGNMENT("=")
  IntegerLiteral("1")
  NL("\n")
  Identifier("a20")
  ASSIGNMENT("=")
  IntegerLiteral("1")
  NL("\n")
  Identifier("a21")
  ASSIGNMENT("=")
  IntegerLiteral("1")
  NL("\n")
  Identifier("a22")
  ASSIGNMENT("=")
  IntegerLiteral("1")
  NL("\n")
  Identifier("a23")
  ASSIGNMENT("=")
  IntegerLiteral("1")
  NL("\n")
  Identifier("a30")
  ASSIGNMENT("=")
  IntegerLiteral("1")
  NL("\n")
  Identifier("a31")
  ASSIGNMENT("=")
  IntegerLiteral("1")
  NL("\n")
  Identifier("a32")
  ASSIGNMENT("=")
  IntegerLiteral("1")
  NL("\n")
  Identifier("a33")
  ASSIGNMENT("=")
  IntegerLiteral("1")
  NL("\n")
  NL("\n")
  Identifier("b00")
  ASSIGNMENT("=")
  IntegerLiteral("1")
  NL("\n")
  Identifier("b01")
  ASSIGNMENT("=")
  IntegerLiteral("1")
  NL("\n")
  Identifier("b02")
  ASSIGNMENT("=")
  IntegerLiteral("1")
  NL("\n")
  Identifier("b03")
  ASSIGNMENT("=")
  IntegerLiteral("1")
  NL("\n")
  Identifier("b10")
  ASSIGNMENT("=")
  IntegerLiteral("1")
  NL("\n")
  Identifier("b11")
  ASSIGNMENT("=")
  IntegerLiteral("1")
  NL("\n")
  Identifier("b12")
  ASSIGNMENT("=")
  IntegerLiteral("1")
  NL("\n")
  Identifier("b13")
  ASSIGNMENT("=")
  IntegerLiteral("1")
  NL("\n")
  Identifier("b20")
  ASSIGNMENT("=")
  IntegerLiteral("1")
  NL("\n")
  Identifier("b21")
  ASSIGNMENT("=")
  IntegerLiteral("1")
  NL("\n")
  Identifier("b22")
  ASSIGNMENT("=")
  IntegerLiteral("1")
  NL("\n")
  Identifier("b23")
  ASSIGNMENT("=")
  IntegerLiteral("1")
  NL("\n")
  Identifier("b30")
  ASSIGNMENT("=")
  IntegerLiteral("1")
  NL("\n")
  Identifier("b31")
  ASSIGNMENT("=")
  IntegerLiteral("1")
  NL("\n")
  Identifier("b32")
  ASSIGNMENT("=")
  IntegerLiteral("1")
  NL("\n")
  Identifier("b33")
  ASSIGNMENT("=")
  IntegerLiteral("1")
  NL("\n")
  RCURL("}")
  NL("\n")
  RCURL("}")
  NL("\n")
  EOF("<EOF>")
