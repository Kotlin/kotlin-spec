File: innerVariance.kt - f307f3d479513ea697682f24c495759b
  NL("\n")
  NL("\n")
  packageHeader
  importList
  topLevelObject
    declaration
      classDeclaration
        CLASS("class")
        simpleIdentifier
          Identifier("Outer")
        typeParameters
          LANGLE("<")
          typeParameter
            typeParameterModifiers
              typeParameterModifier
                varianceModifier
                  OUT("out")
            simpleIdentifier
              Identifier("E")
          COMMA(",")
          typeParameter
            typeParameterModifiers
              typeParameterModifier
                varianceModifier
                  IN("in")
            simpleIdentifier
              Identifier("F")
          RANGLE(">")
        classBody
          LCURL("{")
          NL("\n")
          classMemberDeclarations
            classMemberDeclaration
              declaration
                classDeclaration
                  modifiers
                    modifier
                      classModifier
                        INNER("inner")
                  CLASS("class")
                  simpleIdentifier
                    Identifier("Inner")
                  classBody
                    LCURL("{")
                    NL("\n")
                    classMemberDeclarations
                      classMemberDeclaration
                        declaration
                          functionDeclaration
                            FUN("fun")
                            simpleIdentifier
                              Identifier("unsafe1")
                            functionValueParameters
                              LPAREN("(")
                              functionValueParameter
                                parameter
                                  simpleIdentifier
                                    Identifier("x")
                                  COLON(":")
                                  type
                                    typeReference
                                      userType
                                        simpleUserType
                                          simpleIdentifier
                                            Identifier("E")
                              RPAREN(")")
                            functionBody
                              block
                                LCURL("{")
                                statements
                                RCURL("}")
                      semis
                        NL("\n")
                      classMemberDeclaration
                        declaration
                          functionDeclaration
                            FUN("fun")
                            simpleIdentifier
                              Identifier("unsafe2")
                            functionValueParameters
                              LPAREN("(")
                              functionValueParameter
                                parameter
                                  simpleIdentifier
                                    Identifier("x")
                                  COLON(":")
                                  type
                                    typeReference
                                      userType
                                        simpleUserType
                                          simpleIdentifier
                                            Identifier("Collection")
                                          typeArguments
                                            LANGLE("<")
                                            typeProjection
                                              type
                                                nullableType
                                                  typeReference
                                                    userType
                                                      simpleUserType
                                                        simpleIdentifier
                                                          Identifier("E")
                                                  quest
                                                    QUEST_NO_WS("?")
                                            RANGLE(">")
                              RPAREN(")")
                            functionBody
                              block
                                LCURL("{")
                                statements
                                RCURL("}")
                      semis
                        NL("\n")
                      classMemberDeclaration
                        declaration
                          functionDeclaration
                            FUN("fun")
                            simpleIdentifier
                              Identifier("unsafe3")
                            functionValueParameters
                              LPAREN("(")
                              RPAREN(")")
                            COLON(":")
                            type
                              nullableType
                                typeReference
                                  userType
                                    simpleUserType
                                      simpleIdentifier
                                        Identifier("F")
                                quest
                                  QUEST_WS("? ")
                            functionBody
                              ASSIGNMENT("=")
                              expression
                                disjunction
                                  conjunction
                                    equality
                                      comparison
                                        genericCallLikeComparison
                                          infixOperation
                                            elvisExpression
                                              infixFunctionCall
                                                rangeExpression
                                                  additiveExpression
                                                    multiplicativeExpression
                                                      asExpression
                                                        prefixUnaryExpression
                                                          postfixUnaryExpression
                                                            primaryExpression
                                                              literalConstant
                                                                NullLiteral("null")
                      semis
                        NL("\n")
                      classMemberDeclaration
                        declaration
                          functionDeclaration
                            FUN("fun")
                            simpleIdentifier
                              Identifier("unsafe4")
                            functionValueParameters
                              LPAREN("(")
                              RPAREN(")")
                            COLON(":")
                            type
                              nullableType
                                typeReference
                                  userType
                                    simpleUserType
                                      simpleIdentifier
                                        Identifier("Collection")
                                      typeArguments
                                        LANGLE("<")
                                        typeProjection
                                          type
                                            typeReference
                                              userType
                                                simpleUserType
                                                  simpleIdentifier
                                                    Identifier("F")
                                        RANGLE(">")
                                quest
                                  QUEST_WS("? ")
                            functionBody
                              ASSIGNMENT("=")
                              expression
                                disjunction
                                  conjunction
                                    equality
                                      comparison
                                        genericCallLikeComparison
                                          infixOperation
                                            elvisExpression
                                              infixFunctionCall
                                                rangeExpression
                                                  additiveExpression
                                                    multiplicativeExpression
                                                      asExpression
                                                        prefixUnaryExpression
                                                          postfixUnaryExpression
                                                            primaryExpression
                                                              literalConstant
                                                                NullLiteral("null")
                      semis
                        NL("\n")
                    RCURL("}")
            semis
              NL("\n")
              NL("\n")
              NL("\n")
              NL("\n")
            classMemberDeclaration
              declaration
                functionDeclaration
                  FUN("fun")
                  simpleIdentifier
                    Identifier("foo")
                  functionValueParameters
                    LPAREN("(")
                    functionValueParameter
                      parameter
                        simpleIdentifier
                          Identifier("x")
                        COLON(":")
                        type
                          typeReference
                            userType
                              simpleUserType
                                simpleIdentifier
                                  Identifier("Inner")
                    RPAREN(")")
                  functionBody
                    block
                      LCURL("{")
                      statements
                      RCURL("}")
            semis
              NL("\n")
            classMemberDeclaration
              declaration
                functionDeclaration
                  FUN("fun")
                  simpleIdentifier
                    Identifier("bar")
                  functionValueParameters
                    LPAREN("(")
                    RPAREN(")")
                  COLON(":")
                  type
                    nullableType
                      typeReference
                        userType
                          simpleUserType
                            simpleIdentifier
                              Identifier("Inner")
                      quest
                        QUEST_WS("? ")
                  functionBody
                    ASSIGNMENT("=")
                    expression
                      disjunction
                        conjunction
                          equality
                            comparison
                              genericCallLikeComparison
                                infixOperation
                                  elvisExpression
                                    infixFunctionCall
                                      rangeExpression
                                        additiveExpression
                                          multiplicativeExpression
                                            asExpression
                                              prefixUnaryExpression
                                                postfixUnaryExpression
                                                  primaryExpression
                                                    literalConstant
                                                      NullLiteral("null")
            semis
              NL("\n")
          RCURL("}")
    semis
      NL("\n")
  EOF("<EOF>")
