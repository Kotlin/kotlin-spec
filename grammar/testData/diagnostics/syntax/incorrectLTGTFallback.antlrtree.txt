File: incorrectLTGTFallback.kt - 06026e47029e0f23a87e7486a15ba876
  NL("\n")
  NL("\n")
  NL("\n")
  packageHeader
  importList
  topLevelObject
    declaration
      classDeclaration
        modifiers
          annotation
            singleAnnotation
              AT_PRE_WS("\n@")
              unescapedAnnotation
                constructorInvocation
                  userType
                    simpleUserType
                      simpleIdentifier
                        Identifier("Target")
                  valueArguments
                    LPAREN("(")
                    valueArgument
                      expression
                        disjunction
                          conjunction
                            equality
                              comparison
                                genericCallLikeComparison
                                  infixOperation
                                    elvisExpression
                                      infixFunctionCall
                                        rangeExpression
                                          additiveExpression
                                            multiplicativeExpression
                                              asExpression
                                                prefixUnaryExpression
                                                  postfixUnaryExpression
                                                    primaryExpression
                                                      simpleIdentifier
                                                        Identifier("AnnotationTarget")
                                                    postfixUnarySuffix
                                                      navigationSuffix
                                                        memberAccessOperator
                                                          DOT(".")
                                                        simpleIdentifier
                                                          Identifier("EXPRESSION")
                    RPAREN(")")
          annotation
            singleAnnotation
              AT_PRE_WS("\n@")
              unescapedAnnotation
                constructorInvocation
                  userType
                    simpleUserType
                      simpleIdentifier
                        Identifier("Retention")
                  valueArguments
                    LPAREN("(")
                    valueArgument
                      expression
                        disjunction
                          conjunction
                            equality
                              comparison
                                genericCallLikeComparison
                                  infixOperation
                                    elvisExpression
                                      infixFunctionCall
                                        rangeExpression
                                          additiveExpression
                                            multiplicativeExpression
                                              asExpression
                                                prefixUnaryExpression
                                                  postfixUnaryExpression
                                                    primaryExpression
                                                      simpleIdentifier
                                                        Identifier("AnnotationRetention")
                                                    postfixUnarySuffix
                                                      navigationSuffix
                                                        memberAccessOperator
                                                          DOT(".")
                                                        simpleIdentifier
                                                          Identifier("SOURCE")
                    RPAREN(")")
            NL("\n")
          modifier
            classModifier
              ANNOTATION("annotation")
        CLASS("class")
        simpleIdentifier
          Identifier("Ann")
        primaryConstructor
          classParameters
            LPAREN("(")
            classParameter
              VAL("val")
              simpleIdentifier
                Identifier("x")
              COLON(":")
              type
                typeReference
                  userType
                    simpleUserType
                      simpleIdentifier
                        Identifier("String")
            RPAREN(")")
    semis
      NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        typeParameters
          LANGLE("<")
          typeParameter
            simpleIdentifier
              Identifier("T")
          RANGLE(">")
        simpleIdentifier
          Identifier("foo")
        functionValueParameters
          LPAREN("(")
          functionValueParameter
            parameter
              simpleIdentifier
                Identifier("x")
              COLON(":")
              type
                functionType
                  functionTypeParameters
                    LPAREN("(")
                    type
                      typeReference
                        userType
                          simpleUserType
                            simpleIdentifier
                              Identifier("T")
                    RPAREN(")")
                  ARROW("->")
                  type
                    typeReference
                      userType
                        simpleUserType
                          simpleIdentifier
                            Identifier("T")
          RPAREN(")")
        functionBody
          block
            LCURL("{")
            statements
            RCURL("}")
    semis
      NL("\n")
      NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        simpleIdentifier
          Identifier("main")
        functionValueParameters
          LPAREN("(")
          RPAREN(")")
        functionBody
          block
            LCURL("{")
            NL("\n")
            statements
              statement
                expression
                  disjunction
                    conjunction
                      equality
                        comparison
                          genericCallLikeComparison
                            infixOperation
                              elvisExpression
                                infixFunctionCall
                                  rangeExpression
                                    additiveExpression
                                      multiplicativeExpression
                                        asExpression
                                          prefixUnaryExpression
                                            postfixUnaryExpression
                                              primaryExpression
                                                simpleIdentifier
                                                  Identifier("foo")
                                              postfixUnarySuffix
                                                typeArguments
                                                  LANGLE("<")
                                                  typeProjection
                                                    type
                                                      typeReference
                                                        userType
                                                          simpleUserType
                                                            simpleIdentifier
                                                              Identifier("Int")
                                                  RANGLE(">")
                                              postfixUnarySuffix
                                                callSuffix
                                                  annotatedLambda
                                                    label
                                                      simpleIdentifier
                                                        Identifier("label")
                                                      AT_POST_WS("@ ")
                                                    lambdaLiteral
                                                      LCURL("{")
                                                      lambdaParameters
                                                        lambdaParameter
                                                          variableDeclaration
                                                            simpleIdentifier
                                                              Identifier("x")
                                                      ARROW("->")
                                                      statements
                                                        statement
                                                          expression
                                                            disjunction
                                                              conjunction
                                                                equality
                                                                  comparison
                                                                    genericCallLikeComparison
                                                                      infixOperation
                                                                        elvisExpression
                                                                          infixFunctionCall
                                                                            rangeExpression
                                                                              additiveExpression
                                                                                multiplicativeExpression
                                                                                  asExpression
                                                                                    prefixUnaryExpression
                                                                                      postfixUnaryExpression
                                                                                        primaryExpression
                                                                                          simpleIdentifier
                                                                                            Identifier("x")
                                                      RCURL("}")
              semis
                NL("\n")
              statement
                expression
                  disjunction
                    conjunction
                      equality
                        comparison
                          genericCallLikeComparison
                            infixOperation
                              elvisExpression
                                infixFunctionCall
                                  rangeExpression
                                    additiveExpression
                                      multiplicativeExpression
                                        asExpression
                                          prefixUnaryExpression
                                            postfixUnaryExpression
                                              primaryExpression
                                                simpleIdentifier
                                                  Identifier("foo")
                                              postfixUnarySuffix
                                                typeArguments
                                                  LANGLE("<")
                                                  typeProjection
                                                    type
                                                      typeReference
                                                        userType
                                                          simpleUserType
                                                            simpleIdentifier
                                                              Identifier("Int")
                                                  RANGLE(">")
                                              postfixUnarySuffix
                                                callSuffix
                                                  annotatedLambda
                                                    label
                                                      simpleIdentifier
                                                        Identifier("label")
                                                      AT_NO_WS("@")
                                                    lambdaLiteral
                                                      LCURL("{")
                                                      lambdaParameters
                                                        lambdaParameter
                                                          variableDeclaration
                                                            simpleIdentifier
                                                              Identifier("x")
                                                      ARROW("->")
                                                      statements
                                                        statement
                                                          expression
                                                            disjunction
                                                              conjunction
                                                                equality
                                                                  comparison
                                                                    genericCallLikeComparison
                                                                      infixOperation
                                                                        elvisExpression
                                                                          infixFunctionCall
                                                                            rangeExpression
                                                                              additiveExpression
                                                                                multiplicativeExpression
                                                                                  asExpression
                                                                                    prefixUnaryExpression
                                                                                      postfixUnaryExpression
                                                                                        primaryExpression
                                                                                          simpleIdentifier
                                                                                            Identifier("x")
                                                      RCURL("}")
              semis
                NL("\n")
              statement
                expression
                  disjunction
                    conjunction
                      equality
                        comparison
                          genericCallLikeComparison
                            infixOperation
                              elvisExpression
                                infixFunctionCall
                                  rangeExpression
                                    additiveExpression
                                      multiplicativeExpression
                                        asExpression
                                          prefixUnaryExpression
                                            postfixUnaryExpression
                                              primaryExpression
                                                simpleIdentifier
                                                  Identifier("foo")
                                              postfixUnarySuffix
                                                typeArguments
                                                  LANGLE("<")
                                                  typeProjection
                                                    type
                                                      typeReference
                                                        userType
                                                          simpleUserType
                                                            simpleIdentifier
                                                              Identifier("Int")
                                                  RANGLE(">")
                                              postfixUnarySuffix
                                                callSuffix
                                                  annotatedLambda
                                                    label
                                                      simpleIdentifier
                                                        Identifier("label")
                                                      AT_POST_WS("@ ")
                                                    lambdaLiteral
                                                      LCURL("{")
                                                      lambdaParameters
                                                        lambdaParameter
                                                          variableDeclaration
                                                            simpleIdentifier
                                                              Identifier("x")
                                                      ARROW("->")
                                                      statements
                                                        statement
                                                          expression
                                                            disjunction
                                                              conjunction
                                                                equality
                                                                  comparison
                                                                    genericCallLikeComparison
                                                                      infixOperation
                                                                        elvisExpression
                                                                          infixFunctionCall
                                                                            rangeExpression
                                                                              additiveExpression
                                                                                multiplicativeExpression
                                                                                  asExpression
                                                                                    prefixUnaryExpression
                                                                                      postfixUnaryExpression
                                                                                        primaryExpression
                                                                                          simpleIdentifier
                                                                                            Identifier("x")
                                                      RCURL("}")
              semis
                NL("\n")
              statement
                expression
                  disjunction
                    conjunction
                      equality
                        comparison
                          genericCallLikeComparison
                            infixOperation
                              elvisExpression
                                infixFunctionCall
                                  rangeExpression
                                    additiveExpression
                                      multiplicativeExpression
                                        asExpression
                                          prefixUnaryExpression
                                            postfixUnaryExpression
                                              primaryExpression
                                                simpleIdentifier
                                                  Identifier("foo")
                                              postfixUnarySuffix
                                                typeArguments
                                                  LANGLE("<")
                                                  typeProjection
                                                    type
                                                      typeReference
                                                        userType
                                                          simpleUserType
                                                            simpleIdentifier
                                                              Identifier("Int")
                                                  RANGLE(">")
                                              postfixUnarySuffix
                                                callSuffix
                                                  annotatedLambda
                                                    label
                                                      simpleIdentifier
                                                        Identifier("label")
                                                      AT_NO_WS("@")
                                                    lambdaLiteral
                                                      LCURL("{")
                                                      lambdaParameters
                                                        lambdaParameter
                                                          variableDeclaration
                                                            simpleIdentifier
                                                              Identifier("x")
                                                      ARROW("->")
                                                      statements
                                                        statement
                                                          expression
                                                            disjunction
                                                              conjunction
                                                                equality
                                                                  comparison
                                                                    genericCallLikeComparison
                                                                      infixOperation
                                                                        elvisExpression
                                                                          infixFunctionCall
                                                                            rangeExpression
                                                                              additiveExpression
                                                                                multiplicativeExpression
                                                                                  asExpression
                                                                                    prefixUnaryExpression
                                                                                      postfixUnaryExpression
                                                                                        primaryExpression
                                                                                          simpleIdentifier
                                                                                            Identifier("x")
                                                      RCURL("}")
              semis
                NL("\n")
              statement
                expression
                  disjunction
                    conjunction
                      equality
                        comparison
                          genericCallLikeComparison
                            infixOperation
                              elvisExpression
                                infixFunctionCall
                                  rangeExpression
                                    additiveExpression
                                      multiplicativeExpression
                                        asExpression
                                          prefixUnaryExpression
                                            postfixUnaryExpression
                                              primaryExpression
                                                simpleIdentifier
                                                  Identifier("foo")
                                              postfixUnarySuffix
                                                typeArguments
                                                  LANGLE("<")
                                                  typeProjection
                                                    type
                                                      typeReference
                                                        userType
                                                          simpleUserType
                                                            simpleIdentifier
                                                              Identifier("Int")
                                                  RANGLE(">")
                                              postfixUnarySuffix
                                                callSuffix
                                                  annotatedLambda
                                                    label
                                                      simpleIdentifier
                                                        Identifier("label")
                                                      AT_POST_WS("@\n")
                                                    lambdaLiteral
                                                      LCURL("{")
                                                      lambdaParameters
                                                        lambdaParameter
                                                          variableDeclaration
                                                            simpleIdentifier
                                                              Identifier("x")
                                                      ARROW("->")
                                                      statements
                                                        statement
                                                          expression
                                                            disjunction
                                                              conjunction
                                                                equality
                                                                  comparison
                                                                    genericCallLikeComparison
                                                                      infixOperation
                                                                        elvisExpression
                                                                          infixFunctionCall
                                                                            rangeExpression
                                                                              additiveExpression
                                                                                multiplicativeExpression
                                                                                  asExpression
                                                                                    prefixUnaryExpression
                                                                                      postfixUnaryExpression
                                                                                        primaryExpression
                                                                                          simpleIdentifier
                                                                                            Identifier("x")
                                                      RCURL("}")
              semis
                NL("\n")
                NL("\n")
              statement
                expression
                  disjunction
                    conjunction
                      equality
                        comparison
                          genericCallLikeComparison
                            infixOperation
                              elvisExpression
                                infixFunctionCall
                                  rangeExpression
                                    additiveExpression
                                      multiplicativeExpression
                                        asExpression
                                          prefixUnaryExpression
                                            postfixUnaryExpression
                                              primaryExpression
                                                simpleIdentifier
                                                  Identifier("foo")
                                              postfixUnarySuffix
                                                typeArguments
                                                  LANGLE("<")
                                                  typeProjection
                                                    type
                                                      typeReference
                                                        userType
                                                          simpleUserType
                                                            simpleIdentifier
                                                              Identifier("Int")
                                                  RANGLE(">")
                                              postfixUnarySuffix
                                                callSuffix
                                                  annotatedLambda
                                                    annotation
                                                      singleAnnotation
                                                        AT_PRE_WS("/* */label@ { x -> x }\n    foo<Int>/* */label@{ x -> x }\n    foo<Int>label@/* */{ x -> x }\n    foo<Int> label@/* */{ x -> x }\n    foo<Int> label@/* */\n    { x -> x }\n\n    foo<Int> @Ann("") label@ { x -> x }\n    foo<Int>/* */@")
                                                        unescapedAnnotation
                                                          constructorInvocation
                                                            userType
                                                              simpleUserType
                                                                simpleIdentifier
                                                                  Identifier("Ann")
                                                            valueArguments
                                                              LPAREN("(")
                                                              valueArgument
                                                                expression
                                                                  disjunction
                                                                    conjunction
                                                                      equality
                                                                        comparison
                                                                          genericCallLikeComparison
                                                                            infixOperation
                                                                              elvisExpression
                                                                                infixFunctionCall
                                                                                  rangeExpression
                                                                                    additiveExpression
                                                                                      multiplicativeExpression
                                                                                        asExpression
                                                                                          prefixUnaryExpression
                                                                                            postfixUnaryExpression
                                                                                              primaryExpression
                                                                                                stringLiteral
                                                                                                  lineStringLiteral
                                                                                                    QUOTE_OPEN(""")
                                                                                                    QUOTE_CLOSE(""")
                                                              RPAREN(")")
                                                    label
                                                      simpleIdentifier
                                                        Identifier("label")
                                                      AT_POST_WS("@ ")
                                                    lambdaLiteral
                                                      LCURL("{")
                                                      lambdaParameters
                                                        lambdaParameter
                                                          variableDeclaration
                                                            simpleIdentifier
                                                              Identifier("x")
                                                      ARROW("->")
                                                      statements
                                                        statement
                                                          expression
                                                            disjunction
                                                              conjunction
                                                                equality
                                                                  comparison
                                                                    genericCallLikeComparison
                                                                      infixOperation
                                                                        elvisExpression
                                                                          infixFunctionCall
                                                                            rangeExpression
                                                                              additiveExpression
                                                                                multiplicativeExpression
                                                                                  asExpression
                                                                                    prefixUnaryExpression
                                                                                      postfixUnaryExpression
                                                                                        primaryExpression
                                                                                          simpleIdentifier
                                                                                            Identifier("x")
                                                      RCURL("}")
              semis
                NL("\n")
              statement
                expression
                  disjunction
                    conjunction
                      equality
                        comparison
                          genericCallLikeComparison
                            infixOperation
                              elvisExpression
                                infixFunctionCall
                                  rangeExpression
                                    additiveExpression
                                      multiplicativeExpression
                                        asExpression
                                          prefixUnaryExpression
                                            postfixUnaryExpression
                                              primaryExpression
                                                simpleIdentifier
                                                  Identifier("foo")
                                              postfixUnarySuffix
                                                typeArguments
                                                  LANGLE("<")
                                                  typeProjection
                                                    type
                                                      typeReference
                                                        userType
                                                          simpleUserType
                                                            simpleIdentifier
                                                              Identifier("Int")
                                                  RANGLE(">")
                                              postfixUnarySuffix
                                                callSuffix
                                                  annotatedLambda
                                                    annotation
                                                      singleAnnotation
                                                        AT_NO_WS("@")
                                                        unescapedAnnotation
                                                          constructorInvocation
                                                            userType
                                                              simpleUserType
                                                                simpleIdentifier
                                                                  Identifier("Ann")
                                                            valueArguments
                                                              LPAREN("(")
                                                              valueArgument
                                                                expression
                                                                  disjunction
                                                                    conjunction
                                                                      equality
                                                                        comparison
                                                                          genericCallLikeComparison
                                                                            infixOperation
                                                                              elvisExpression
                                                                                infixFunctionCall
                                                                                  rangeExpression
                                                                                    additiveExpression
                                                                                      multiplicativeExpression
                                                                                        asExpression
                                                                                          prefixUnaryExpression
                                                                                            postfixUnaryExpression
                                                                                              primaryExpression
                                                                                                stringLiteral
                                                                                                  lineStringLiteral
                                                                                                    QUOTE_OPEN(""")
                                                                                                    QUOTE_CLOSE(""")
                                                              RPAREN(")")
                                                    label
                                                      simpleIdentifier
                                                        Identifier("label")
                                                      AT_POST_WS("@ ")
                                                    lambdaLiteral
                                                      LCURL("{")
                                                      lambdaParameters
                                                        lambdaParameter
                                                          variableDeclaration
                                                            simpleIdentifier
                                                              Identifier("x")
                                                      ARROW("->")
                                                      statements
                                                        statement
                                                          expression
                                                            disjunction
                                                              conjunction
                                                                equality
                                                                  comparison
                                                                    genericCallLikeComparison
                                                                      infixOperation
                                                                        elvisExpression
                                                                          infixFunctionCall
                                                                            rangeExpression
                                                                              additiveExpression
                                                                                multiplicativeExpression
                                                                                  asExpression
                                                                                    prefixUnaryExpression
                                                                                      postfixUnaryExpression
                                                                                        primaryExpression
                                                                                          simpleIdentifier
                                                                                            Identifier("x")
                                                      RCURL("}")
              semis
                NL("\n")
              statement
                expression
                  disjunction
                    conjunction
                      equality
                        comparison
                          genericCallLikeComparison
                            infixOperation
                              elvisExpression
                                infixFunctionCall
                                  rangeExpression
                                    additiveExpression
                                      multiplicativeExpression
                                        asExpression
                                          prefixUnaryExpression
                                            postfixUnaryExpression
                                              primaryExpression
                                                simpleIdentifier
                                                  Identifier("foo")
                                              postfixUnarySuffix
                                                typeArguments
                                                  LANGLE("<")
                                                  typeProjection
                                                    type
                                                      typeReference
                                                        userType
                                                          simpleUserType
                                                            simpleIdentifier
                                                              Identifier("Int")
                                                  RANGLE(">")
                                              postfixUnarySuffix
                                                callSuffix
                                                  annotatedLambda
                                                    annotation
                                                      singleAnnotation
                                                        AT_PRE_WS(" @")
                                                        unescapedAnnotation
                                                          constructorInvocation
                                                            userType
                                                              simpleUserType
                                                                simpleIdentifier
                                                                  Identifier("Ann")
                                                            valueArguments
                                                              LPAREN("(")
                                                              valueArgument
                                                                expression
                                                                  disjunction
                                                                    conjunction
                                                                      equality
                                                                        comparison
                                                                          genericCallLikeComparison
                                                                            infixOperation
                                                                              elvisExpression
                                                                                infixFunctionCall
                                                                                  rangeExpression
                                                                                    additiveExpression
                                                                                      multiplicativeExpression
                                                                                        asExpression
                                                                                          prefixUnaryExpression
                                                                                            postfixUnaryExpression
                                                                                              primaryExpression
                                                                                                stringLiteral
                                                                                                  lineStringLiteral
                                                                                                    QUOTE_OPEN(""")
                                                                                                    QUOTE_CLOSE(""")
                                                              RPAREN(")")
                                                    label
                                                      simpleIdentifier
                                                        Identifier("label")
                                                      AT_POST_WS("@/* */")
                                                    lambdaLiteral
                                                      LCURL("{")
                                                      lambdaParameters
                                                        lambdaParameter
                                                          variableDeclaration
                                                            simpleIdentifier
                                                              Identifier("x")
                                                      ARROW("->")
                                                      statements
                                                        statement
                                                          expression
                                                            disjunction
                                                              conjunction
                                                                equality
                                                                  comparison
                                                                    genericCallLikeComparison
                                                                      infixOperation
                                                                        elvisExpression
                                                                          infixFunctionCall
                                                                            rangeExpression
                                                                              additiveExpression
                                                                                multiplicativeExpression
                                                                                  asExpression
                                                                                    prefixUnaryExpression
                                                                                      postfixUnaryExpression
                                                                                        primaryExpression
                                                                                          simpleIdentifier
                                                                                            Identifier("x")
                                                      RCURL("}")
              semis
                NL("\n")
              statement
                expression
                  disjunction
                    conjunction
                      equality
                        comparison
                          genericCallLikeComparison
                            infixOperation
                              elvisExpression
                                infixFunctionCall
                                  rangeExpression
                                    additiveExpression
                                      multiplicativeExpression
                                        asExpression
                                          prefixUnaryExpression
                                            postfixUnaryExpression
                                              primaryExpression
                                                simpleIdentifier
                                                  Identifier("foo")
                                              postfixUnarySuffix
                                                typeArguments
                                                  LANGLE("<")
                                                  typeProjection
                                                    type
                                                      typeReference
                                                        userType
                                                          simpleUserType
                                                            simpleIdentifier
                                                              Identifier("Int")
                                                  RANGLE(">")
                                              postfixUnarySuffix
                                                callSuffix
                                                  annotatedLambda
                                                    annotation
                                                      singleAnnotation
                                                        AT_PRE_WS(" @")
                                                        unescapedAnnotation
                                                          constructorInvocation
                                                            userType
                                                              simpleUserType
                                                                simpleIdentifier
                                                                  Identifier("Ann")
                                                            valueArguments
                                                              LPAREN("(")
                                                              valueArgument
                                                                expression
                                                                  disjunction
                                                                    conjunction
                                                                      equality
                                                                        comparison
                                                                          genericCallLikeComparison
                                                                            infixOperation
                                                                              elvisExpression
                                                                                infixFunctionCall
                                                                                  rangeExpression
                                                                                    additiveExpression
                                                                                      multiplicativeExpression
                                                                                        asExpression
                                                                                          prefixUnaryExpression
                                                                                            postfixUnaryExpression
                                                                                              primaryExpression
                                                                                                stringLiteral
                                                                                                  lineStringLiteral
                                                                                                    QUOTE_OPEN(""")
                                                                                                    QUOTE_CLOSE(""")
                                                              RPAREN(")")
                                                    label
                                                      simpleIdentifier
                                                        Identifier("label")
                                                      AT_POST_WS("@/* */")
                                                      NL("\n")
                                                    lambdaLiteral
                                                      LCURL("{")
                                                      lambdaParameters
                                                        lambdaParameter
                                                          variableDeclaration
                                                            simpleIdentifier
                                                              Identifier("x")
                                                      ARROW("->")
                                                      statements
                                                        statement
                                                          expression
                                                            disjunction
                                                              conjunction
                                                                equality
                                                                  comparison
                                                                    genericCallLikeComparison
                                                                      infixOperation
                                                                        elvisExpression
                                                                          infixFunctionCall
                                                                            rangeExpression
                                                                              additiveExpression
                                                                                multiplicativeExpression
                                                                                  asExpression
                                                                                    prefixUnaryExpression
                                                                                      postfixUnaryExpression
                                                                                        primaryExpression
                                                                                          simpleIdentifier
                                                                                            Identifier("x")
                                                      RCURL("}")
              semis
                NL("\n")
            RCURL("}")
    semis
      NL("\n")
  EOF("<EOF>")
