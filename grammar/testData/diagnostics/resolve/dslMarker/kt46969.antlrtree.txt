File: kt46969.kt - 35c27eb4b78c85d53f7be749bf8a3601
  packageHeader
  importList
  topLevelObject
    declaration
      classDeclaration
        modifiers
          annotation
            singleAnnotation
              AT_PRE_WS("\n@")
              unescapedAnnotation
                userType
                  simpleUserType
                    simpleIdentifier
                      Identifier("DslMarker")
            NL("\n")
          modifier
            classModifier
              ANNOTATION("annotation")
        CLASS("class")
        simpleIdentifier
          Identifier("Foo")
    semis
      NL("\n")
  topLevelObject
    declaration
      classDeclaration
        modifiers
          annotation
            singleAnnotation
              AT_PRE_WS("\n@")
              unescapedAnnotation
                userType
                  simpleUserType
                    simpleIdentifier
                      Identifier("Foo")
            NL("\n")
        INTERFACE("interface")
        simpleIdentifier
          Identifier("Scope")
        typeParameters
          LANGLE("<")
          typeParameter
            simpleIdentifier
              Identifier("T")
          RANGLE(">")
        classBody
          LCURL("{")
          NL("\n")
          classMemberDeclarations
            classMemberDeclaration
              declaration
                functionDeclaration
                  FUN("fun")
                  simpleIdentifier
                    VALUE("value")
                  functionValueParameters
                    LPAREN("(")
                    functionValueParameter
                      parameter
                        simpleIdentifier
                          VALUE("value")
                        COLON(":")
                        type
                          typeReference
                            userType
                              simpleUserType
                                simpleIdentifier
                                  Identifier("T")
                    RPAREN(")")
            semis
              NL("\n")
          RCURL("}")
    semis
      NL("\n")
      NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        simpleIdentifier
          Identifier("foo")
        functionValueParameters
          LPAREN("(")
          functionValueParameter
            parameter
              simpleIdentifier
                Identifier("block")
              COLON(":")
              type
                functionType
                  receiverType
                    typeReference
                      userType
                        simpleUserType
                          simpleIdentifier
                            Identifier("Scope")
                          typeArguments
                            LANGLE("<")
                            typeProjection
                              type
                                typeReference
                                  userType
                                    simpleUserType
                                      simpleIdentifier
                                        Identifier("Nothing")
                            RANGLE(">")
                  DOT(".")
                  functionTypeParameters
                    LPAREN("(")
                    RPAREN(")")
                  ARROW("->")
                  type
                    typeReference
                      userType
                        simpleUserType
                          simpleIdentifier
                            Identifier("Unit")
          RPAREN(")")
        functionBody
          block
            LCURL("{")
            statements
            RCURL("}")
    semis
      NL("\n")
      NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        modifiers
          modifier
            functionModifier
              INLINE("inline")
        FUN("fun")
        typeParameters
          LANGLE("<")
          typeParameter
            typeParameterModifiers
              typeParameterModifier
                reificationModifier
                  REIFIED("reified")
            simpleIdentifier
              Identifier("T")
          RANGLE(">")
        receiverType
          typeReference
            userType
              simpleUserType
                simpleIdentifier
                  Identifier("Scope")
                typeArguments
                  LANGLE("<")
                  typeProjection
                    MULT("*")
                  RANGLE(">")
        DOT(".")
        simpleIdentifier
          Identifier("nested")
        functionValueParameters
          LPAREN("(")
          functionValueParameter
            parameterModifiers
              parameterModifier
                NOINLINE("noinline")
            parameter
              simpleIdentifier
                Identifier("block")
              COLON(":")
              type
                functionType
                  receiverType
                    typeReference
                      userType
                        simpleUserType
                          simpleIdentifier
                            Identifier("Scope")
                          typeArguments
                            LANGLE("<")
                            typeProjection
                              type
                                typeReference
                                  userType
                                    simpleUserType
                                      simpleIdentifier
                                        Identifier("T")
                            RANGLE(">")
                  DOT(".")
                  functionTypeParameters
                    LPAREN("(")
                    RPAREN(")")
                  ARROW("->")
                  type
                    typeReference
                      userType
                        simpleUserType
                          simpleIdentifier
                            Identifier("Unit")
          RPAREN(")")
        functionBody
          block
            LCURL("{")
            statements
            RCURL("}")
    semis
      NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        modifiers
          modifier
            functionModifier
              INLINE("inline")
        FUN("fun")
        typeParameters
          LANGLE("<")
          typeParameter
            typeParameterModifiers
              typeParameterModifier
                reificationModifier
                  REIFIED("reified")
            simpleIdentifier
              Identifier("K")
          RANGLE(">")
        receiverType
          typeReference
            userType
              simpleUserType
                simpleIdentifier
                  Identifier("Scope")
                typeArguments
                  LANGLE("<")
                  typeProjection
                    MULT("*")
                  RANGLE(">")
        DOT(".")
        simpleIdentifier
          Identifier("nested2")
        functionValueParameters
          LPAREN("(")
          functionValueParameter
            parameterModifiers
              parameterModifier
                NOINLINE("noinline")
            parameter
              simpleIdentifier
                Identifier("block")
              COLON(":")
              type
                functionType
                  receiverType
                    typeReference
                      userType
                        simpleUserType
                          simpleIdentifier
                            Identifier("Scope")
                          typeArguments
                            LANGLE("<")
                            typeProjection
                              type
                                typeReference
                                  userType
                                    simpleUserType
                                      simpleIdentifier
                                        Identifier("K")
                            RANGLE(">")
                  DOT(".")
                  functionTypeParameters
                    LPAREN("(")
                    RPAREN(")")
                  ARROW("->")
                  type
                    typeReference
                      userType
                        simpleUserType
                          simpleIdentifier
                            Identifier("Unit")
          RPAREN(")")
        functionBody
          block
            LCURL("{")
            statements
            RCURL("}")
    semis
      NL("\n")
      NL("\n")
      NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        simpleIdentifier
          Identifier("main")
        functionValueParameters
          LPAREN("(")
          RPAREN(")")
        functionBody
          block
            LCURL("{")
            NL("\n")
            statements
              statement
                expression
                  disjunction
                    conjunction
                      equality
                        comparison
                          genericCallLikeComparison
                            infixOperation
                              elvisExpression
                                infixFunctionCall
                                  rangeExpression
                                    additiveExpression
                                      multiplicativeExpression
                                        asExpression
                                          prefixUnaryExpression
                                            postfixUnaryExpression
                                              primaryExpression
                                                simpleIdentifier
                                                  Identifier("foo")
                                              postfixUnarySuffix
                                                callSuffix
                                                  annotatedLambda
                                                    lambdaLiteral
                                                      LCURL("{")
                                                      NL("\n")
                                                      statements
                                                        statement
                                                          expression
                                                            disjunction
                                                              conjunction
                                                                equality
                                                                  comparison
                                                                    genericCallLikeComparison
                                                                      infixOperation
                                                                        elvisExpression
                                                                          infixFunctionCall
                                                                            rangeExpression
                                                                              additiveExpression
                                                                                multiplicativeExpression
                                                                                  asExpression
                                                                                    prefixUnaryExpression
                                                                                      postfixUnaryExpression
                                                                                        primaryExpression
                                                                                          simpleIdentifier
                                                                                            Identifier("nested")
                                                                                        postfixUnarySuffix
                                                                                          callSuffix
                                                                                            annotatedLambda
                                                                                              lambdaLiteral
                                                                                                LCURL("{")
                                                                                                NL("\n")
                                                                                                statements
                                                                                                  statement
                                                                                                    expression
                                                                                                      disjunction
                                                                                                        conjunction
                                                                                                          equality
                                                                                                            comparison
                                                                                                              genericCallLikeComparison
                                                                                                                infixOperation
                                                                                                                  elvisExpression
                                                                                                                    infixFunctionCall
                                                                                                                      rangeExpression
                                                                                                                        additiveExpression
                                                                                                                          multiplicativeExpression
                                                                                                                            asExpression
                                                                                                                              prefixUnaryExpression
                                                                                                                                postfixUnaryExpression
                                                                                                                                  primaryExpression
                                                                                                                                    simpleIdentifier
                                                                                                                                      VALUE("value")
                                                                                                                                  postfixUnarySuffix
                                                                                                                                    callSuffix
                                                                                                                                      valueArguments
                                                                                                                                        LPAREN("(")
                                                                                                                                        valueArgument
                                                                                                                                          expression
                                                                                                                                            disjunction
                                                                                                                                              conjunction
                                                                                                                                                equality
                                                                                                                                                  comparison
                                                                                                                                                    genericCallLikeComparison
                                                                                                                                                      infixOperation
                                                                                                                                                        elvisExpression
                                                                                                                                                          infixFunctionCall
                                                                                                                                                            rangeExpression
                                                                                                                                                              additiveExpression
                                                                                                                                                                multiplicativeExpression
                                                                                                                                                                  asExpression
                                                                                                                                                                    prefixUnaryExpression
                                                                                                                                                                      postfixUnaryExpression
                                                                                                                                                                        primaryExpression
                                                                                                                                                                          literalConstant
                                                                                                                                                                            IntegerLiteral("1")
                                                                                                                                        RPAREN(")")
                                                                                                  semis
                                                                                                    NL("\n")
                                                                                                    NL("\n")
                                                                                                  statement
                                                                                                    expression
                                                                                                      disjunction
                                                                                                        conjunction
                                                                                                          equality
                                                                                                            comparison
                                                                                                              genericCallLikeComparison
                                                                                                                infixOperation
                                                                                                                  elvisExpression
                                                                                                                    infixFunctionCall
                                                                                                                      rangeExpression
                                                                                                                        additiveExpression
                                                                                                                          multiplicativeExpression
                                                                                                                            asExpression
                                                                                                                              prefixUnaryExpression
                                                                                                                                postfixUnaryExpression
                                                                                                                                  primaryExpression
                                                                                                                                    simpleIdentifier
                                                                                                                                      Identifier("nested2")
                                                                                                                                  postfixUnarySuffix
                                                                                                                                    callSuffix
                                                                                                                                      annotatedLambda
                                                                                                                                        lambdaLiteral
                                                                                                                                          LCURL("{")
                                                                                                                                          NL("\n")
                                                                                                                                          statements
                                                                                                                                            statement
                                                                                                                                              expression
                                                                                                                                                disjunction
                                                                                                                                                  conjunction
                                                                                                                                                    equality
                                                                                                                                                      comparison
                                                                                                                                                        genericCallLikeComparison
                                                                                                                                                          infixOperation
                                                                                                                                                            elvisExpression
                                                                                                                                                              infixFunctionCall
                                                                                                                                                                rangeExpression
                                                                                                                                                                  additiveExpression
                                                                                                                                                                    multiplicativeExpression
                                                                                                                                                                      asExpression
                                                                                                                                                                        prefixUnaryExpression
                                                                                                                                                                          postfixUnaryExpression
                                                                                                                                                                            primaryExpression
                                                                                                                                                                              simpleIdentifier
                                                                                                                                                                                VALUE("value")
                                                                                                                                                                            postfixUnarySuffix
                                                                                                                                                                              callSuffix
                                                                                                                                                                                valueArguments
                                                                                                                                                                                  LPAREN("(")
                                                                                                                                                                                  valueArgument
                                                                                                                                                                                    expression
                                                                                                                                                                                      disjunction
                                                                                                                                                                                        conjunction
                                                                                                                                                                                          equality
                                                                                                                                                                                            comparison
                                                                                                                                                                                              genericCallLikeComparison
                                                                                                                                                                                                infixOperation
                                                                                                                                                                                                  elvisExpression
                                                                                                                                                                                                    infixFunctionCall
                                                                                                                                                                                                      rangeExpression
                                                                                                                                                                                                        additiveExpression
                                                                                                                                                                                                          multiplicativeExpression
                                                                                                                                                                                                            asExpression
                                                                                                                                                                                                              prefixUnaryExpression
                                                                                                                                                                                                                postfixUnaryExpression
                                                                                                                                                                                                                  primaryExpression
                                                                                                                                                                                                                    stringLiteral
                                                                                                                                                                                                                      lineStringLiteral
                                                                                                                                                                                                                        QUOTE_OPEN(""")
                                                                                                                                                                                                                        lineStringContent
                                                                                                                                                                                                                          LineStrText("foo")
                                                                                                                                                                                                                        QUOTE_CLOSE(""")
                                                                                                                                                                                  RPAREN(")")
                                                                                                                                            semis
                                                                                                                                              NL("\n")
                                                                                                                                          RCURL("}")
                                                                                                  semis
                                                                                                    NL("\n")
                                                                                                RCURL("}")
                                                        semis
                                                          NL("\n")
                                                      RCURL("}")
              semis
                NL("\n")
            RCURL("}")
  EOF("<EOF>")
