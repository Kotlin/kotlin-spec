File: implicitAndInvokeExtensionPriority.kt - 0e21f115f147cb6e5f60e49266087083
  NL("\n")
  NL("\n")
  NL("\n")
  packageHeader
  importList
  topLevelObject
    declaration
      classDeclaration
        CLASS("class")
        simpleIdentifier
          Identifier("A")
        classBody
          LCURL("{")
          NL("\n")
          classMemberDeclarations
            classMemberDeclaration
              declaration
                functionDeclaration
                  FUN("fun")
                  simpleIdentifier
                    Identifier("bar")
                  functionValueParameters
                    LPAREN("(")
                    RPAREN(")")
                  functionBody
                    block
                      LCURL("{")
                      NL("\n")
                      statements
                        statement
                          declaration
                            propertyDeclaration
                              VAL("val")
                              variableDeclaration
                                simpleIdentifier
                                  Identifier("foo")
                                COLON(":")
                                type
                                  functionType
                                    receiverType
                                      typeReference
                                        userType
                                          simpleUserType
                                            simpleIdentifier
                                              Identifier("String")
                                    DOT(".")
                                    functionTypeParameters
                                      LPAREN("(")
                                      RPAREN(")")
                                    ARROW("->")
                                    type
                                      typeReference
                                        userType
                                          simpleUserType
                                            simpleIdentifier
                                              Identifier("Int")
                              ASSIGNMENT("=")
                              expression
                                disjunction
                                  conjunction
                                    equality
                                      comparison
                                        genericCallLikeComparison
                                          infixOperation
                                            elvisExpression
                                              infixFunctionCall
                                                rangeExpression
                                                  additiveExpression
                                                    multiplicativeExpression
                                                      asExpression
                                                        prefixUnaryExpression
                                                          postfixUnaryExpression
                                                            primaryExpression
                                                              functionLiteral
                                                                lambdaLiteral
                                                                  LCURL("{")
                                                                  statements
                                                                    statement
                                                                      expression
                                                                        disjunction
                                                                          conjunction
                                                                            equality
                                                                              comparison
                                                                                genericCallLikeComparison
                                                                                  infixOperation
                                                                                    elvisExpression
                                                                                      infixFunctionCall
                                                                                        rangeExpression
                                                                                          additiveExpression
                                                                                            multiplicativeExpression
                                                                                              asExpression
                                                                                                prefixUnaryExpression
                                                                                                  postfixUnaryExpression
                                                                                                    primaryExpression
                                                                                                      literalConstant
                                                                                                        IntegerLiteral("1")
                                                                  RCURL("}")
                        semis
                          NL("\n")
                        statement
                          declaration
                            functionDeclaration
                              FUN("fun")
                              receiverType
                                typeReference
                                  userType
                                    simpleUserType
                                      simpleIdentifier
                                        Identifier("String")
                              DOT(".")
                              simpleIdentifier
                                Identifier("foo")
                              functionValueParameters
                                LPAREN("(")
                                RPAREN(")")
                              COLON(":")
                              type
                                typeReference
                                  userType
                                    simpleUserType
                                      simpleIdentifier
                                        Identifier("String")
                              functionBody
                                ASSIGNMENT("=")
                                expression
                                  disjunction
                                    conjunction
                                      equality
                                        comparison
                                          genericCallLikeComparison
                                            infixOperation
                                              elvisExpression
                                                infixFunctionCall
                                                  rangeExpression
                                                    additiveExpression
                                                      multiplicativeExpression
                                                        asExpression
                                                          prefixUnaryExpression
                                                            postfixUnaryExpression
                                                              primaryExpression
                                                                stringLiteral
                                                                  lineStringLiteral
                                                                    QUOTE_OPEN(""")
                                                                    QUOTE_CLOSE(""")
                        semis
                          NL("\n")
                        statement
                          expression
                            disjunction
                              conjunction
                                equality
                                  comparison
                                    genericCallLikeComparison
                                      infixOperation
                                        elvisExpression
                                          infixFunctionCall
                                            rangeExpression
                                              additiveExpression
                                                multiplicativeExpression
                                                  asExpression
                                                    prefixUnaryExpression
                                                      postfixUnaryExpression
                                                        primaryExpression
                                                          simpleIdentifier
                                                            Identifier("with")
                                                        postfixUnarySuffix
                                                          callSuffix
                                                            valueArguments
                                                              LPAREN("(")
                                                              valueArgument
                                                                expression
                                                                  disjunction
                                                                    conjunction
                                                                      equality
                                                                        comparison
                                                                          genericCallLikeComparison
                                                                            infixOperation
                                                                              elvisExpression
                                                                                infixFunctionCall
                                                                                  rangeExpression
                                                                                    additiveExpression
                                                                                      multiplicativeExpression
                                                                                        asExpression
                                                                                          prefixUnaryExpression
                                                                                            postfixUnaryExpression
                                                                                              primaryExpression
                                                                                                stringLiteral
                                                                                                  lineStringLiteral
                                                                                                    QUOTE_OPEN(""")
                                                                                                    lineStringContent
                                                                                                      LineStrText("2")
                                                                                                    QUOTE_CLOSE(""")
                                                              RPAREN(")")
                                                            annotatedLambda
                                                              lambdaLiteral
                                                                LCURL("{")
                                                                NL("\n")
                                                                NL("\n")
                                                                NL("\n")
                                                                NL("\n")
                                                                statements
                                                                  statement
                                                                    expression
                                                                      disjunction
                                                                        conjunction
                                                                          equality
                                                                            comparison
                                                                              genericCallLikeComparison
                                                                                infixOperation
                                                                                  elvisExpression
                                                                                    infixFunctionCall
                                                                                      rangeExpression
                                                                                        additiveExpression
                                                                                          multiplicativeExpression
                                                                                            asExpression
                                                                                              prefixUnaryExpression
                                                                                                postfixUnaryExpression
                                                                                                  primaryExpression
                                                                                                    simpleIdentifier
                                                                                                      Identifier("takeInt")
                                                                                                  postfixUnarySuffix
                                                                                                    callSuffix
                                                                                                      valueArguments
                                                                                                        LPAREN("(")
                                                                                                        valueArgument
                                                                                                          expression
                                                                                                            disjunction
                                                                                                              conjunction
                                                                                                                equality
                                                                                                                  comparison
                                                                                                                    genericCallLikeComparison
                                                                                                                      infixOperation
                                                                                                                        elvisExpression
                                                                                                                          infixFunctionCall
                                                                                                                            rangeExpression
                                                                                                                              additiveExpression
                                                                                                                                multiplicativeExpression
                                                                                                                                  asExpression
                                                                                                                                    prefixUnaryExpression
                                                                                                                                      postfixUnaryExpression
                                                                                                                                        primaryExpression
                                                                                                                                          simpleIdentifier
                                                                                                                                            Identifier("foo")
                                                                                                                                        postfixUnarySuffix
                                                                                                                                          callSuffix
                                                                                                                                            valueArguments
                                                                                                                                              LPAREN("(")
                                                                                                                                              RPAREN(")")
                                                                                                        RPAREN(")")
                                                                  semis
                                                                    NL("\n")
                                                                RCURL("}")
                        semis
                          NL("\n")
                      RCURL("}")
            semis
              NL("\n")
          RCURL("}")
    semis
      NL("\n")
      NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        simpleIdentifier
          Identifier("takeInt")
        functionValueParameters
          LPAREN("(")
          functionValueParameter
            parameter
              simpleIdentifier
                Identifier("x")
              COLON(":")
              type
                typeReference
                  userType
                    simpleUserType
                      simpleIdentifier
                        Identifier("Int")
          RPAREN(")")
        functionBody
          block
            LCURL("{")
            statements
            RCURL("}")
  EOF("<EOF>")
