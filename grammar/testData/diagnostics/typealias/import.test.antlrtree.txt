File: import.test.kt - 2663c708be812a54a9b746c2de527264
  packageHeader
    PACKAGE("package")
    identifier
      simpleIdentifier
        Identifier("package3")
    semi
      NL("\n")
      NL("\n")
  importList
    importHeader
      IMPORT("import")
      identifier
        simpleIdentifier
          Identifier("package1")
      DOT(".")
      MULT("*")
      semi
        NL("\n")
    importHeader
      IMPORT("import")
      identifier
        simpleIdentifier
          Identifier("package2")
        DOT(".")
        simpleIdentifier
          Identifier("I")
      semi
        NL("\n")
    importHeader
      IMPORT("import")
      identifier
        simpleIdentifier
          Identifier("package2")
        DOT(".")
        simpleIdentifier
          Identifier("Outer")
        DOT(".")
        simpleIdentifier
          Identifier("A")
      semi
        NL("\n")
        NL("\n")
  topLevelObject
    declaration
      propertyDeclaration
        VAL("val")
        variableDeclaration
          simpleIdentifier
            Identifier("testS")
          COLON(":")
          type
            typeReference
              userType
                simpleUserType
                  simpleIdentifier
                    Identifier("S")
        ASSIGNMENT("=")
        expression
          disjunction
            conjunction
              equality
                comparison
                  genericCallLikeComparison
                    infixOperation
                      elvisExpression
                        infixFunctionCall
                          rangeExpression
                            additiveExpression
                              multiplicativeExpression
                                asExpression
                                  prefixUnaryExpression
                                    postfixUnaryExpression
                                      primaryExpression
                                        stringLiteral
                                          lineStringLiteral
                                            QUOTE_OPEN(""")
                                            QUOTE_CLOSE(""")
        NL("\n")
  topLevelObject
    declaration
      propertyDeclaration
        VAL("val")
        variableDeclaration
          simpleIdentifier
            Identifier("testI")
          COLON(":")
          type
            typeReference
              userType
                simpleUserType
                  simpleIdentifier
                    Identifier("I")
        ASSIGNMENT("=")
        expression
          disjunction
            conjunction
              equality
                comparison
                  genericCallLikeComparison
                    infixOperation
                      elvisExpression
                        infixFunctionCall
                          rangeExpression
                            additiveExpression
                              multiplicativeExpression
                                asExpression
                                  prefixUnaryExpression
                                    postfixUnaryExpression
                                      primaryExpression
                                        literalConstant
                                          IntegerLiteral("42")
        NL("\n")
  topLevelObject
    declaration
      propertyDeclaration
        VAL("val")
        variableDeclaration
          simpleIdentifier
            Identifier("testA")
          COLON(":")
          type
            typeReference
              userType
                simpleUserType
                  simpleIdentifier
                    Identifier("A")
        ASSIGNMENT("=")
        expression
          disjunction
            conjunction
              equality
                comparison
                  genericCallLikeComparison
                    infixOperation
                      elvisExpression
                        infixFunctionCall
                          rangeExpression
                            additiveExpression
                              multiplicativeExpression
                                asExpression
                                  prefixUnaryExpression
                                    postfixUnaryExpression
                                      primaryExpression
                                        simpleIdentifier
                                          Identifier("Any")
                                      postfixUnarySuffix
                                        callSuffix
                                          valueArguments
                                            LPAREN("(")
                                            RPAREN(")")
        NL("\n")
  EOF("<EOF>")
