File: recursive.kt - a7dc000fd9791350d62a62a6d9df1b18
  NL("\n")
  packageHeader
  importList
  topLevelObject
    declaration
      typeAlias
        TYPE_ALIAS("typealias")
        simpleIdentifier
          Identifier("R")
        ASSIGNMENT("=")
        type
          typeReference
            userType
              simpleUserType
                simpleIdentifier
                  Identifier("R")
    semis
      NL("\n")
      NL("\n")
  topLevelObject
    declaration
      typeAlias
        TYPE_ALIAS("typealias")
        simpleIdentifier
          Identifier("L")
        ASSIGNMENT("=")
        type
          typeReference
            userType
              simpleUserType
                simpleIdentifier
                  Identifier("List")
                typeArguments
                  LANGLE("<")
                  typeProjection
                    type
                      typeReference
                        userType
                          simpleUserType
                            simpleIdentifier
                              Identifier("L")
                  RANGLE(">")
    semis
      NL("\n")
      NL("\n")
  topLevelObject
    declaration
      typeAlias
        TYPE_ALIAS("typealias")
        simpleIdentifier
          Identifier("A")
        ASSIGNMENT("=")
        type
          typeReference
            userType
              simpleUserType
                simpleIdentifier
                  Identifier("B")
    semis
      NL("\n")
  topLevelObject
    declaration
      typeAlias
        TYPE_ALIAS("typealias")
        simpleIdentifier
          Identifier("B")
        ASSIGNMENT("=")
        type
          typeReference
            userType
              simpleUserType
                simpleIdentifier
                  Identifier("A")
    semis
      NL("\n")
      NL("\n")
  topLevelObject
    declaration
      typeAlias
        TYPE_ALIAS("typealias")
        simpleIdentifier
          Identifier("F1")
        ASSIGNMENT("=")
        type
          functionType
            functionTypeParameters
              LPAREN("(")
              type
                typeReference
                  userType
                    simpleUserType
                      simpleIdentifier
                        Identifier("Int")
              RPAREN(")")
            ARROW("->")
            type
              typeReference
                userType
                  simpleUserType
                    simpleIdentifier
                      Identifier("F2")
    semis
      NL("\n")
  topLevelObject
    declaration
      typeAlias
        TYPE_ALIAS("typealias")
        simpleIdentifier
          Identifier("F2")
        ASSIGNMENT("=")
        type
          functionType
            functionTypeParameters
              LPAREN("(")
              type
                typeReference
                  userType
                    simpleUserType
                      simpleIdentifier
                        Identifier("F1")
              RPAREN(")")
            ARROW("->")
            type
              typeReference
                userType
                  simpleUserType
                    simpleIdentifier
                      Identifier("Int")
    semis
      NL("\n")
  topLevelObject
    declaration
      typeAlias
        TYPE_ALIAS("typealias")
        simpleIdentifier
          Identifier("F3")
        ASSIGNMENT("=")
        type
          functionType
            functionTypeParameters
              LPAREN("(")
              type
                typeReference
                  userType
                    simpleUserType
                      simpleIdentifier
                        Identifier("F1")
              RPAREN(")")
            ARROW("->")
            type
              typeReference
                userType
                  simpleUserType
                    simpleIdentifier
                      Identifier("Int")
    semis
      NL("\n")
      NL("\n")
  topLevelObject
    declaration
      propertyDeclaration
        VAL("val")
        variableDeclaration
          simpleIdentifier
            Identifier("x")
          COLON(":")
          type
            typeReference
              userType
                simpleUserType
                  simpleIdentifier
                    Identifier("F3")
        ASSIGNMENT("=")
        expression
          disjunction
            conjunction
              equality
                comparison
                  genericCallLikeComparison
                    infixOperation
                      elvisExpression
                        infixFunctionCall
                          rangeExpression
                            additiveExpression
                              multiplicativeExpression
                                asExpression
                                  prefixUnaryExpression
                                    postfixUnaryExpression
                                      primaryExpression
                                        simpleIdentifier
                                          Identifier("TODO")
                                      postfixUnarySuffix
                                        callSuffix
                                          valueArguments
                                            LPAREN("(")
                                            RPAREN(")")
        NL("\n")
  EOF("<EOF>")
