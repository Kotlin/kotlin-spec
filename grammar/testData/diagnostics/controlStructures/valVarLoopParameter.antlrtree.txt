File: valVarLoopParameter.kt - bac1ff94cbbe975d76fecb9fb475440f (WITH_ERRORS)
  NL("\n")
  packageHeader
  importList
  topLevelObject
    declaration
      classDeclaration
        CLASS("class")
        simpleIdentifier
          Identifier("Pair")
        classBody
          LCURL("{")
          NL("\n")
          classMemberDeclarations
            classMemberDeclaration
              declaration
                functionDeclaration
                  modifiers
                    modifier
                      functionModifier
                        OPERATOR("operator")
                  FUN("fun")
                  simpleIdentifier
                    Identifier("component1")
                  functionValueParameters
                    LPAREN("(")
                    RPAREN(")")
                  COLON(":")
                  type
                    typeReference
                      userType
                        simpleUserType
                          simpleIdentifier
                            Identifier("Int")
                  functionBody
                    ASSIGNMENT("=")
                    expression
                      disjunction
                        conjunction
                          equality
                            comparison
                              genericCallLikeComparison
                                infixOperation
                                  elvisExpression
                                    infixFunctionCall
                                      rangeExpression
                                        additiveExpression
                                          multiplicativeExpression
                                            asExpression
                                              prefixUnaryExpression
                                                postfixUnaryExpression
                                                  primaryExpression
                                                    literalConstant
                                                      NullLiteral("null")
                                                  postfixUnarySuffix
                                                    postfixUnaryOperator
                                                      EXCL_NO_WS("!")
                                                      excl
                                                        EXCL_NO_WS("!")
            semis
              NL("\n")
            classMemberDeclaration
              declaration
                functionDeclaration
                  modifiers
                    modifier
                      functionModifier
                        OPERATOR("operator")
                  FUN("fun")
                  simpleIdentifier
                    Identifier("component2")
                  functionValueParameters
                    LPAREN("(")
                    RPAREN(")")
                  COLON(":")
                  type
                    typeReference
                      userType
                        simpleUserType
                          simpleIdentifier
                            Identifier("Int")
                  functionBody
                    ASSIGNMENT("=")
                    expression
                      disjunction
                        conjunction
                          equality
                            comparison
                              genericCallLikeComparison
                                infixOperation
                                  elvisExpression
                                    infixFunctionCall
                                      rangeExpression
                                        additiveExpression
                                          multiplicativeExpression
                                            asExpression
                                              prefixUnaryExpression
                                                postfixUnaryExpression
                                                  primaryExpression
                                                    literalConstant
                                                      NullLiteral("null")
                                                  postfixUnarySuffix
                                                    postfixUnaryOperator
                                                      EXCL_NO_WS("!")
                                                      excl
                                                        EXCL_NO_WS("!")
            semis
              NL("\n")
          RCURL("}")
    semis
      NL("\n")
      NL("\n")
  topLevelObject
    declaration
      classDeclaration
        CLASS("class")
        simpleIdentifier
          Identifier("Coll")
        classBody
          LCURL("{")
          NL("\n")
          classMemberDeclarations
            classMemberDeclaration
              declaration
                functionDeclaration
                  modifiers
                    modifier
                      functionModifier
                        OPERATOR("operator")
                  FUN("fun")
                  simpleIdentifier
                    Identifier("iterator")
                  functionValueParameters
                    LPAREN("(")
                    RPAREN(")")
                  COLON(":")
                  type
                    typeReference
                      userType
                        simpleUserType
                          simpleIdentifier
                            Identifier("It")
                  functionBody
                    ASSIGNMENT("=")
                    expression
                      disjunction
                        conjunction
                          equality
                            comparison
                              genericCallLikeComparison
                                infixOperation
                                  elvisExpression
                                    infixFunctionCall
                                      rangeExpression
                                        additiveExpression
                                          multiplicativeExpression
                                            asExpression
                                              prefixUnaryExpression
                                                postfixUnaryExpression
                                                  primaryExpression
                                                    simpleIdentifier
                                                      Identifier("It")
                                                  postfixUnarySuffix
                                                    callSuffix
                                                      valueArguments
                                                        LPAREN("(")
                                                        RPAREN(")")
            semis
              NL("\n")
          RCURL("}")
    semis
      NL("\n")
      NL("\n")
  topLevelObject
    declaration
      classDeclaration
        CLASS("class")
        simpleIdentifier
          Identifier("It")
        classBody
          LCURL("{")
          NL("\n")
          classMemberDeclarations
            classMemberDeclaration
              declaration
                functionDeclaration
                  modifiers
                    modifier
                      functionModifier
                        OPERATOR("operator")
                  FUN("fun")
                  simpleIdentifier
                    Identifier("next")
                  functionValueParameters
                    LPAREN("(")
                    RPAREN(")")
                  functionBody
                    ASSIGNMENT("=")
                    expression
                      disjunction
                        conjunction
                          equality
                            comparison
                              genericCallLikeComparison
                                infixOperation
                                  elvisExpression
                                    infixFunctionCall
                                      rangeExpression
                                        additiveExpression
                                          multiplicativeExpression
                                            asExpression
                                              prefixUnaryExpression
                                                postfixUnaryExpression
                                                  primaryExpression
                                                    simpleIdentifier
                                                      Identifier("Pair")
                                                  postfixUnarySuffix
                                                    callSuffix
                                                      valueArguments
                                                        LPAREN("(")
                                                        RPAREN(")")
            semis
              NL("\n")
            classMemberDeclaration
              declaration
                functionDeclaration
                  modifiers
                    modifier
                      functionModifier
                        OPERATOR("operator")
                  FUN("fun")
                  simpleIdentifier
                    Identifier("hasNext")
                  functionValueParameters
                    LPAREN("(")
                    RPAREN(")")
                  functionBody
                    ASSIGNMENT("=")
                    expression
                      disjunction
                        conjunction
                          equality
                            comparison
                              genericCallLikeComparison
                                infixOperation
                                  elvisExpression
                                    infixFunctionCall
                                      rangeExpression
                                        additiveExpression
                                          multiplicativeExpression
                                            asExpression
                                              prefixUnaryExpression
                                                postfixUnaryExpression
                                                  primaryExpression
                                                    literalConstant
                                                      BooleanLiteral("false")
            semis
              NL("\n")
          RCURL("}")
    semis
      NL("\n")
      NL("\n")
      NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        simpleIdentifier
          Identifier("f")
        functionValueParameters
          LPAREN("(")
          RPAREN(")")
  LCURL("{")
  NL("\n")
  FOR("for")
  LPAREN("(")
  topLevelObject
    declaration
      propertyDeclaration
        VAL("val")
        variableDeclaration
          simpleIdentifier
            Identifier("i")
        IN("in")
        IntegerLiteral("1")
        RANGE("..")
        IntegerLiteral("4")
        RPAREN(")")
        LCURL("{")
    semis
      NL("\n")
      NL("\n")
  RCURL("}")
  NL("\n")
  NL("\n")
  FOR("for")
  LPAREN("(")
  topLevelObject
    declaration
      propertyDeclaration
        VAR("var")
        variableDeclaration
          simpleIdentifier
            Identifier("i")
        IN("in")
        IntegerLiteral("1")
        RANGE("..")
        IntegerLiteral("4")
        RPAREN(")")
        LCURL("{")
    semis
      NL("\n")
      NL("\n")
  RCURL("}")
  NL("\n")
  NL("\n")
  FOR("for")
  LPAREN("(")
  topLevelObject
    declaration
      propertyDeclaration
        VAL("val")
        multiVariableDeclaration
          LPAREN("(")
          variableDeclaration
            simpleIdentifier
              Identifier("i")
          COMMA(",")
          variableDeclaration
            simpleIdentifier
              Identifier("j")
          RPAREN(")")
        IN("in")
        Identifier("Coll")
        LPAREN("(")
        RPAREN(")")
        RPAREN(")")
        LCURL("{")
    semis
      NL("\n")
      NL("\n")
  RCURL("}")
  NL("\n")
  NL("\n")
  FOR("for")
  LPAREN("(")
  topLevelObject
    declaration
      propertyDeclaration
        VAR("var")
        multiVariableDeclaration
          LPAREN("(")
          variableDeclaration
            simpleIdentifier
              Identifier("i")
          COMMA(",")
          variableDeclaration
            simpleIdentifier
              Identifier("j")
          RPAREN(")")
        IN("in")
        Identifier("Coll")
        LPAREN("(")
        RPAREN(")")
        RPAREN(")")
        LCURL("{")
    semis
      NL("\n")
      NL("\n")
  RCURL("}")
  NL("\n")
  RCURL("}")
  NL("\n")
  EOF("<EOF>")
