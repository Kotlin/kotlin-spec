File: kt3162tryAsInitializer.kt - a3aed1ce78cc6f0c7d397e1e228aacf6
  NL("\n")
  NL("\n")
  NL("\n")
  packageHeader
  importList
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        simpleIdentifier
          Identifier("foo")
        functionValueParameters
          LPAREN("(")
          functionValueParameter
            parameter
              simpleIdentifier
                Identifier("x")
              COLON(":")
              type
                typeReference
                  userType
                    simpleUserType
                      simpleIdentifier
                        Identifier("String")
          RPAREN(")")
        COLON(":")
        type
          typeReference
            userType
              simpleUserType
                simpleIdentifier
                  Identifier("String")
        functionBody
          block
            LCURL("{")
            NL("\n")
            statements
              statement
                declaration
                  propertyDeclaration
                    VAL("val")
                    variableDeclaration
                      simpleIdentifier
                        Identifier("a")
                    ASSIGNMENT("=")
                    expression
                      disjunction
                        conjunction
                          equality
                            comparison
                              genericCallLikeComparison
                                infixOperation
                                  elvisExpression
                                    infixFunctionCall
                                      rangeExpression
                                        additiveExpression
                                          multiplicativeExpression
                                            asExpression
                                              prefixUnaryExpression
                                                postfixUnaryExpression
                                                  primaryExpression
                                                    tryExpression
                                                      TRY("try")
                                                      block
                                                        LCURL("{")
                                                        NL("\n")
                                                        statements
                                                          statement
                                                            expression
                                                              disjunction
                                                                conjunction
                                                                  equality
                                                                    comparison
                                                                      genericCallLikeComparison
                                                                        infixOperation
                                                                          elvisExpression
                                                                            infixFunctionCall
                                                                              rangeExpression
                                                                                additiveExpression
                                                                                  multiplicativeExpression
                                                                                    asExpression
                                                                                      prefixUnaryExpression
                                                                                        postfixUnaryExpression
                                                                                          primaryExpression
                                                                                            simpleIdentifier
                                                                                              Identifier("x")
                                                          semis
                                                            NL("\n")
                                                        RCURL("}")
                                                      finallyBlock
                                                        FINALLY("finally")
                                                        block
                                                          LCURL("{")
                                                          NL("\n")
                                                          statements
                                                            statement
                                                              expression
                                                                disjunction
                                                                  conjunction
                                                                    equality
                                                                      comparison
                                                                        genericCallLikeComparison
                                                                          infixOperation
                                                                            elvisExpression
                                                                              infixFunctionCall
                                                                                rangeExpression
                                                                                  additiveExpression
                                                                                    multiplicativeExpression
                                                                                      asExpression
                                                                                        prefixUnaryExpression
                                                                                          postfixUnaryExpression
                                                                                            primaryExpression
                                                                                              tryExpression
                                                                                                TRY("try")
                                                                                                block
                                                                                                  LCURL("{")
                                                                                                  NL("\n")
                                                                                                  statements
                                                                                                  RCURL("}")
                                                                                                catchBlock
                                                                                                  CATCH("catch")
                                                                                                  LPAREN("(")
                                                                                                  simpleIdentifier
                                                                                                    Identifier("e")
                                                                                                  COLON(":")
                                                                                                  type
                                                                                                    typeReference
                                                                                                      userType
                                                                                                        simpleUserType
                                                                                                          simpleIdentifier
                                                                                                            Identifier("Exception")
                                                                                                  RPAREN(")")
                                                                                                  block
                                                                                                    LCURL("{")
                                                                                                    NL("\n")
                                                                                                    statements
                                                                                                    RCURL("}")
                                                            semis
                                                              NL("\n")
                                                            statement
                                                              expression
                                                                disjunction
                                                                  conjunction
                                                                    equality
                                                                      comparison
                                                                        genericCallLikeComparison
                                                                          infixOperation
                                                                            elvisExpression
                                                                              infixFunctionCall
                                                                                rangeExpression
                                                                                  additiveExpression
                                                                                    multiplicativeExpression
                                                                                      asExpression
                                                                                        prefixUnaryExpression
                                                                                          postfixUnaryExpression
                                                                                            primaryExpression
                                                                                              jumpExpression
                                                                                                RETURN("return")
                                                                                                expression
                                                                                                  disjunction
                                                                                                    conjunction
                                                                                                      equality
                                                                                                        comparison
                                                                                                          genericCallLikeComparison
                                                                                                            infixOperation
                                                                                                              elvisExpression
                                                                                                                infixFunctionCall
                                                                                                                  rangeExpression
                                                                                                                    additiveExpression
                                                                                                                      multiplicativeExpression
                                                                                                                        asExpression
                                                                                                                          prefixUnaryExpression
                                                                                                                            postfixUnaryExpression
                                                                                                                              primaryExpression
                                                                                                                                simpleIdentifier
                                                                                                                                  Identifier("x")
                                                            semis
                                                              NL("\n")
                                                          RCURL("}")
                    NL("\n")
            RCURL("}")
  EOF("<EOF>")
