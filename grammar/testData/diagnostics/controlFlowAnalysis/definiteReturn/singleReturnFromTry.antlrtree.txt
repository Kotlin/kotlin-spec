File: singleReturnFromTry.kt - e07488d0d917993cea16270e594e6de5
  NL("\n")
  NL("\n")
  NL("\n")
  NL("\n")
  NL("\n")
  packageHeader
  importList
  topLevelObject
    declaration
      functionDeclaration
        modifiers
          modifier
            functionModifier
              INLINE("inline")
        FUN("fun")
        typeParameters
          LANGLE("<")
          typeParameter
            simpleIdentifier
              Identifier("R")
          RANGLE(">")
        simpleIdentifier
          Identifier("myRun")
        functionValueParameters
          LPAREN("(")
          functionValueParameter
            parameter
              simpleIdentifier
                Identifier("block")
              COLON(":")
              type
                functionType
                  functionTypeParameters
                    LPAREN("(")
                    RPAREN(")")
                  ARROW("->")
                  type
                    typeReference
                      userType
                        simpleUserType
                          simpleIdentifier
                            Identifier("R")
          RPAREN(")")
        COLON(":")
        type
          typeReference
            userType
              simpleUserType
                simpleIdentifier
                  Identifier("R")
        functionBody
          block
            LCURL("{")
            NL("\n")
            statements
              statement
                expression
                  disjunction
                    conjunction
                      equality
                        comparison
                          genericCallLikeComparison
                            infixOperation
                              elvisExpression
                                infixFunctionCall
                                  rangeExpression
                                    additiveExpression
                                      multiplicativeExpression
                                        asExpression
                                          prefixUnaryExpression
                                            postfixUnaryExpression
                                              primaryExpression
                                                jumpExpression
                                                  RETURN("return")
                                                  expression
                                                    disjunction
                                                      conjunction
                                                        equality
                                                          comparison
                                                            genericCallLikeComparison
                                                              infixOperation
                                                                elvisExpression
                                                                  infixFunctionCall
                                                                    rangeExpression
                                                                      additiveExpression
                                                                        multiplicativeExpression
                                                                          asExpression
                                                                            prefixUnaryExpression
                                                                              postfixUnaryExpression
                                                                                primaryExpression
                                                                                  simpleIdentifier
                                                                                    Identifier("block")
                                                                                postfixUnarySuffix
                                                                                  callSuffix
                                                                                    valueArguments
                                                                                      LPAREN("(")
                                                                                      RPAREN(")")
              semis
                NL("\n")
            RCURL("}")
    semis
      NL("\n")
      NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        simpleIdentifier
          Identifier("test_1")
        functionValueParameters
          LPAREN("(")
          RPAREN(")")
        COLON(":")
        type
          typeReference
            userType
              simpleUserType
                simpleIdentifier
                  Identifier("Int")
        functionBody
          block
            LCURL("{")
            NL("\n")
            statements
              statement
                expression
                  disjunction
                    conjunction
                      equality
                        comparison
                          genericCallLikeComparison
                            infixOperation
                              elvisExpression
                                infixFunctionCall
                                  rangeExpression
                                    additiveExpression
                                      multiplicativeExpression
                                        asExpression
                                          prefixUnaryExpression
                                            postfixUnaryExpression
                                              primaryExpression
                                                simpleIdentifier
                                                  Identifier("myRun")
                                              postfixUnarySuffix
                                                callSuffix
                                                  annotatedLambda
                                                    lambdaLiteral
                                                      LCURL("{")
                                                      NL("\n")
                                                      statements
                                                        statement
                                                          expression
                                                            disjunction
                                                              conjunction
                                                                equality
                                                                  comparison
                                                                    genericCallLikeComparison
                                                                      infixOperation
                                                                        elvisExpression
                                                                          infixFunctionCall
                                                                            rangeExpression
                                                                              additiveExpression
                                                                                multiplicativeExpression
                                                                                  asExpression
                                                                                    prefixUnaryExpression
                                                                                      postfixUnaryExpression
                                                                                        primaryExpression
                                                                                          jumpExpression
                                                                                            RETURN("return")
                                                                                            expression
                                                                                              disjunction
                                                                                                conjunction
                                                                                                  equality
                                                                                                    comparison
                                                                                                      genericCallLikeComparison
                                                                                                        infixOperation
                                                                                                          elvisExpression
                                                                                                            infixFunctionCall
                                                                                                              rangeExpression
                                                                                                                additiveExpression
                                                                                                                  multiplicativeExpression
                                                                                                                    asExpression
                                                                                                                      prefixUnaryExpression
                                                                                                                        postfixUnaryExpression
                                                                                                                          primaryExpression
                                                                                                                            literalConstant
                                                                                                                              IntegerLiteral("2")
                                                        semis
                                                          NL("\n")
                                                      RCURL("}")
              semis
                NL("\n")
            RCURL("}")
    semis
      NL("\n")
      NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        simpleIdentifier
          Identifier("test_2")
        functionValueParameters
          LPAREN("(")
          RPAREN(")")
        COLON(":")
        type
          typeReference
            userType
              simpleUserType
                simpleIdentifier
                  Identifier("Int")
        functionBody
          block
            LCURL("{")
            NL("\n")
            statements
              statement
                expression
                  disjunction
                    conjunction
                      equality
                        comparison
                          genericCallLikeComparison
                            infixOperation
                              elvisExpression
                                infixFunctionCall
                                  rangeExpression
                                    additiveExpression
                                      multiplicativeExpression
                                        asExpression
                                          prefixUnaryExpression
                                            postfixUnaryExpression
                                              primaryExpression
                                                tryExpression
                                                  TRY("try")
                                                  block
                                                    LCURL("{")
                                                    NL("\n")
                                                    statements
                                                      statement
                                                        expression
                                                          disjunction
                                                            conjunction
                                                              equality
                                                                comparison
                                                                  genericCallLikeComparison
                                                                    infixOperation
                                                                      elvisExpression
                                                                        infixFunctionCall
                                                                          rangeExpression
                                                                            additiveExpression
                                                                              multiplicativeExpression
                                                                                asExpression
                                                                                  prefixUnaryExpression
                                                                                    postfixUnaryExpression
                                                                                      primaryExpression
                                                                                        jumpExpression
                                                                                          RETURN("return")
                                                                                          expression
                                                                                            disjunction
                                                                                              conjunction
                                                                                                equality
                                                                                                  comparison
                                                                                                    genericCallLikeComparison
                                                                                                      infixOperation
                                                                                                        elvisExpression
                                                                                                          infixFunctionCall
                                                                                                            rangeExpression
                                                                                                              additiveExpression
                                                                                                                multiplicativeExpression
                                                                                                                  asExpression
                                                                                                                    prefixUnaryExpression
                                                                                                                      postfixUnaryExpression
                                                                                                                        primaryExpression
                                                                                                                          literalConstant
                                                                                                                            IntegerLiteral("2")
                                                      semis
                                                        NL("\n")
                                                    RCURL("}")
                                                  finallyBlock
                                                    FINALLY("finally")
                                                    block
                                                      LCURL("{")
                                                      statements
                                                      RCURL("}")
              semis
                NL("\n")
            RCURL("}")
    semis
      NL("\n")
      NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        simpleIdentifier
          Identifier("test_3")
        functionValueParameters
          LPAREN("(")
          RPAREN(")")
        COLON(":")
        type
          typeReference
            userType
              simpleUserType
                simpleIdentifier
                  Identifier("Int")
        functionBody
          block
            LCURL("{")
            NL("\n")
            statements
              statement
                expression
                  disjunction
                    conjunction
                      equality
                        comparison
                          genericCallLikeComparison
                            infixOperation
                              elvisExpression
                                infixFunctionCall
                                  rangeExpression
                                    additiveExpression
                                      multiplicativeExpression
                                        asExpression
                                          prefixUnaryExpression
                                            postfixUnaryExpression
                                              primaryExpression
                                                tryExpression
                                                  TRY("try")
                                                  block
                                                    LCURL("{")
                                                    NL("\n")
                                                    statements
                                                      statement
                                                        expression
                                                          disjunction
                                                            conjunction
                                                              equality
                                                                comparison
                                                                  genericCallLikeComparison
                                                                    infixOperation
                                                                      elvisExpression
                                                                        infixFunctionCall
                                                                          rangeExpression
                                                                            additiveExpression
                                                                              multiplicativeExpression
                                                                                asExpression
                                                                                  prefixUnaryExpression
                                                                                    postfixUnaryExpression
                                                                                      primaryExpression
                                                                                        simpleIdentifier
                                                                                          Identifier("myRun")
                                                                                      postfixUnarySuffix
                                                                                        callSuffix
                                                                                          annotatedLambda
                                                                                            lambdaLiteral
                                                                                              LCURL("{")
                                                                                              NL("\n")
                                                                                              statements
                                                                                                statement
                                                                                                  expression
                                                                                                    disjunction
                                                                                                      conjunction
                                                                                                        equality
                                                                                                          comparison
                                                                                                            genericCallLikeComparison
                                                                                                              infixOperation
                                                                                                                elvisExpression
                                                                                                                  infixFunctionCall
                                                                                                                    rangeExpression
                                                                                                                      additiveExpression
                                                                                                                        multiplicativeExpression
                                                                                                                          asExpression
                                                                                                                            prefixUnaryExpression
                                                                                                                              postfixUnaryExpression
                                                                                                                                primaryExpression
                                                                                                                                  jumpExpression
                                                                                                                                    RETURN("return")
                                                                                                                                    expression
                                                                                                                                      disjunction
                                                                                                                                        conjunction
                                                                                                                                          equality
                                                                                                                                            comparison
                                                                                                                                              genericCallLikeComparison
                                                                                                                                                infixOperation
                                                                                                                                                  elvisExpression
                                                                                                                                                    infixFunctionCall
                                                                                                                                                      rangeExpression
                                                                                                                                                        additiveExpression
                                                                                                                                                          multiplicativeExpression
                                                                                                                                                            asExpression
                                                                                                                                                              prefixUnaryExpression
                                                                                                                                                                postfixUnaryExpression
                                                                                                                                                                  primaryExpression
                                                                                                                                                                    literalConstant
                                                                                                                                                                      IntegerLiteral("2")
                                                                                                semis
                                                                                                  NL("\n")
                                                                                              RCURL("}")
                                                      semis
                                                        NL("\n")
                                                    RCURL("}")
                                                  finallyBlock
                                                    FINALLY("finally")
                                                    block
                                                      LCURL("{")
                                                      statements
                                                      RCURL("}")
              semis
                NL("\n")
            RCURL("}")
    semis
      NL("\n")
      NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        simpleIdentifier
          Identifier("test_4")
        functionValueParameters
          LPAREN("(")
          RPAREN(")")
        COLON(":")
        type
          typeReference
            userType
              simpleUserType
                simpleIdentifier
                  Identifier("Int")
        functionBody
          block
            LCURL("{")
            NL("\n")
            statements
              statement
                expression
                  disjunction
                    conjunction
                      equality
                        comparison
                          genericCallLikeComparison
                            infixOperation
                              elvisExpression
                                infixFunctionCall
                                  rangeExpression
                                    additiveExpression
                                      multiplicativeExpression
                                        asExpression
                                          prefixUnaryExpression
                                            postfixUnaryExpression
                                              primaryExpression
                                                simpleIdentifier
                                                  Identifier("myRun")
                                              postfixUnarySuffix
                                                callSuffix
                                                  annotatedLambda
                                                    lambdaLiteral
                                                      LCURL("{")
                                                      NL("\n")
                                                      statements
                                                        statement
                                                          expression
                                                            disjunction
                                                              conjunction
                                                                equality
                                                                  comparison
                                                                    genericCallLikeComparison
                                                                      infixOperation
                                                                        elvisExpression
                                                                          infixFunctionCall
                                                                            rangeExpression
                                                                              additiveExpression
                                                                                multiplicativeExpression
                                                                                  asExpression
                                                                                    prefixUnaryExpression
                                                                                      postfixUnaryExpression
                                                                                        primaryExpression
                                                                                          tryExpression
                                                                                            TRY("try")
                                                                                            block
                                                                                              LCURL("{")
                                                                                              NL("\n")
                                                                                              statements
                                                                                                statement
                                                                                                  expression
                                                                                                    disjunction
                                                                                                      conjunction
                                                                                                        equality
                                                                                                          comparison
                                                                                                            genericCallLikeComparison
                                                                                                              infixOperation
                                                                                                                elvisExpression
                                                                                                                  infixFunctionCall
                                                                                                                    rangeExpression
                                                                                                                      additiveExpression
                                                                                                                        multiplicativeExpression
                                                                                                                          asExpression
                                                                                                                            prefixUnaryExpression
                                                                                                                              postfixUnaryExpression
                                                                                                                                primaryExpression
                                                                                                                                  jumpExpression
                                                                                                                                    RETURN("return")
                                                                                                                                    expression
                                                                                                                                      disjunction
                                                                                                                                        conjunction
                                                                                                                                          equality
                                                                                                                                            comparison
                                                                                                                                              genericCallLikeComparison
                                                                                                                                                infixOperation
                                                                                                                                                  elvisExpression
                                                                                                                                                    infixFunctionCall
                                                                                                                                                      rangeExpression
                                                                                                                                                        additiveExpression
                                                                                                                                                          multiplicativeExpression
                                                                                                                                                            asExpression
                                                                                                                                                              prefixUnaryExpression
                                                                                                                                                                postfixUnaryExpression
                                                                                                                                                                  primaryExpression
                                                                                                                                                                    literalConstant
                                                                                                                                                                      IntegerLiteral("2")
                                                                                                semis
                                                                                                  NL("\n")
                                                                                              RCURL("}")
                                                                                            finallyBlock
                                                                                              FINALLY("finally")
                                                                                              block
                                                                                                LCURL("{")
                                                                                                statements
                                                                                                RCURL("}")
                                                        semis
                                                          NL("\n")
                                                      RCURL("}")
              semis
                NL("\n")
            RCURL("}")
    semis
      NL("\n")
      NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        simpleIdentifier
          Identifier("test_5")
        functionValueParameters
          LPAREN("(")
          RPAREN(")")
        COLON(":")
        type
          typeReference
            userType
              simpleUserType
                simpleIdentifier
                  Identifier("Int")
        functionBody
          block
            LCURL("{")
            NL("\n")
            statements
              statement
                expression
                  disjunction
                    conjunction
                      equality
                        comparison
                          genericCallLikeComparison
                            infixOperation
                              elvisExpression
                                infixFunctionCall
                                  rangeExpression
                                    additiveExpression
                                      multiplicativeExpression
                                        asExpression
                                          prefixUnaryExpression
                                            postfixUnaryExpression
                                              primaryExpression
                                                tryExpression
                                                  TRY("try")
                                                  block
                                                    LCURL("{")
                                                    NL("\n")
                                                    statements
                                                      statement
                                                        expression
                                                          disjunction
                                                            conjunction
                                                              equality
                                                                comparison
                                                                  genericCallLikeComparison
                                                                    infixOperation
                                                                      elvisExpression
                                                                        infixFunctionCall
                                                                          rangeExpression
                                                                            additiveExpression
                                                                              multiplicativeExpression
                                                                                asExpression
                                                                                  prefixUnaryExpression
                                                                                    postfixUnaryExpression
                                                                                      primaryExpression
                                                                                        simpleIdentifier
                                                                                          Identifier("myRun")
                                                                                      postfixUnarySuffix
                                                                                        callSuffix
                                                                                          annotatedLambda
                                                                                            lambdaLiteral
                                                                                              LCURL("{")
                                                                                              NL("\n")
                                                                                              statements
                                                                                                statement
                                                                                                  expression
                                                                                                    disjunction
                                                                                                      conjunction
                                                                                                        equality
                                                                                                          comparison
                                                                                                            genericCallLikeComparison
                                                                                                              infixOperation
                                                                                                                elvisExpression
                                                                                                                  infixFunctionCall
                                                                                                                    rangeExpression
                                                                                                                      additiveExpression
                                                                                                                        multiplicativeExpression
                                                                                                                          asExpression
                                                                                                                            prefixUnaryExpression
                                                                                                                              postfixUnaryExpression
                                                                                                                                primaryExpression
                                                                                                                                  jumpExpression
                                                                                                                                    RETURN("return")
                                                                                                                                    expression
                                                                                                                                      disjunction
                                                                                                                                        conjunction
                                                                                                                                          equality
                                                                                                                                            comparison
                                                                                                                                              genericCallLikeComparison
                                                                                                                                                infixOperation
                                                                                                                                                  elvisExpression
                                                                                                                                                    infixFunctionCall
                                                                                                                                                      rangeExpression
                                                                                                                                                        additiveExpression
                                                                                                                                                          multiplicativeExpression
                                                                                                                                                            asExpression
                                                                                                                                                              prefixUnaryExpression
                                                                                                                                                                postfixUnaryExpression
                                                                                                                                                                  primaryExpression
                                                                                                                                                                    literalConstant
                                                                                                                                                                      IntegerLiteral("2")
                                                                                                semis
                                                                                                  NL("\n")
                                                                                              RCURL("}")
                                                      semis
                                                        NL("\n")
                                                    RCURL("}")
                                                  catchBlock
                                                    CATCH("catch")
                                                    LPAREN("(")
                                                    simpleIdentifier
                                                      Identifier("e")
                                                    COLON(":")
                                                    type
                                                      typeReference
                                                        userType
                                                          simpleUserType
                                                            simpleIdentifier
                                                              Identifier("Exception")
                                                    RPAREN(")")
                                                    block
                                                      LCURL("{")
                                                      NL("\n")
                                                      statements
                                                        statement
                                                          expression
                                                            disjunction
                                                              conjunction
                                                                equality
                                                                  comparison
                                                                    genericCallLikeComparison
                                                                      infixOperation
                                                                        elvisExpression
                                                                          infixFunctionCall
                                                                            rangeExpression
                                                                              additiveExpression
                                                                                multiplicativeExpression
                                                                                  asExpression
                                                                                    prefixUnaryExpression
                                                                                      postfixUnaryExpression
                                                                                        primaryExpression
                                                                                          stringLiteral
                                                                                            lineStringLiteral
                                                                                              QUOTE_OPEN(""")
                                                                                              lineStringContent
                                                                                                LineStrText("hello")
                                                                                              QUOTE_CLOSE(""")
                                                        semis
                                                          NL("\n")
                                                      RCURL("}")
                                                  finallyBlock
                                                    FINALLY("finally")
                                                    block
                                                      LCURL("{")
                                                      statements
                                                      RCURL("}")
              semis
                NL("\n")
            RCURL("}")
    semis
      NL("\n")
  EOF("<EOF>")
