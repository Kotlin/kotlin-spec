File: substitutionIntoAnonymousClass.kt - 2f950343dc806069b71531211dcf4c96
  packageHeader
  importList
  topLevelObject
    declaration
      classDeclaration
        CLASS("class")
        simpleIdentifier
          Identifier("Test")
        classBody
          LCURL("{")
          NL("\n")
          classMemberDeclarations
            classMemberDeclaration
              declaration
                functionDeclaration
                  modifiers
                    modifier
                      visibilityModifier
                        PRIVATE("private")
                  FUN("fun")
                  typeParameters
                    LANGLE("<")
                    typeParameter
                      simpleIdentifier
                        Identifier("T")
                      COLON(":")
                      type
                        typeReference
                          userType
                            simpleUserType
                              simpleIdentifier
                                Identifier("Any")
                    RANGLE(">")
                  receiverType
                    typeReference
                      userType
                        simpleUserType
                          simpleIdentifier
                            Identifier("T")
                  DOT(".")
                  simpleIdentifier
                    Identifier("self")
                  functionValueParameters
                    LPAREN("(")
                    RPAREN(")")
                  functionBody
                    ASSIGNMENT("=")
                    expression
                      disjunction
                        conjunction
                          equality
                            comparison
                              genericCallLikeComparison
                                infixOperation
                                  elvisExpression
                                    infixFunctionCall
                                      rangeExpression
                                        additiveExpression
                                          multiplicativeExpression
                                            asExpression
                                              prefixUnaryExpression
                                                postfixUnaryExpression
                                                  primaryExpression
                                                    objectLiteral
                                                      OBJECT("object")
                                                      classBody
                                                        LCURL("{")
                                                        NL("\n")
                                                        classMemberDeclarations
                                                          classMemberDeclaration
                                                            declaration
                                                              functionDeclaration
                                                                FUN("fun")
                                                                simpleIdentifier
                                                                  Identifier("bar")
                                                                functionValueParameters
                                                                  LPAREN("(")
                                                                  RPAREN(")")
                                                                COLON(":")
                                                                type
                                                                  typeReference
                                                                    userType
                                                                      simpleUserType
                                                                        simpleIdentifier
                                                                          Identifier("T")
                                                                functionBody
                                                                  block
                                                                    LCURL("{")
                                                                    NL("\n")
                                                                    statements
                                                                      statement
                                                                        expression
                                                                          disjunction
                                                                            conjunction
                                                                              equality
                                                                                comparison
                                                                                  genericCallLikeComparison
                                                                                    infixOperation
                                                                                      elvisExpression
                                                                                        infixFunctionCall
                                                                                          rangeExpression
                                                                                            additiveExpression
                                                                                              multiplicativeExpression
                                                                                                asExpression
                                                                                                  prefixUnaryExpression
                                                                                                    postfixUnaryExpression
                                                                                                      primaryExpression
                                                                                                        jumpExpression
                                                                                                          RETURN("return")
                                                                                                          expression
                                                                                                            disjunction
                                                                                                              conjunction
                                                                                                                equality
                                                                                                                  comparison
                                                                                                                    genericCallLikeComparison
                                                                                                                      infixOperation
                                                                                                                        elvisExpression
                                                                                                                          infixFunctionCall
                                                                                                                            rangeExpression
                                                                                                                              additiveExpression
                                                                                                                                multiplicativeExpression
                                                                                                                                  asExpression
                                                                                                                                    prefixUnaryExpression
                                                                                                                                      postfixUnaryExpression
                                                                                                                                        primaryExpression
                                                                                                                                          thisExpression
                                                                                                                                            THIS_AT("this@self")
                                                                      semis
                                                                        NL("\n")
                                                                    RCURL("}")
                                                          semis
                                                            NL("\n")
                                                        RCURL("}")
            semis
              NL("\n")
            classMemberDeclaration
              declaration
                functionDeclaration
                  FUN("fun")
                  simpleIdentifier
                    Identifier("test")
                  functionValueParameters
                    LPAREN("(")
                    RPAREN(")")
                  functionBody
                    block
                      LCURL("{")
                      NL("\n")
                      statements
                        statement
                          expression
                            disjunction
                              conjunction
                                equality
                                  comparison
                                    genericCallLikeComparison
                                      infixOperation
                                        elvisExpression
                                          infixFunctionCall
                                            rangeExpression
                                              additiveExpression
                                                multiplicativeExpression
                                                  asExpression
                                                    prefixUnaryExpression
                                                      postfixUnaryExpression
                                                        primaryExpression
                                                          literalConstant
                                                            IntegerLiteral("1")
                                                        postfixUnarySuffix
                                                          navigationSuffix
                                                            memberAccessOperator
                                                              DOT(".")
                                                            simpleIdentifier
                                                              Identifier("self")
                                                        postfixUnarySuffix
                                                          callSuffix
                                                            valueArguments
                                                              LPAREN("(")
                                                              RPAREN(")")
                                                        postfixUnarySuffix
                                                          navigationSuffix
                                                            memberAccessOperator
                                                              DOT(".")
                                                            simpleIdentifier
                                                              Identifier("bar")
                                                        postfixUnarySuffix
                                                          callSuffix
                                                            valueArguments
                                                              LPAREN("(")
                                                              RPAREN(")")
                                                additiveOperator
                                                  ADD("+")
                                                multiplicativeExpression
                                                  asExpression
                                                    prefixUnaryExpression
                                                      postfixUnaryExpression
                                                        primaryExpression
                                                          literalConstant
                                                            IntegerLiteral("1")
                        semis
                          NL("\n")
                      RCURL("}")
            semis
              NL("\n")
          RCURL("}")
    semis
      NL("\n")
      NL("\n")
  topLevelObject
    declaration
      classDeclaration
        CLASS("class")
        simpleIdentifier
          Identifier("Foo")
        typeParameters
          LANGLE("<")
          typeParameter
            simpleIdentifier
              Identifier("R")
          RANGLE(">")
        classBody
          LCURL("{")
          NL("\n")
          classMemberDeclarations
            classMemberDeclaration
              declaration
                functionDeclaration
                  modifiers
                    modifier
                      visibilityModifier
                        PRIVATE("private")
                  FUN("fun")
                  typeParameters
                    LANGLE("<")
                    typeParameter
                      simpleIdentifier
                        Identifier("T")
                    RANGLE(">")
                  simpleIdentifier
                    Identifier("bar")
                  functionValueParameters
                    LPAREN("(")
                    RPAREN(")")
                  functionBody
                    ASSIGNMENT("=")
                    expression
                      disjunction
                        conjunction
                          equality
                            comparison
                              genericCallLikeComparison
                                infixOperation
                                  elvisExpression
                                    infixFunctionCall
                                      rangeExpression
                                        additiveExpression
                                          multiplicativeExpression
                                            asExpression
                                              prefixUnaryExpression
                                                postfixUnaryExpression
                                                  primaryExpression
                                                    objectLiteral
                                                      OBJECT("object")
                                                      classBody
                                                        LCURL("{")
                                                        NL("\n")
                                                        classMemberDeclarations
                                                          classMemberDeclaration
                                                            declaration
                                                              functionDeclaration
                                                                FUN("fun")
                                                                simpleIdentifier
                                                                  Identifier("baz")
                                                                functionValueParameters
                                                                  LPAREN("(")
                                                                  RPAREN(")")
                                                                COLON(":")
                                                                type
                                                                  typeReference
                                                                    userType
                                                                      simpleUserType
                                                                        simpleIdentifier
                                                                          Identifier("Foo")
                                                                        typeArguments
                                                                          LANGLE("<")
                                                                          typeProjection
                                                                            type
                                                                              typeReference
                                                                                userType
                                                                                  simpleUserType
                                                                                    simpleIdentifier
                                                                                      Identifier("R")
                                                                          RANGLE(">")
                                                                functionBody
                                                                  block
                                                                    LCURL("{")
                                                                    NL("\n")
                                                                    statements
                                                                      statement
                                                                        expression
                                                                          disjunction
                                                                            conjunction
                                                                              equality
                                                                                comparison
                                                                                  genericCallLikeComparison
                                                                                    infixOperation
                                                                                      elvisExpression
                                                                                        infixFunctionCall
                                                                                          rangeExpression
                                                                                            additiveExpression
                                                                                              multiplicativeExpression
                                                                                                asExpression
                                                                                                  prefixUnaryExpression
                                                                                                    postfixUnaryExpression
                                                                                                      primaryExpression
                                                                                                        jumpExpression
                                                                                                          RETURN("return")
                                                                                                          expression
                                                                                                            disjunction
                                                                                                              conjunction
                                                                                                                equality
                                                                                                                  comparison
                                                                                                                    genericCallLikeComparison
                                                                                                                      infixOperation
                                                                                                                        elvisExpression
                                                                                                                          infixFunctionCall
                                                                                                                            rangeExpression
                                                                                                                              additiveExpression
                                                                                                                                multiplicativeExpression
                                                                                                                                  asExpression
                                                                                                                                    prefixUnaryExpression
                                                                                                                                      postfixUnaryExpression
                                                                                                                                        primaryExpression
                                                                                                                                          thisExpression
                                                                                                                                            THIS_AT("this@Foo")
                                                                      semis
                                                                        NL("\n")
                                                                    RCURL("}")
                                                          semis
                                                            NL("\n")
                                                        RCURL("}")
            semis
              NL("\n")
              NL("\n")
            classMemberDeclaration
              declaration
                functionDeclaration
                  FUN("fun")
                  simpleIdentifier
                    Identifier("getR")
                  functionValueParameters
                    LPAREN("(")
                    functionValueParameter
                      parameter
                        simpleIdentifier
                          Identifier("r")
                        COLON(":")
                        type
                          typeReference
                            userType
                              simpleUserType
                                simpleIdentifier
                                  Identifier("R")
                    RPAREN(")")
                  functionBody
                    ASSIGNMENT("=")
                    expression
                      disjunction
                        conjunction
                          equality
                            comparison
                              genericCallLikeComparison
                                infixOperation
                                  elvisExpression
                                    infixFunctionCall
                                      rangeExpression
                                        additiveExpression
                                          multiplicativeExpression
                                            asExpression
                                              prefixUnaryExpression
                                                postfixUnaryExpression
                                                  primaryExpression
                                                    simpleIdentifier
                                                      Identifier("r")
            semis
              NL("\n")
              NL("\n")
            classMemberDeclaration
              declaration
                functionDeclaration
                  FUN("fun")
                  simpleIdentifier
                    Identifier("test")
                  functionValueParameters
                    LPAREN("(")
                    RPAREN(")")
                  functionBody
                    block
                      LCURL("{")
                      NL("\n")
                      statements
                        statement
                          expression
                            disjunction
                              conjunction
                                equality
                                  comparison
                                    genericCallLikeComparison
                                      infixOperation
                                        elvisExpression
                                          infixFunctionCall
                                            rangeExpression
                                              additiveExpression
                                                multiplicativeExpression
                                                  asExpression
                                                    prefixUnaryExpression
                                                      postfixUnaryExpression
                                                        primaryExpression
                                                          simpleIdentifier
                                                            Identifier("Foo")
                                                        postfixUnarySuffix
                                                          typeArguments
                                                            LANGLE("<")
                                                            typeProjection
                                                              type
                                                                typeReference
                                                                  userType
                                                                    simpleUserType
                                                                      simpleIdentifier
                                                                        Identifier("Int")
                                                            RANGLE(">")
                                                        postfixUnarySuffix
                                                          callSuffix
                                                            valueArguments
                                                              LPAREN("(")
                                                              RPAREN(")")
                                                        postfixUnarySuffix
                                                          navigationSuffix
                                                            memberAccessOperator
                                                              DOT(".")
                                                            simpleIdentifier
                                                              Identifier("bar")
                                                        postfixUnarySuffix
                                                          typeArguments
                                                            LANGLE("<")
                                                            typeProjection
                                                              type
                                                                typeReference
                                                                  userType
                                                                    simpleUserType
                                                                      simpleIdentifier
                                                                        Identifier("String")
                                                            RANGLE(">")
                                                        postfixUnarySuffix
                                                          callSuffix
                                                            valueArguments
                                                              LPAREN("(")
                                                              RPAREN(")")
                                                        postfixUnarySuffix
                                                          navigationSuffix
                                                            memberAccessOperator
                                                              DOT(".")
                                                            simpleIdentifier
                                                              Identifier("baz")
                                                        postfixUnarySuffix
                                                          callSuffix
                                                            valueArguments
                                                              LPAREN("(")
                                                              RPAREN(")")
                                                        postfixUnarySuffix
                                                          navigationSuffix
                                                            memberAccessOperator
                                                              DOT(".")
                                                            simpleIdentifier
                                                              Identifier("getR")
                                                        postfixUnarySuffix
                                                          callSuffix
                                                            valueArguments
                                                              LPAREN("(")
                                                              valueArgument
                                                                expression
                                                                  disjunction
                                                                    conjunction
                                                                      equality
                                                                        comparison
                                                                          genericCallLikeComparison
                                                                            infixOperation
                                                                              elvisExpression
                                                                                infixFunctionCall
                                                                                  rangeExpression
                                                                                    additiveExpression
                                                                                      multiplicativeExpression
                                                                                        asExpression
                                                                                          prefixUnaryExpression
                                                                                            postfixUnaryExpression
                                                                                              primaryExpression
                                                                                                literalConstant
                                                                                                  IntegerLiteral("1")
                                                              RPAREN(")")
                        semis
                          NL("\n")
                        statement
                          expression
                            disjunction
                              conjunction
                                equality
                                  comparison
                                    genericCallLikeComparison
                                      infixOperation
                                        elvisExpression
                                          infixFunctionCall
                                            rangeExpression
                                              additiveExpression
                                                multiplicativeExpression
                                                  asExpression
                                                    prefixUnaryExpression
                                                      postfixUnaryExpression
                                                        primaryExpression
                                                          simpleIdentifier
                                                            Identifier("Foo")
                                                        postfixUnarySuffix
                                                          typeArguments
                                                            LANGLE("<")
                                                            typeProjection
                                                              type
                                                                typeReference
                                                                  userType
                                                                    simpleUserType
                                                                      simpleIdentifier
                                                                        Identifier("Int")
                                                            RANGLE(">")
                                                        postfixUnarySuffix
                                                          callSuffix
                                                            valueArguments
                                                              LPAREN("(")
                                                              RPAREN(")")
                                                        postfixUnarySuffix
                                                          navigationSuffix
                                                            memberAccessOperator
                                                              DOT(".")
                                                            simpleIdentifier
                                                              Identifier("bar")
                                                        postfixUnarySuffix
                                                          typeArguments
                                                            LANGLE("<")
                                                            typeProjection
                                                              type
                                                                typeReference
                                                                  userType
                                                                    simpleUserType
                                                                      simpleIdentifier
                                                                        Identifier("String")
                                                            RANGLE(">")
                                                        postfixUnarySuffix
                                                          callSuffix
                                                            valueArguments
                                                              LPAREN("(")
                                                              RPAREN(")")
                                                        postfixUnarySuffix
                                                          navigationSuffix
                                                            memberAccessOperator
                                                              DOT(".")
                                                            simpleIdentifier
                                                              Identifier("baz")
                                                        postfixUnarySuffix
                                                          callSuffix
                                                            valueArguments
                                                              LPAREN("(")
                                                              RPAREN(")")
                                                        postfixUnarySuffix
                                                          navigationSuffix
                                                            memberAccessOperator
                                                              DOT(".")
                                                            simpleIdentifier
                                                              Identifier("getR")
                                                        postfixUnarySuffix
                                                          callSuffix
                                                            valueArguments
                                                              LPAREN("(")
                                                              valueArgument
                                                                expression
                                                                  disjunction
                                                                    conjunction
                                                                      equality
                                                                        comparison
                                                                          genericCallLikeComparison
                                                                            infixOperation
                                                                              elvisExpression
                                                                                infixFunctionCall
                                                                                  rangeExpression
                                                                                    additiveExpression
                                                                                      multiplicativeExpression
                                                                                        asExpression
                                                                                          prefixUnaryExpression
                                                                                            postfixUnaryExpression
                                                                                              primaryExpression
                                                                                                stringLiteral
                                                                                                  lineStringLiteral
                                                                                                    QUOTE_OPEN(""")
                                                                                                    QUOTE_CLOSE(""")
                                                              RPAREN(")")
                        semis
                          NL("\n")
                      RCURL("}")
            semis
              NL("\n")
          RCURL("}")
  EOF("<EOF>")
