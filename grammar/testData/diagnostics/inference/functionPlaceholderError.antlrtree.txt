File: functionPlaceholderError.kt - bbd00514d33e9c4ad02836ad34d2d146
  NL("\n")
  NL("\n")
  packageHeader
    PACKAGE("package")
    identifier
      simpleIdentifier
        Identifier("a")
    semi
      NL("\n")
      NL("\n")
  importList
    importHeader
      IMPORT("import")
      identifier
        simpleIdentifier
          Identifier("checkSubtype")
      semi
        NL("\n")
        NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        typeParameters
          LANGLE("<")
          typeParameter
            simpleIdentifier
              Identifier("T")
          RANGLE(">")
        simpleIdentifier
          Identifier("emptyList")
        functionValueParameters
          LPAREN("(")
          RPAREN(")")
        COLON(":")
        type
          typeReference
            userType
              simpleUserType
                simpleIdentifier
                  Identifier("List")
                typeArguments
                  LANGLE("<")
                  typeProjection
                    type
                      typeReference
                        userType
                          simpleUserType
                            simpleIdentifier
                              Identifier("T")
                  RANGLE(">")
        functionBody
          ASSIGNMENT("=")
          expression
            disjunction
              conjunction
                equality
                  comparison
                    genericCallLikeComparison
                      infixOperation
                        elvisExpression
                          infixFunctionCall
                            rangeExpression
                              additiveExpression
                                multiplicativeExpression
                                  asExpression
                                    prefixUnaryExpression
                                      postfixUnaryExpression
                                        primaryExpression
                                          jumpExpression
                                            THROW("throw")
                                            expression
                                              disjunction
                                                conjunction
                                                  equality
                                                    comparison
                                                      genericCallLikeComparison
                                                        infixOperation
                                                          elvisExpression
                                                            infixFunctionCall
                                                              rangeExpression
                                                                additiveExpression
                                                                  multiplicativeExpression
                                                                    asExpression
                                                                      prefixUnaryExpression
                                                                        postfixUnaryExpression
                                                                          primaryExpression
                                                                            simpleIdentifier
                                                                              Identifier("Exception")
                                                                          postfixUnarySuffix
                                                                            callSuffix
                                                                              valueArguments
                                                                                LPAREN("(")
                                                                                RPAREN(")")
    semis
      NL("\n")
      NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        typeParameters
          LANGLE("<")
          typeParameter
            simpleIdentifier
              Identifier("T")
          RANGLE(">")
        simpleIdentifier
          Identifier("foo")
        functionValueParameters
          LPAREN("(")
          functionValueParameter
            parameter
              simpleIdentifier
                Identifier("f")
              COLON(":")
              type
                functionType
                  receiverType
                    typeReference
                      userType
                        simpleUserType
                          simpleIdentifier
                            Identifier("T")
                  DOT(".")
                  functionTypeParameters
                    LPAREN("(")
                    RPAREN(")")
                  ARROW("->")
                  type
                    typeReference
                      userType
                        simpleUserType
                          simpleIdentifier
                            Identifier("Unit")
          COMMA(",")
          functionValueParameter
            parameter
              simpleIdentifier
                Identifier("l")
              COLON(":")
              type
                typeReference
                  userType
                    simpleUserType
                      simpleIdentifier
                        Identifier("List")
                      typeArguments
                        LANGLE("<")
                        typeProjection
                          type
                            typeReference
                              userType
                                simpleUserType
                                  simpleIdentifier
                                    Identifier("T")
                        RANGLE(">")
          RPAREN(")")
        COLON(":")
        type
          typeReference
            userType
              simpleUserType
                simpleIdentifier
                  Identifier("T")
        functionBody
          ASSIGNMENT("=")
          expression
            disjunction
              conjunction
                equality
                  comparison
                    genericCallLikeComparison
                      infixOperation
                        elvisExpression
                          infixFunctionCall
                            rangeExpression
                              additiveExpression
                                multiplicativeExpression
                                  asExpression
                                    prefixUnaryExpression
                                      postfixUnaryExpression
                                        primaryExpression
                                          jumpExpression
                                            THROW("throw")
                                            expression
                                              disjunction
                                                conjunction
                                                  equality
                                                    comparison
                                                      genericCallLikeComparison
                                                        infixOperation
                                                          elvisExpression
                                                            infixFunctionCall
                                                              rangeExpression
                                                                additiveExpression
                                                                  multiplicativeExpression
                                                                    asExpression
                                                                      prefixUnaryExpression
                                                                        postfixUnaryExpression
                                                                          primaryExpression
                                                                            simpleIdentifier
                                                                              Identifier("Exception")
                                                                          postfixUnarySuffix
                                                                            callSuffix
                                                                              valueArguments
                                                                                LPAREN("(")
                                                                                valueArgument
                                                                                  expression
                                                                                    disjunction
                                                                                      conjunction
                                                                                        equality
                                                                                          comparison
                                                                                            genericCallLikeComparison
                                                                                              infixOperation
                                                                                                elvisExpression
                                                                                                  infixFunctionCall
                                                                                                    rangeExpression
                                                                                                      additiveExpression
                                                                                                        multiplicativeExpression
                                                                                                          asExpression
                                                                                                            prefixUnaryExpression
                                                                                                              postfixUnaryExpression
                                                                                                                primaryExpression
                                                                                                                  stringLiteral
                                                                                                                    lineStringLiteral
                                                                                                                      QUOTE_OPEN(""")
                                                                                                                      lineStringContent
                                                                                                                        LineStrRef("$f")
                                                                                                                      lineStringContent
                                                                                                                        LineStrRef("$l")
                                                                                                                      QUOTE_CLOSE(""")
                                                                                RPAREN(")")
    semis
      NL("\n")
      NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        simpleIdentifier
          Identifier("test")
        functionValueParameters
          LPAREN("(")
          RPAREN(")")
        functionBody
          block
            LCURL("{")
            NL("\n")
            statements
              statement
                declaration
                  propertyDeclaration
                    VAL("val")
                    variableDeclaration
                      simpleIdentifier
                        Identifier("q")
                    ASSIGNMENT("=")
                    expression
                      disjunction
                        conjunction
                          equality
                            comparison
                              genericCallLikeComparison
                                infixOperation
                                  elvisExpression
                                    infixFunctionCall
                                      rangeExpression
                                        additiveExpression
                                          multiplicativeExpression
                                            asExpression
                                              prefixUnaryExpression
                                                postfixUnaryExpression
                                                  primaryExpression
                                                    simpleIdentifier
                                                      Identifier("foo")
                                                  postfixUnarySuffix
                                                    callSuffix
                                                      valueArguments
                                                        LPAREN("(")
                                                        valueArgument
                                                          expression
                                                            disjunction
                                                              conjunction
                                                                equality
                                                                  comparison
                                                                    genericCallLikeComparison
                                                                      infixOperation
                                                                        elvisExpression
                                                                          infixFunctionCall
                                                                            rangeExpression
                                                                              additiveExpression
                                                                                multiplicativeExpression
                                                                                  asExpression
                                                                                    prefixUnaryExpression
                                                                                      postfixUnaryExpression
                                                                                        primaryExpression
                                                                                          functionLiteral
                                                                                            anonymousFunction
                                                                                              FUN("fun")
                                                                                              type
                                                                                                typeReference
                                                                                                  userType
                                                                                                    simpleUserType
                                                                                                      simpleIdentifier
                                                                                                        Identifier("Int")
                                                                                              DOT(".")
                                                                                              parametersWithOptionalType
                                                                                                LPAREN("(")
                                                                                                RPAREN(")")
                                                                                              functionBody
                                                                                                block
                                                                                                  LCURL("{")
                                                                                                  statements
                                                                                                  RCURL("}")
                                                        COMMA(",")
                                                        valueArgument
                                                          expression
                                                            disjunction
                                                              conjunction
                                                                equality
                                                                  comparison
                                                                    genericCallLikeComparison
                                                                      infixOperation
                                                                        elvisExpression
                                                                          infixFunctionCall
                                                                            rangeExpression
                                                                              additiveExpression
                                                                                multiplicativeExpression
                                                                                  asExpression
                                                                                    prefixUnaryExpression
                                                                                      postfixUnaryExpression
                                                                                        primaryExpression
                                                                                          simpleIdentifier
                                                                                            Identifier("emptyList")
                                                                                        postfixUnarySuffix
                                                                                          callSuffix
                                                                                            valueArguments
                                                                                              LPAREN("(")
                                                                                              RPAREN(")")
                                                        RPAREN(")")
              semis
                NL("\n")
              statement
                expression
                  disjunction
                    conjunction
                      equality
                        comparison
                          genericCallLikeComparison
                            infixOperation
                              elvisExpression
                                infixFunctionCall
                                  rangeExpression
                                    additiveExpression
                                      multiplicativeExpression
                                        asExpression
                                          prefixUnaryExpression
                                            postfixUnaryExpression
                                              primaryExpression
                                                simpleIdentifier
                                                  Identifier("checkSubtype")
                                              postfixUnarySuffix
                                                typeArguments
                                                  LANGLE("<")
                                                  typeProjection
                                                    type
                                                      typeReference
                                                        userType
                                                          simpleUserType
                                                            simpleIdentifier
                                                              Identifier("Int")
                                                  RANGLE(">")
                                              postfixUnarySuffix
                                                callSuffix
                                                  valueArguments
                                                    LPAREN("(")
                                                    valueArgument
                                                      expression
                                                        disjunction
                                                          conjunction
                                                            equality
                                                              comparison
                                                                genericCallLikeComparison
                                                                  infixOperation
                                                                    elvisExpression
                                                                      infixFunctionCall
                                                                        rangeExpression
                                                                          additiveExpression
                                                                            multiplicativeExpression
                                                                              asExpression
                                                                                prefixUnaryExpression
                                                                                  postfixUnaryExpression
                                                                                    primaryExpression
                                                                                      simpleIdentifier
                                                                                        Identifier("q")
                                                    RPAREN(")")
              semis
                NL("\n")
                NL("\n")
              statement
                expression
                  disjunction
                    conjunction
                      equality
                        comparison
                          genericCallLikeComparison
                            infixOperation
                              elvisExpression
                                infixFunctionCall
                                  rangeExpression
                                    additiveExpression
                                      multiplicativeExpression
                                        asExpression
                                          prefixUnaryExpression
                                            postfixUnaryExpression
                                              primaryExpression
                                                simpleIdentifier
                                                  Identifier("foo")
                                              postfixUnarySuffix
                                                callSuffix
                                                  valueArguments
                                                    LPAREN("(")
                                                    valueArgument
                                                      expression
                                                        disjunction
                                                          conjunction
                                                            equality
                                                              comparison
                                                                genericCallLikeComparison
                                                                  infixOperation
                                                                    elvisExpression
                                                                      infixFunctionCall
                                                                        rangeExpression
                                                                          additiveExpression
                                                                            multiplicativeExpression
                                                                              asExpression
                                                                                prefixUnaryExpression
                                                                                  postfixUnaryExpression
                                                                                    primaryExpression
                                                                                      functionLiteral
                                                                                        lambdaLiteral
                                                                                          LCURL("{")
                                                                                          statements
                                                                                          RCURL("}")
                                                    COMMA(",")
                                                    valueArgument
                                                      expression
                                                        disjunction
                                                          conjunction
                                                            equality
                                                              comparison
                                                                genericCallLikeComparison
                                                                  infixOperation
                                                                    elvisExpression
                                                                      infixFunctionCall
                                                                        rangeExpression
                                                                          additiveExpression
                                                                            multiplicativeExpression
                                                                              asExpression
                                                                                prefixUnaryExpression
                                                                                  postfixUnaryExpression
                                                                                    primaryExpression
                                                                                      simpleIdentifier
                                                                                        Identifier("emptyList")
                                                                                    postfixUnarySuffix
                                                                                      callSuffix
                                                                                        valueArguments
                                                                                          LPAREN("(")
                                                                                          RPAREN(")")
                                                    RPAREN(")")
              semis
                NL("\n")
            RCURL("}")
    semis
      NL("\n")
  EOF("<EOF>")
