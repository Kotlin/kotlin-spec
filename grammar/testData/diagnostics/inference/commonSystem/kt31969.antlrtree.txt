File: kt31969.kt - 3f9c60de03ba51644ce6bf959598c67c
  NL("\n")
  NL("\n")
  NL("\n")
  packageHeader
  importList
  topLevelObject
    declaration
      classDeclaration
        modifiers
          modifier
            inheritanceModifier
              OPEN("open")
        CLASS("class")
        simpleIdentifier
          Identifier("View")
    semis
      NL("\n")
      NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        simpleIdentifier
          Identifier("test")
        functionValueParameters
          LPAREN("(")
          RPAREN(")")
        functionBody
          block
            LCURL("{")
            NL("\n")
            statements
              statement
                declaration
                  propertyDeclaration
                    VAL("val")
                    variableDeclaration
                      simpleIdentifier
                        Identifier("target")
                    ASSIGNMENT("=")
                    expression
                      disjunction
                        conjunction
                          equality
                            comparison
                              genericCallLikeComparison
                                infixOperation
                                  elvisExpression
                                    infixFunctionCall
                                      rangeExpression
                                        additiveExpression
                                          multiplicativeExpression
                                            asExpression
                                              prefixUnaryExpression
                                                postfixUnaryExpression
                                                  primaryExpression
                                                    simpleIdentifier
                                                      Identifier("foo")
                                                  postfixUnarySuffix
                                                    typeArguments
                                                      LANGLE("<")
                                                      typeProjection
                                                        type
                                                          typeReference
                                                            userType
                                                              simpleUserType
                                                                simpleIdentifier
                                                                  Identifier("View")
                                                      RANGLE(">")
                                                  postfixUnarySuffix
                                                    callSuffix
                                                      valueArguments
                                                        LPAREN("(")
                                                        RPAREN(")")
                                    elvis
                                      QUEST_NO_WS("?")
                                      COLON(":")
                                    infixFunctionCall
                                      rangeExpression
                                        additiveExpression
                                          multiplicativeExpression
                                            asExpression
                                              prefixUnaryExpression
                                                postfixUnaryExpression
                                                  primaryExpression
                                                    simpleIdentifier
                                                      Identifier("foo")
                                                  postfixUnarySuffix
                                                    callSuffix
                                                      valueArguments
                                                        LPAREN("(")
                                                        RPAREN(")")
                                    elvis
                                      QUEST_NO_WS("?")
                                      COLON(":")
                                    infixFunctionCall
                                      rangeExpression
                                        additiveExpression
                                          multiplicativeExpression
                                            asExpression
                                              prefixUnaryExpression
                                                postfixUnaryExpression
                                                  primaryExpression
                                                    simpleIdentifier
                                                      Identifier("run")
                                                  postfixUnarySuffix
                                                    callSuffix
                                                      annotatedLambda
                                                        lambdaLiteral
                                                          LCURL("{")
                                                          statements
                                                          RCURL("}")
                    NL("\n")
            RCURL("}")
    semis
      NL("\n")
      NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        typeParameters
          LANGLE("<")
          typeParameter
            simpleIdentifier
              Identifier("T")
            COLON(":")
            type
              typeReference
                userType
                  simpleUserType
                    simpleIdentifier
                      Identifier("View")
          RANGLE(">")
        simpleIdentifier
          Identifier("foo")
        functionValueParameters
          LPAREN("(")
          RPAREN(")")
        COLON(":")
        type
          nullableType
            typeReference
              userType
                simpleUserType
                  simpleIdentifier
                    Identifier("T")
            quest
              QUEST_WS("? ")
        functionBody
          block
            LCURL("{")
            NL("\n")
            statements
              statement
                expression
                  disjunction
                    conjunction
                      equality
                        comparison
                          genericCallLikeComparison
                            infixOperation
                              elvisExpression
                                infixFunctionCall
                                  rangeExpression
                                    additiveExpression
                                      multiplicativeExpression
                                        asExpression
                                          prefixUnaryExpression
                                            postfixUnaryExpression
                                              primaryExpression
                                                jumpExpression
                                                  RETURN("return")
                                                  expression
                                                    disjunction
                                                      conjunction
                                                        equality
                                                          comparison
                                                            genericCallLikeComparison
                                                              infixOperation
                                                                elvisExpression
                                                                  infixFunctionCall
                                                                    rangeExpression
                                                                      additiveExpression
                                                                        multiplicativeExpression
                                                                          asExpression
                                                                            prefixUnaryExpression
                                                                              postfixUnaryExpression
                                                                                primaryExpression
                                                                                  literalConstant
                                                                                    NullLiteral("null")
              semis
                NL("\n")
            RCURL("}")
    semis
      NL("\n")
  EOF("<EOF>")
