File: implicitInferenceTToFlexibleNothing.kt - e808489fef6e97697d405ab9a747adfe
  NL("\n")
  NL("\n")
  NL("\n")
  packageHeader
  importList
    importHeader
      IMPORT("import")
      identifier
        simpleIdentifier
          Identifier("java")
        DOT(".")
        simpleIdentifier
          Identifier("util")
      DOT(".")
      MULT("*")
      semi
        NL("\n")
        NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        typeParameters
          LANGLE("<")
          typeParameter
            simpleIdentifier
              Identifier("T")
          RANGLE(">")
        simpleIdentifier
          Identifier("foo")
        functionValueParameters
          LPAREN("(")
          functionValueParameter
            parameter
              simpleIdentifier
                Identifier("f")
              COLON(":")
              type
                functionType
                  functionTypeParameters
                    LPAREN("(")
                    RPAREN(")")
                  ARROW("->")
                  type
                    typeReference
                      userType
                        simpleUserType
                          simpleIdentifier
                            Identifier("List")
                          typeArguments
                            LANGLE("<")
                            typeProjection
                              type
                                typeReference
                                  userType
                                    simpleUserType
                                      simpleIdentifier
                                        Identifier("T")
                            RANGLE(">")
          RPAREN(")")
        COLON(":")
        type
          typeReference
            userType
              simpleUserType
                simpleIdentifier
                  Identifier("T")
        functionBody
          ASSIGNMENT("=")
          expression
            disjunction
              conjunction
                equality
                  comparison
                    genericCallLikeComparison
                      infixOperation
                        elvisExpression
                          infixFunctionCall
                            rangeExpression
                              additiveExpression
                                multiplicativeExpression
                                  asExpression
                                    prefixUnaryExpression
                                      postfixUnaryExpression
                                        primaryExpression
                                          literalConstant
                                            NullLiteral("null")
                                    asOperator
                                      AS("as")
                                    type
                                      typeReference
                                        userType
                                          simpleUserType
                                            simpleIdentifier
                                              Identifier("T")
    semis
      NL("\n")
      NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        simpleIdentifier
          Identifier("main")
        functionValueParameters
          LPAREN("(")
          RPAREN(")")
        functionBody
          block
            LCURL("{")
            NL("\n")
            statements
              statement
                declaration
                  propertyDeclaration
                    VAL("val")
                    variableDeclaration
                      simpleIdentifier
                        Identifier("x")
                    ASSIGNMENT("=")
                    expression
                      disjunction
                        conjunction
                          equality
                            comparison
                              genericCallLikeComparison
                                infixOperation
                                  elvisExpression
                                    infixFunctionCall
                                      rangeExpression
                                        additiveExpression
                                          multiplicativeExpression
                                            asExpression
                                              prefixUnaryExpression
                                                postfixUnaryExpression
                                                  primaryExpression
                                                    simpleIdentifier
                                                      Identifier("foo")
                                                  postfixUnarySuffix
                                                    callSuffix
                                                      annotatedLambda
                                                        lambdaLiteral
                                                          LCURL("{")
                                                          statements
                                                            statement
                                                              expression
                                                                disjunction
                                                                  conjunction
                                                                    equality
                                                                      comparison
                                                                        genericCallLikeComparison
                                                                          infixOperation
                                                                            elvisExpression
                                                                              infixFunctionCall
                                                                                rangeExpression
                                                                                  additiveExpression
                                                                                    multiplicativeExpression
                                                                                      asExpression
                                                                                        prefixUnaryExpression
                                                                                          postfixUnaryExpression
                                                                                            primaryExpression
                                                                                              simpleIdentifier
                                                                                                Identifier("Collections")
                                                                                            postfixUnarySuffix
                                                                                              navigationSuffix
                                                                                                memberAccessOperator
                                                                                                  DOT(".")
                                                                                                simpleIdentifier
                                                                                                  Identifier("emptyList")
                                                                                            postfixUnarySuffix
                                                                                              callSuffix
                                                                                                valueArguments
                                                                                                  LPAREN("(")
                                                                                                  RPAREN(")")
                                                          RCURL("}")
                    NL("\n")
            RCURL("}")
    semis
      NL("\n")
  EOF("<EOF>")
