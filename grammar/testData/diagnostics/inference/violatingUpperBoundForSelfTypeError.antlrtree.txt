File: violatingUpperBoundForSelfTypeError.kt - 2a70db639507bf5c86c67ea28e7b5e96
  NL("\n")
  NL("\n")
  NL("\n")
  NL("\n")
  packageHeader
  importList
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        typeParameters
          LANGLE("<")
          typeParameter
            simpleIdentifier
              Identifier("E")
            COLON(":")
            type
              typeReference
                userType
                  simpleUserType
                    simpleIdentifier
                      Identifier("Enum")
                    typeArguments
                      LANGLE("<")
                      typeProjection
                        type
                          typeReference
                            userType
                              simpleUserType
                                simpleIdentifier
                                  Identifier("E")
                      RANGLE(">")
          RANGLE(">")
        simpleIdentifier
          Identifier("createMap")
        functionValueParameters
          LPAREN("(")
          functionValueParameter
            parameter
              simpleIdentifier
                Identifier("enumClass")
              COLON(":")
              type
                typeReference
                  userType
                    simpleUserType
                      simpleIdentifier
                        Identifier("Class")
                      typeArguments
                        LANGLE("<")
                        typeProjection
                          type
                            typeReference
                              userType
                                simpleUserType
                                  simpleIdentifier
                                    Identifier("E")
                        RANGLE(">")
          RPAREN(")")
        functionBody
          block
            LCURL("{")
            statements
            RCURL("}")
    semis
      NL("\n")
      NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        simpleIdentifier
          Identifier("reproduce")
        functionValueParameters
          LPAREN("(")
          RPAREN(")")
        functionBody
          block
            LCURL("{")
            NL("\n")
            statements
              statement
                declaration
                  propertyDeclaration
                    VAL("val")
                    variableDeclaration
                      simpleIdentifier
                        Identifier("enumClass")
                      COLON(":")
                      type
                        typeReference
                          userType
                            simpleUserType
                              simpleIdentifier
                                Identifier("Class")
                              typeArguments
                                LANGLE("<")
                                typeProjection
                                  type
                                    typeReference
                                      userType
                                        simpleUserType
                                          simpleIdentifier
                                            Identifier("Enum")
                                          typeArguments
                                            LANGLE("<")
                                            typeProjection
                                              MULT("*")
                                            RANGLE(">")
                                RANGLE(">")
                    ASSIGNMENT("=")
                    expression
                      disjunction
                        conjunction
                          equality
                            comparison
                              genericCallLikeComparison
                                infixOperation
                                  elvisExpression
                                    infixFunctionCall
                                      rangeExpression
                                        additiveExpression
                                          multiplicativeExpression
                                            asExpression
                                              prefixUnaryExpression
                                                postfixUnaryExpression
                                                  primaryExpression
                                                    stringLiteral
                                                      lineStringLiteral
                                                        QUOTE_OPEN(""")
                                                        lineStringContent
                                                          LineStrText("any")
                                                        QUOTE_CLOSE(""")
                                              asOperator
                                                AS("as")
                                              type
                                                typeReference
                                                  userType
                                                    simpleUserType
                                                      simpleIdentifier
                                                        Identifier("Class")
                                                      typeArguments
                                                        LANGLE("<")
                                                        typeProjection
                                                          type
                                                            typeReference
                                                              userType
                                                                simpleUserType
                                                                  simpleIdentifier
                                                                    Identifier("Enum")
                                                                  typeArguments
                                                                    LANGLE("<")
                                                                    typeProjection
                                                                      MULT("*")
                                                                    RANGLE(">")
                                                        RANGLE(">")
              semis
                NL("\n")
              statement
                expression
                  disjunction
                    conjunction
                      equality
                        comparison
                          genericCallLikeComparison
                            infixOperation
                              elvisExpression
                                infixFunctionCall
                                  rangeExpression
                                    additiveExpression
                                      multiplicativeExpression
                                        asExpression
                                          prefixUnaryExpression
                                            postfixUnaryExpression
                                              primaryExpression
                                                simpleIdentifier
                                                  Identifier("createMap")
                                              postfixUnarySuffix
                                                callSuffix
                                                  valueArguments
                                                    LPAREN("(")
                                                    valueArgument
                                                      expression
                                                        disjunction
                                                          conjunction
                                                            equality
                                                              comparison
                                                                genericCallLikeComparison
                                                                  infixOperation
                                                                    elvisExpression
                                                                      infixFunctionCall
                                                                        rangeExpression
                                                                          additiveExpression
                                                                            multiplicativeExpression
                                                                              asExpression
                                                                                prefixUnaryExpression
                                                                                  postfixUnaryExpression
                                                                                    primaryExpression
                                                                                      simpleIdentifier
                                                                                        Identifier("enumClass")
                                                    RPAREN(")")
              semis
                NL("\n")
            RCURL("}")
  EOF("<EOF>")
