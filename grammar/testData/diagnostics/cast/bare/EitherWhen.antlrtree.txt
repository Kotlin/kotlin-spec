File: EitherWhen.kt - a5ca0b1e0a67920ccde25fe2086c30a0
  NL("\n")
  NL("\n")
  packageHeader
  importList
  topLevelObject
    declaration
      classDeclaration
        INTERFACE("interface")
        simpleIdentifier
          Identifier("Either")
        typeParameters
          LANGLE("<")
          typeParameter
            typeParameterModifiers
              typeParameterModifier
                varianceModifier
                  OUT("out")
            simpleIdentifier
              Identifier("A")
          COMMA(",")
          typeParameter
            typeParameterModifiers
              typeParameterModifier
                varianceModifier
                  OUT("out")
            simpleIdentifier
              Identifier("B")
          RANGLE(">")
    semis
      NL("\n")
  topLevelObject
    declaration
      classDeclaration
        INTERFACE("interface")
        simpleIdentifier
          Identifier("Left")
        typeParameters
          LANGLE("<")
          typeParameter
            typeParameterModifiers
              typeParameterModifier
                varianceModifier
                  OUT("out")
            simpleIdentifier
              Identifier("A")
          RANGLE(">")
        COLON(":")
        delegationSpecifiers
          annotatedDelegationSpecifier
            delegationSpecifier
              userType
                simpleUserType
                  simpleIdentifier
                    Identifier("Either")
                  typeArguments
                    LANGLE("<")
                    typeProjection
                      type
                        typeReference
                          userType
                            simpleUserType
                              simpleIdentifier
                                Identifier("A")
                    COMMA(",")
                    typeProjection
                      type
                        typeReference
                          userType
                            simpleUserType
                              simpleIdentifier
                                Identifier("Nothing")
                    RANGLE(">")
        classBody
          LCURL("{")
          NL("\n")
          classMemberDeclarations
            classMemberDeclaration
              declaration
                propertyDeclaration
                  VAL("val")
                  variableDeclaration
                    simpleIdentifier
                      VALUE("value")
                    COLON(":")
                    type
                      typeReference
                        userType
                          simpleUserType
                            simpleIdentifier
                              Identifier("A")
                  NL("\n")
          RCURL("}")
    semis
      NL("\n")
  topLevelObject
    declaration
      classDeclaration
        INTERFACE("interface")
        simpleIdentifier
          Identifier("Right")
        typeParameters
          LANGLE("<")
          typeParameter
            typeParameterModifiers
              typeParameterModifier
                varianceModifier
                  OUT("out")
            simpleIdentifier
              Identifier("B")
          RANGLE(">")
        COLON(":")
        delegationSpecifiers
          annotatedDelegationSpecifier
            delegationSpecifier
              userType
                simpleUserType
                  simpleIdentifier
                    Identifier("Either")
                  typeArguments
                    LANGLE("<")
                    typeProjection
                      type
                        typeReference
                          userType
                            simpleUserType
                              simpleIdentifier
                                Identifier("Nothing")
                    COMMA(",")
                    typeProjection
                      type
                        typeReference
                          userType
                            simpleUserType
                              simpleIdentifier
                                Identifier("B")
                    RANGLE(">")
        classBody
          LCURL("{")
          NL("\n")
          classMemberDeclarations
            classMemberDeclaration
              declaration
                propertyDeclaration
                  VAL("val")
                  variableDeclaration
                    simpleIdentifier
                      VALUE("value")
                    COLON(":")
                    type
                      typeReference
                        userType
                          simpleUserType
                            simpleIdentifier
                              Identifier("B")
                  NL("\n")
          RCURL("}")
    semis
      NL("\n")
      NL("\n")
  topLevelObject
    declaration
      classDeclaration
        CLASS("class")
        simpleIdentifier
          Identifier("C1")
        primaryConstructor
          classParameters
            LPAREN("(")
            classParameter
              VAL("val")
              simpleIdentifier
                Identifier("v1")
              COLON(":")
              type
                typeReference
                  userType
                    simpleUserType
                      simpleIdentifier
                        Identifier("Int")
            RPAREN(")")
    semis
      NL("\n")
  topLevelObject
    declaration
      classDeclaration
        CLASS("class")
        simpleIdentifier
          Identifier("C2")
        primaryConstructor
          classParameters
            LPAREN("(")
            classParameter
              VAL("val")
              simpleIdentifier
                Identifier("v2")
              COLON(":")
              type
                typeReference
                  userType
                    simpleUserType
                      simpleIdentifier
                        Identifier("Int")
            RPAREN(")")
    semis
      NL("\n")
      NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        simpleIdentifier
          Identifier("_when")
        functionValueParameters
          LPAREN("(")
          functionValueParameter
            parameter
              simpleIdentifier
                Identifier("e")
              COLON(":")
              type
                typeReference
                  userType
                    simpleUserType
                      simpleIdentifier
                        Identifier("Either")
                      typeArguments
                        LANGLE("<")
                        typeProjection
                          type
                            typeReference
                              userType
                                simpleUserType
                                  simpleIdentifier
                                    Identifier("C1")
                        COMMA(",")
                        typeProjection
                          type
                            typeReference
                              userType
                                simpleUserType
                                  simpleIdentifier
                                    Identifier("C2")
                        RANGLE(">")
          RPAREN(")")
        COLON(":")
        type
          typeReference
            userType
              simpleUserType
                simpleIdentifier
                  Identifier("Any")
        functionBody
          block
            LCURL("{")
            NL("\n")
            statements
              statement
                expression
                  disjunction
                    conjunction
                      equality
                        comparison
                          genericCallLikeComparison
                            infixOperation
                              elvisExpression
                                infixFunctionCall
                                  rangeExpression
                                    additiveExpression
                                      multiplicativeExpression
                                        asExpression
                                          prefixUnaryExpression
                                            postfixUnaryExpression
                                              primaryExpression
                                                jumpExpression
                                                  RETURN("return")
                                                  expression
                                                    disjunction
                                                      conjunction
                                                        equality
                                                          comparison
                                                            genericCallLikeComparison
                                                              infixOperation
                                                                elvisExpression
                                                                  infixFunctionCall
                                                                    rangeExpression
                                                                      additiveExpression
                                                                        multiplicativeExpression
                                                                          asExpression
                                                                            prefixUnaryExpression
                                                                              postfixUnaryExpression
                                                                                primaryExpression
                                                                                  whenExpression
                                                                                    WHEN("when")
                                                                                    whenSubject
                                                                                      LPAREN("(")
                                                                                      expression
                                                                                        disjunction
                                                                                          conjunction
                                                                                            equality
                                                                                              comparison
                                                                                                genericCallLikeComparison
                                                                                                  infixOperation
                                                                                                    elvisExpression
                                                                                                      infixFunctionCall
                                                                                                        rangeExpression
                                                                                                          additiveExpression
                                                                                                            multiplicativeExpression
                                                                                                              asExpression
                                                                                                                prefixUnaryExpression
                                                                                                                  postfixUnaryExpression
                                                                                                                    primaryExpression
                                                                                                                      simpleIdentifier
                                                                                                                        Identifier("e")
                                                                                      RPAREN(")")
                                                                                    LCURL("{")
                                                                                    NL("\n")
                                                                                    whenEntry
                                                                                      whenCondition
                                                                                        typeTest
                                                                                          isOperator
                                                                                            IS("is")
                                                                                          type
                                                                                            typeReference
                                                                                              userType
                                                                                                simpleUserType
                                                                                                  simpleIdentifier
                                                                                                    Identifier("Left")
                                                                                      ARROW("->")
                                                                                      controlStructureBody
                                                                                        statement
                                                                                          expression
                                                                                            disjunction
                                                                                              conjunction
                                                                                                equality
                                                                                                  comparison
                                                                                                    genericCallLikeComparison
                                                                                                      infixOperation
                                                                                                        elvisExpression
                                                                                                          infixFunctionCall
                                                                                                            rangeExpression
                                                                                                              additiveExpression
                                                                                                                multiplicativeExpression
                                                                                                                  asExpression
                                                                                                                    prefixUnaryExpression
                                                                                                                      postfixUnaryExpression
                                                                                                                        primaryExpression
                                                                                                                          simpleIdentifier
                                                                                                                            Identifier("e")
                                                                                                                        postfixUnarySuffix
                                                                                                                          navigationSuffix
                                                                                                                            memberAccessOperator
                                                                                                                              DOT(".")
                                                                                                                            simpleIdentifier
                                                                                                                              VALUE("value")
                                                                                                                        postfixUnarySuffix
                                                                                                                          navigationSuffix
                                                                                                                            memberAccessOperator
                                                                                                                              DOT(".")
                                                                                                                            simpleIdentifier
                                                                                                                              Identifier("v1")
                                                                                      semi
                                                                                        NL("\n")
                                                                                    whenEntry
                                                                                      whenCondition
                                                                                        typeTest
                                                                                          isOperator
                                                                                            IS("is")
                                                                                          type
                                                                                            typeReference
                                                                                              userType
                                                                                                simpleUserType
                                                                                                  simpleIdentifier
                                                                                                    Identifier("Right")
                                                                                      ARROW("->")
                                                                                      controlStructureBody
                                                                                        statement
                                                                                          expression
                                                                                            disjunction
                                                                                              conjunction
                                                                                                equality
                                                                                                  comparison
                                                                                                    genericCallLikeComparison
                                                                                                      infixOperation
                                                                                                        elvisExpression
                                                                                                          infixFunctionCall
                                                                                                            rangeExpression
                                                                                                              additiveExpression
                                                                                                                multiplicativeExpression
                                                                                                                  asExpression
                                                                                                                    prefixUnaryExpression
                                                                                                                      postfixUnaryExpression
                                                                                                                        primaryExpression
                                                                                                                          simpleIdentifier
                                                                                                                            Identifier("e")
                                                                                                                        postfixUnarySuffix
                                                                                                                          navigationSuffix
                                                                                                                            memberAccessOperator
                                                                                                                              DOT(".")
                                                                                                                            simpleIdentifier
                                                                                                                              VALUE("value")
                                                                                                                        postfixUnarySuffix
                                                                                                                          navigationSuffix
                                                                                                                            memberAccessOperator
                                                                                                                              DOT(".")
                                                                                                                            simpleIdentifier
                                                                                                                              Identifier("v2")
                                                                                      semi
                                                                                        NL("\n")
                                                                                    whenEntry
                                                                                      ELSE("else")
                                                                                      ARROW("->")
                                                                                      controlStructureBody
                                                                                        statement
                                                                                          expression
                                                                                            disjunction
                                                                                              conjunction
                                                                                                equality
                                                                                                  comparison
                                                                                                    genericCallLikeComparison
                                                                                                      infixOperation
                                                                                                        elvisExpression
                                                                                                          infixFunctionCall
                                                                                                            rangeExpression
                                                                                                              additiveExpression
                                                                                                                multiplicativeExpression
                                                                                                                  asExpression
                                                                                                                    prefixUnaryExpression
                                                                                                                      postfixUnaryExpression
                                                                                                                        primaryExpression
                                                                                                                          simpleIdentifier
                                                                                                                            Identifier("e")
                                                                                      semi
                                                                                        NL("\n")
                                                                                    RCURL("}")
              semis
                NL("\n")
            RCURL("}")
  EOF("<EOF>")
