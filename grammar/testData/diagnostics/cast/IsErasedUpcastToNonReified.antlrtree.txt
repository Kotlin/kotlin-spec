File: IsErasedUpcastToNonReified.kt - 299ed3bb3fcc0bb2efb25d5c1dd552dd
  packageHeader
  importList
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        typeParameters
          LANGLE("<")
          typeParameter
            simpleIdentifier
              Identifier("T")
          COMMA(",")
          typeParameter
            simpleIdentifier
              Identifier("S")
            COLON(":")
            type
              typeReference
                userType
                  simpleUserType
                    simpleIdentifier
                      Identifier("T")
          RANGLE(">")
        simpleIdentifier
          Identifier("test")
        functionValueParameters
          LPAREN("(")
          functionValueParameter
            parameter
              simpleIdentifier
                Identifier("x")
              COLON(":")
              type
                nullableType
                  typeReference
                    userType
                      simpleUserType
                        simpleIdentifier
                          Identifier("T")
                  quest
                    QUEST_NO_WS("?")
          COMMA(",")
          functionValueParameter
            parameter
              simpleIdentifier
                Identifier("y")
              COLON(":")
              type
                typeReference
                  userType
                    simpleUserType
                      simpleIdentifier
                        Identifier("S")
          COMMA(",")
          functionValueParameter
            parameter
              simpleIdentifier
                Identifier("z")
              COLON(":")
              type
                typeReference
                  userType
                    simpleUserType
                      simpleIdentifier
                        Identifier("T")
          RPAREN(")")
        functionBody
          block
            LCURL("{")
            NL("\n")
            statements
              statement
                expression
                  disjunction
                    conjunction
                      equality
                        comparison
                          genericCallLikeComparison
                            infixOperation
                              elvisExpression
                                infixFunctionCall
                                  rangeExpression
                                    additiveExpression
                                      multiplicativeExpression
                                        asExpression
                                          prefixUnaryExpression
                                            postfixUnaryExpression
                                              primaryExpression
                                                simpleIdentifier
                                                  Identifier("x")
                              isOperator
                                IS("is")
                              type
                                typeReference
                                  userType
                                    simpleUserType
                                      simpleIdentifier
                                        Identifier("T")
              semis
                NL("\n")
              statement
                expression
                  disjunction
                    conjunction
                      equality
                        comparison
                          genericCallLikeComparison
                            infixOperation
                              elvisExpression
                                infixFunctionCall
                                  rangeExpression
                                    additiveExpression
                                      multiplicativeExpression
                                        asExpression
                                          prefixUnaryExpression
                                            postfixUnaryExpression
                                              primaryExpression
                                                simpleIdentifier
                                                  Identifier("x")
                              isOperator
                                IS("is")
                              type
                                nullableType
                                  typeReference
                                    userType
                                      simpleUserType
                                        simpleIdentifier
                                          Identifier("T")
                                  quest
                                    QUEST_NO_WS("?")
              semis
                NL("\n")
                NL("\n")
              statement
                expression
                  disjunction
                    conjunction
                      equality
                        comparison
                          genericCallLikeComparison
                            infixOperation
                              elvisExpression
                                infixFunctionCall
                                  rangeExpression
                                    additiveExpression
                                      multiplicativeExpression
                                        asExpression
                                          prefixUnaryExpression
                                            postfixUnaryExpression
                                              primaryExpression
                                                simpleIdentifier
                                                  Identifier("y")
                              isOperator
                                IS("is")
                              type
                                typeReference
                                  userType
                                    simpleUserType
                                      simpleIdentifier
                                        Identifier("T")
              semis
                NL("\n")
              statement
                expression
                  disjunction
                    conjunction
                      equality
                        comparison
                          genericCallLikeComparison
                            infixOperation
                              elvisExpression
                                infixFunctionCall
                                  rangeExpression
                                    additiveExpression
                                      multiplicativeExpression
                                        asExpression
                                          prefixUnaryExpression
                                            postfixUnaryExpression
                                              primaryExpression
                                                simpleIdentifier
                                                  Identifier("y")
                              isOperator
                                IS("is")
                              type
                                typeReference
                                  userType
                                    simpleUserType
                                      simpleIdentifier
                                        Identifier("S")
              semis
                NL("\n")
              statement
                expression
                  disjunction
                    conjunction
                      equality
                        comparison
                          genericCallLikeComparison
                            infixOperation
                              elvisExpression
                                infixFunctionCall
                                  rangeExpression
                                    additiveExpression
                                      multiplicativeExpression
                                        asExpression
                                          prefixUnaryExpression
                                            postfixUnaryExpression
                                              primaryExpression
                                                simpleIdentifier
                                                  Identifier("y")
                              isOperator
                                IS("is")
                              type
                                nullableType
                                  typeReference
                                    userType
                                      simpleUserType
                                        simpleIdentifier
                                          Identifier("T")
                                  quest
                                    QUEST_NO_WS("?")
              semis
                NL("\n")
              statement
                expression
                  disjunction
                    conjunction
                      equality
                        comparison
                          genericCallLikeComparison
                            infixOperation
                              elvisExpression
                                infixFunctionCall
                                  rangeExpression
                                    additiveExpression
                                      multiplicativeExpression
                                        asExpression
                                          prefixUnaryExpression
                                            postfixUnaryExpression
                                              primaryExpression
                                                simpleIdentifier
                                                  Identifier("y")
                              isOperator
                                IS("is")
                              type
                                nullableType
                                  typeReference
                                    userType
                                      simpleUserType
                                        simpleIdentifier
                                          Identifier("S")
                                  quest
                                    QUEST_NO_WS("?")
              semis
                NL("\n")
                NL("\n")
              statement
                expression
                  disjunction
                    conjunction
                      equality
                        comparison
                          genericCallLikeComparison
                            infixOperation
                              elvisExpression
                                infixFunctionCall
                                  rangeExpression
                                    additiveExpression
                                      multiplicativeExpression
                                        asExpression
                                          prefixUnaryExpression
                                            postfixUnaryExpression
                                              primaryExpression
                                                simpleIdentifier
                                                  Identifier("z")
                              isOperator
                                IS("is")
                              type
                                typeReference
                                  userType
                                    simpleUserType
                                      simpleIdentifier
                                        Identifier("T")
              semis
                NL("\n")
              statement
                expression
                  disjunction
                    conjunction
                      equality
                        comparison
                          genericCallLikeComparison
                            infixOperation
                              elvisExpression
                                infixFunctionCall
                                  rangeExpression
                                    additiveExpression
                                      multiplicativeExpression
                                        asExpression
                                          prefixUnaryExpression
                                            postfixUnaryExpression
                                              primaryExpression
                                                simpleIdentifier
                                                  Identifier("z")
                              isOperator
                                IS("is")
                              type
                                nullableType
                                  typeReference
                                    userType
                                      simpleUserType
                                        simpleIdentifier
                                          Identifier("T")
                                  quest
                                    QUEST_NO_WS("?")
              semis
                NL("\n")
                NL("\n")
              statement
                expression
                  disjunction
                    conjunction
                      equality
                        comparison
                          genericCallLikeComparison
                            infixOperation
                              elvisExpression
                                infixFunctionCall
                                  rangeExpression
                                    additiveExpression
                                      multiplicativeExpression
                                        asExpression
                                          prefixUnaryExpression
                                            postfixUnaryExpression
                                              primaryExpression
                                                literalConstant
                                                  NullLiteral("null")
                                          asOperator
                                            AS("as")
                                          type
                                            typeReference
                                              userType
                                                simpleUserType
                                                  simpleIdentifier
                                                    Identifier("T")
              semis
                NL("\n")
              statement
                expression
                  disjunction
                    conjunction
                      equality
                        comparison
                          genericCallLikeComparison
                            infixOperation
                              elvisExpression
                                infixFunctionCall
                                  rangeExpression
                                    additiveExpression
                                      multiplicativeExpression
                                        asExpression
                                          prefixUnaryExpression
                                            postfixUnaryExpression
                                              primaryExpression
                                                literalConstant
                                                  NullLiteral("null")
                                          asOperator
                                            AS("as")
                                          type
                                            nullableType
                                              typeReference
                                                userType
                                                  simpleUserType
                                                    simpleIdentifier
                                                      Identifier("T")
                                              quest
                                                QUEST_NO_WS("?")
              semis
                NL("\n")
              statement
                expression
                  disjunction
                    conjunction
                      equality
                        comparison
                          genericCallLikeComparison
                            infixOperation
                              elvisExpression
                                infixFunctionCall
                                  rangeExpression
                                    additiveExpression
                                      multiplicativeExpression
                                        asExpression
                                          prefixUnaryExpression
                                            postfixUnaryExpression
                                              primaryExpression
                                                literalConstant
                                                  NullLiteral("null")
                                          asOperator
                                            AS("as")
                                          type
                                            typeReference
                                              userType
                                                simpleUserType
                                                  simpleIdentifier
                                                    Identifier("S")
              semis
                NL("\n")
            RCURL("}")
    semis
      NL("\n")
      NL("\n")
  topLevelObject
    declaration
      classDeclaration
        CLASS("class")
        simpleIdentifier
          Identifier("Box")
        typeParameters
          LANGLE("<")
          typeParameter
            simpleIdentifier
              Identifier("T")
          RANGLE(">")
    semis
      NL("\n")
      NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        modifiers
          modifier
            functionModifier
              INLINE("inline")
        FUN("fun")
        typeParameters
          LANGLE("<")
          typeParameter
            typeParameterModifiers
              typeParameterModifier
                reificationModifier
                  REIFIED("reified")
            simpleIdentifier
              Identifier("T")
          RANGLE(">")
        simpleIdentifier
          Identifier("test")
        functionValueParameters
          LPAREN("(")
          functionValueParameter
            parameter
              simpleIdentifier
                Identifier("x")
              COLON(":")
              type
                nullableType
                  typeReference
                    userType
                      simpleUserType
                        simpleIdentifier
                          Identifier("T")
                  quest
                    QUEST_NO_WS("?")
          COMMA(",")
          functionValueParameter
            parameter
              simpleIdentifier
                Identifier("a")
              COLON(":")
              type
                typeReference
                  userType
                    simpleUserType
                      simpleIdentifier
                        Identifier("Any")
          RPAREN(")")
        functionBody
          block
            LCURL("{")
            NL("\n")
            statements
              statement
                expression
                  disjunction
                    conjunction
                      equality
                        comparison
                          genericCallLikeComparison
                            infixOperation
                              elvisExpression
                                infixFunctionCall
                                  rangeExpression
                                    additiveExpression
                                      multiplicativeExpression
                                        asExpression
                                          prefixUnaryExpression
                                            postfixUnaryExpression
                                              primaryExpression
                                                simpleIdentifier
                                                  Identifier("x")
                              isOperator
                                IS("is")
                              type
                                typeReference
                                  userType
                                    simpleUserType
                                      simpleIdentifier
                                        Identifier("T")
              semis
                NL("\n")
              statement
                expression
                  disjunction
                    conjunction
                      equality
                        comparison
                          genericCallLikeComparison
                            infixOperation
                              elvisExpression
                                infixFunctionCall
                                  rangeExpression
                                    additiveExpression
                                      multiplicativeExpression
                                        asExpression
                                          prefixUnaryExpression
                                            postfixUnaryExpression
                                              primaryExpression
                                                literalConstant
                                                  NullLiteral("null")
                                          asOperator
                                            AS("as")
                                          type
                                            typeReference
                                              userType
                                                simpleUserType
                                                  simpleIdentifier
                                                    Identifier("T")
              semis
                NL("\n")
              statement
                expression
                  disjunction
                    conjunction
                      equality
                        comparison
                          genericCallLikeComparison
                            infixOperation
                              elvisExpression
                                infixFunctionCall
                                  rangeExpression
                                    additiveExpression
                                      multiplicativeExpression
                                        asExpression
                                          prefixUnaryExpression
                                            postfixUnaryExpression
                                              primaryExpression
                                                literalConstant
                                                  NullLiteral("null")
                                          asOperator
                                            AS("as")
                                          type
                                            nullableType
                                              typeReference
                                                userType
                                                  simpleUserType
                                                    simpleIdentifier
                                                      Identifier("T")
                                              quest
                                                QUEST_NO_WS("?")
              semis
                NL("\n")
                NL("\n")
              statement
                expression
                  disjunction
                    conjunction
                      equality
                        comparison
                          genericCallLikeComparison
                            infixOperation
                              elvisExpression
                                infixFunctionCall
                                  rangeExpression
                                    additiveExpression
                                      multiplicativeExpression
                                        asExpression
                                          prefixUnaryExpression
                                            postfixUnaryExpression
                                              primaryExpression
                                                simpleIdentifier
                                                  Identifier("a")
                              isOperator
                                IS("is")
                              type
                                typeReference
                                  userType
                                    simpleUserType
                                      simpleIdentifier
                                        Identifier("T")
              semis
                NL("\n")
              statement
                expression
                  disjunction
                    conjunction
                      equality
                        comparison
                          genericCallLikeComparison
                            infixOperation
                              elvisExpression
                                infixFunctionCall
                                  rangeExpression
                                    additiveExpression
                                      multiplicativeExpression
                                        asExpression
                                          prefixUnaryExpression
                                            postfixUnaryExpression
                                              primaryExpression
                                                simpleIdentifier
                                                  Identifier("a")
                                          asOperator
                                            AS("as")
                                          type
                                            typeReference
                                              userType
                                                simpleUserType
                                                  simpleIdentifier
                                                    Identifier("T")
              semis
                NL("\n")
                NL("\n")
              statement
                expression
                  disjunction
                    conjunction
                      equality
                        comparison
                          genericCallLikeComparison
                            infixOperation
                              elvisExpression
                                infixFunctionCall
                                  rangeExpression
                                    additiveExpression
                                      multiplicativeExpression
                                        asExpression
                                          prefixUnaryExpression
                                            postfixUnaryExpression
                                              primaryExpression
                                                simpleIdentifier
                                                  Identifier("a")
                              isOperator
                                IS("is")
                              type
                                typeReference
                                  userType
                                    simpleUserType
                                      simpleIdentifier
                                        Identifier("Box")
                                      typeArguments
                                        LANGLE("<")
                                        typeProjection
                                          type
                                            typeReference
                                              userType
                                                simpleUserType
                                                  simpleIdentifier
                                                    Identifier("T")
                                        RANGLE(">")
              semis
                NL("\n")
              statement
                expression
                  disjunction
                    conjunction
                      equality
                        comparison
                          genericCallLikeComparison
                            infixOperation
                              elvisExpression
                                infixFunctionCall
                                  rangeExpression
                                    additiveExpression
                                      multiplicativeExpression
                                        asExpression
                                          prefixUnaryExpression
                                            postfixUnaryExpression
                                              primaryExpression
                                                simpleIdentifier
                                                  Identifier("a")
                              isOperator
                                IS("is")
                              type
                                typeReference
                                  userType
                                    simpleUserType
                                      simpleIdentifier
                                        Identifier("Array")
                                      typeArguments
                                        LANGLE("<")
                                        typeProjection
                                          type
                                            typeReference
                                              userType
                                                simpleUserType
                                                  simpleIdentifier
                                                    Identifier("T")
                                        RANGLE(">")
              semis
                NL("\n")
              statement
                expression
                  disjunction
                    conjunction
                      equality
                        comparison
                          genericCallLikeComparison
                            infixOperation
                              elvisExpression
                                infixFunctionCall
                                  rangeExpression
                                    additiveExpression
                                      multiplicativeExpression
                                        asExpression
                                          prefixUnaryExpression
                                            postfixUnaryExpression
                                              primaryExpression
                                                simpleIdentifier
                                                  Identifier("a")
                                          asOperator
                                            AS("as")
                                          type
                                            typeReference
                                              userType
                                                simpleUserType
                                                  simpleIdentifier
                                                    Identifier("Box")
                                                  typeArguments
                                                    LANGLE("<")
                                                    typeProjection
                                                      type
                                                        typeReference
                                                          userType
                                                            simpleUserType
                                                              simpleIdentifier
                                                                Identifier("T")
                                                    RANGLE(">")
              semis
                NL("\n")
              statement
                expression
                  disjunction
                    conjunction
                      equality
                        comparison
                          genericCallLikeComparison
                            infixOperation
                              elvisExpression
                                infixFunctionCall
                                  rangeExpression
                                    additiveExpression
                                      multiplicativeExpression
                                        asExpression
                                          prefixUnaryExpression
                                            postfixUnaryExpression
                                              primaryExpression
                                                simpleIdentifier
                                                  Identifier("a")
                                          asOperator
                                            AS("as")
                                          type
                                            typeReference
                                              userType
                                                simpleUserType
                                                  simpleIdentifier
                                                    Identifier("Array")
                                                  typeArguments
                                                    LANGLE("<")
                                                    typeProjection
                                                      type
                                                        typeReference
                                                          userType
                                                            simpleUserType
                                                              simpleIdentifier
                                                                Identifier("T")
                                                    RANGLE(">")
              semis
                NL("\n")
                NL("\n")
              statement
                expression
                  disjunction
                    conjunction
                      equality
                        comparison
                          genericCallLikeComparison
                            infixOperation
                              elvisExpression
                                infixFunctionCall
                                  rangeExpression
                                    additiveExpression
                                      multiplicativeExpression
                                        asExpression
                                          prefixUnaryExpression
                                            postfixUnaryExpression
                                              primaryExpression
                                                simpleIdentifier
                                                  Identifier("a")
                              isOperator
                                IS("is")
                              type
                                typeReference
                                  userType
                                    simpleUserType
                                      simpleIdentifier
                                        Identifier("Box")
                                      typeArguments
                                        LANGLE("<")
                                        typeProjection
                                          type
                                            typeReference
                                              userType
                                                simpleUserType
                                                  simpleIdentifier
                                                    Identifier("List")
                                                  typeArguments
                                                    LANGLE("<")
                                                    typeProjection
                                                      type
                                                        typeReference
                                                          userType
                                                            simpleUserType
                                                              simpleIdentifier
                                                                Identifier("T")
                                                    RANGLE(">")
                                        RANGLE(">")
              semis
                NL("\n")
              statement
                expression
                  disjunction
                    conjunction
                      equality
                        comparison
                          genericCallLikeComparison
                            infixOperation
                              elvisExpression
                                infixFunctionCall
                                  rangeExpression
                                    additiveExpression
                                      multiplicativeExpression
                                        asExpression
                                          prefixUnaryExpression
                                            postfixUnaryExpression
                                              primaryExpression
                                                simpleIdentifier
                                                  Identifier("a")
                              isOperator
                                IS("is")
                              type
                                typeReference
                                  userType
                                    simpleUserType
                                      simpleIdentifier
                                        Identifier("Array")
                                      typeArguments
                                        LANGLE("<")
                                        typeProjection
                                          type
                                            typeReference
                                              userType
                                                simpleUserType
                                                  simpleIdentifier
                                                    Identifier("List")
                                                  typeArguments
                                                    LANGLE("<")
                                                    typeProjection
                                                      type
                                                        typeReference
                                                          userType
                                                            simpleUserType
                                                              simpleIdentifier
                                                                Identifier("T")
                                                    RANGLE(">")
                                        RANGLE(">")
              semis
                NL("\n")
              statement
                expression
                  disjunction
                    conjunction
                      equality
                        comparison
                          genericCallLikeComparison
                            infixOperation
                              elvisExpression
                                infixFunctionCall
                                  rangeExpression
                                    additiveExpression
                                      multiplicativeExpression
                                        asExpression
                                          prefixUnaryExpression
                                            postfixUnaryExpression
                                              primaryExpression
                                                simpleIdentifier
                                                  Identifier("a")
                                          asOperator
                                            AS("as")
                                          type
                                            typeReference
                                              userType
                                                simpleUserType
                                                  simpleIdentifier
                                                    Identifier("Box")
                                                  typeArguments
                                                    LANGLE("<")
                                                    typeProjection
                                                      type
                                                        typeReference
                                                          userType
                                                            simpleUserType
                                                              simpleIdentifier
                                                                Identifier("List")
                                                              typeArguments
                                                                LANGLE("<")
                                                                typeProjection
                                                                  type
                                                                    typeReference
                                                                      userType
                                                                        simpleUserType
                                                                          simpleIdentifier
                                                                            Identifier("T")
                                                                RANGLE(">")
                                                    RANGLE(">")
              semis
                NL("\n")
              statement
                expression
                  disjunction
                    conjunction
                      equality
                        comparison
                          genericCallLikeComparison
                            infixOperation
                              elvisExpression
                                infixFunctionCall
                                  rangeExpression
                                    additiveExpression
                                      multiplicativeExpression
                                        asExpression
                                          prefixUnaryExpression
                                            postfixUnaryExpression
                                              primaryExpression
                                                simpleIdentifier
                                                  Identifier("a")
                                          asOperator
                                            AS("as")
                                          type
                                            typeReference
                                              userType
                                                simpleUserType
                                                  simpleIdentifier
                                                    Identifier("Array")
                                                  typeArguments
                                                    LANGLE("<")
                                                    typeProjection
                                                      type
                                                        typeReference
                                                          userType
                                                            simpleUserType
                                                              simpleIdentifier
                                                                Identifier("List")
                                                              typeArguments
                                                                LANGLE("<")
                                                                typeProjection
                                                                  type
                                                                    typeReference
                                                                      userType
                                                                        simpleUserType
                                                                          simpleIdentifier
                                                                            Identifier("T")
                                                                RANGLE(">")
                                                    RANGLE(">")
              semis
                NL("\n")
            RCURL("}")
    semis
      NL("\n")
      NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        typeParameters
          LANGLE("<")
          typeParameter
            simpleIdentifier
              Identifier("T")
          RANGLE(">")
        simpleIdentifier
          Identifier("foo")
        functionValueParameters
          LPAREN("(")
          functionValueParameter
            parameter
              simpleIdentifier
                Identifier("x")
              COLON(":")
              type
                typeReference
                  userType
                    simpleUserType
                      simpleIdentifier
                        Identifier("List")
                      typeArguments
                        LANGLE("<")
                        typeProjection
                          type
                            typeReference
                              userType
                                simpleUserType
                                  simpleIdentifier
                                    Identifier("T")
                        RANGLE(">")
          COMMA(",")
          functionValueParameter
            parameter
              simpleIdentifier
                Identifier("y")
              COLON(":")
              type
                nullableType
                  typeReference
                    userType
                      simpleUserType
                        simpleIdentifier
                          Identifier("List")
                        typeArguments
                          LANGLE("<")
                          typeProjection
                            type
                              typeReference
                                userType
                                  simpleUserType
                                    simpleIdentifier
                                      Identifier("T")
                          RANGLE(">")
                  quest
                    QUEST_NO_WS("?")
          RPAREN(")")
        functionBody
          block
            LCURL("{")
            NL("\n")
            statements
              statement
                expression
                  disjunction
                    conjunction
                      equality
                        comparison
                          genericCallLikeComparison
                            infixOperation
                              elvisExpression
                                infixFunctionCall
                                  rangeExpression
                                    additiveExpression
                                      multiplicativeExpression
                                        asExpression
                                          prefixUnaryExpression
                                            postfixUnaryExpression
                                              primaryExpression
                                                simpleIdentifier
                                                  Identifier("x")
                              isOperator
                                IS("is")
                              type
                                typeReference
                                  userType
                                    simpleUserType
                                      simpleIdentifier
                                        Identifier("List")
                                      typeArguments
                                        LANGLE("<")
                                        typeProjection
                                          type
                                            typeReference
                                              userType
                                                simpleUserType
                                                  simpleIdentifier
                                                    Identifier("T")
                                        RANGLE(">")
              semis
                NL("\n")
              statement
                expression
                  disjunction
                    conjunction
                      equality
                        comparison
                          genericCallLikeComparison
                            infixOperation
                              elvisExpression
                                infixFunctionCall
                                  rangeExpression
                                    additiveExpression
                                      multiplicativeExpression
                                        asExpression
                                          prefixUnaryExpression
                                            postfixUnaryExpression
                                              primaryExpression
                                                simpleIdentifier
                                                  Identifier("y")
                              isOperator
                                IS("is")
                              type
                                typeReference
                                  userType
                                    simpleUserType
                                      simpleIdentifier
                                        Identifier("List")
                                      typeArguments
                                        LANGLE("<")
                                        typeProjection
                                          type
                                            typeReference
                                              userType
                                                simpleUserType
                                                  simpleIdentifier
                                                    Identifier("T")
                                        RANGLE(">")
              semis
                NL("\n")
            RCURL("}")
    semis
      NL("\n")
  EOF("<EOF>")
