File: nestedClassesInAnnotations.kt - e5f3fc1dd1842e830f6a1efc7743150a
  NL("\n")
  NL("\n")
  NL("\n")
  packageHeader
  importList
  topLevelObject
    declaration
      classDeclaration
        modifiers
          modifier
            classModifier
              ANNOTATION("annotation")
        CLASS("class")
        simpleIdentifier
          Identifier("Foo")
        classBody
          LCURL("{")
          NL("\n")
          classMemberDeclarations
            classMemberDeclaration
              declaration
                classDeclaration
                  CLASS("class")
                  simpleIdentifier
                    Identifier("Nested")
            semis
              NL("\n")
              NL("\n")
            classMemberDeclaration
              declaration
                classDeclaration
                  modifiers
                    modifier
                      classModifier
                        INNER("inner")
                  CLASS("class")
                  simpleIdentifier
                    Identifier("Inner")
            semis
              NL("\n")
              NL("\n")
            classMemberDeclaration
              declaration
                classDeclaration
                  modifiers
                    modifier
                      classModifier
                        ENUM("enum")
                  CLASS("class")
                  simpleIdentifier
                    Identifier("E")
                  enumClassBody
                    LCURL("{")
                    enumEntries
                      enumEntry
                        simpleIdentifier
                          Identifier("A")
                      COMMA(",")
                      enumEntry
                        simpleIdentifier
                          Identifier("B")
                    RCURL("}")
            semis
              NL("\n")
            classMemberDeclaration
              declaration
                objectDeclaration
                  OBJECT("object")
                  simpleIdentifier
                    Identifier("O")
            semis
              NL("\n")
            classMemberDeclaration
              declaration
                classDeclaration
                  INTERFACE("interface")
                  simpleIdentifier
                    Identifier("I")
            semis
              NL("\n")
            classMemberDeclaration
              declaration
                classDeclaration
                  modifiers
                    modifier
                      classModifier
                        ANNOTATION("annotation")
                  CLASS("class")
                  simpleIdentifier
                    Identifier("Anno")
                  primaryConstructor
                    classParameters
                      LPAREN("(")
                      classParameter
                        VAL("val")
                        simpleIdentifier
                          Identifier("e")
                        COLON(":")
                        type
                          typeReference
                            userType
                              simpleUserType
                                simpleIdentifier
                                  Identifier("E")
                      RPAREN(")")
            semis
              NL("\n")
              NL("\n")
            classMemberDeclaration
              companionObject
                COMPANION("companion")
                OBJECT("object")
                classBody
                  LCURL("{")
                  NL("\n")
                  classMemberDeclarations
                    classMemberDeclaration
                      declaration
                        propertyDeclaration
                          VAL("val")
                          variableDeclaration
                            simpleIdentifier
                              Identifier("x")
                          ASSIGNMENT("=")
                          expression
                            disjunction
                              conjunction
                                equality
                                  comparison
                                    genericCallLikeComparison
                                      infixOperation
                                        elvisExpression
                                          infixFunctionCall
                                            rangeExpression
                                              additiveExpression
                                                multiplicativeExpression
                                                  asExpression
                                                    prefixUnaryExpression
                                                      postfixUnaryExpression
                                                        primaryExpression
                                                          literalConstant
                                                            IntegerLiteral("1")
                          NL("\n")
                    classMemberDeclaration
                      declaration
                        propertyDeclaration
                          modifiers
                            modifier
                              propertyModifier
                                CONST("const")
                          VAL("val")
                          variableDeclaration
                            simpleIdentifier
                              Identifier("y")
                          ASSIGNMENT("=")
                          expression
                            disjunction
                              conjunction
                                equality
                                  comparison
                                    genericCallLikeComparison
                                      infixOperation
                                        elvisExpression
                                          infixFunctionCall
                                            rangeExpression
                                              additiveExpression
                                                multiplicativeExpression
                                                  asExpression
                                                    prefixUnaryExpression
                                                      postfixUnaryExpression
                                                        primaryExpression
                                                          stringLiteral
                                                            lineStringLiteral
                                                              QUOTE_OPEN(""")
                                                              QUOTE_CLOSE(""")
                          NL("\n")
                  RCURL("}")
            semis
              NL("\n")
              NL("\n")
              NL("\n")
            classMemberDeclaration
              secondaryConstructor
                CONSTRUCTOR("constructor")
                functionValueParameters
                  LPAREN("(")
                  functionValueParameter
                    parameter
                      simpleIdentifier
                        Identifier("s")
                      COLON(":")
                      type
                        typeReference
                          userType
                            simpleUserType
                              simpleIdentifier
                                Identifier("Int")
                  RPAREN(")")
                block
                  LCURL("{")
                  statements
                  RCURL("}")
            semis
              NL("\n")
            classMemberDeclaration
              anonymousInitializer
                INIT("init")
                block
                  LCURL("{")
                  statements
                  RCURL("}")
            semis
              NL("\n")
            classMemberDeclaration
              declaration
                functionDeclaration
                  FUN("fun")
                  simpleIdentifier
                    Identifier("function")
                  functionValueParameters
                    LPAREN("(")
                    RPAREN(")")
                  functionBody
                    block
                      LCURL("{")
                      statements
                      RCURL("}")
            semis
              NL("\n")
            classMemberDeclaration
              declaration
                propertyDeclaration
                  VAL("val")
                  variableDeclaration
                    simpleIdentifier
                      PROPERTY("property")
                  getter
                    GET("get")
                    LPAREN("(")
                    RPAREN(")")
                    functionBody
                      ASSIGNMENT("=")
                      expression
                        disjunction
                          conjunction
                            equality
                              comparison
                                genericCallLikeComparison
                                  infixOperation
                                    elvisExpression
                                      infixFunctionCall
                                        rangeExpression
                                          additiveExpression
                                            multiplicativeExpression
                                              asExpression
                                                prefixUnaryExpression
                                                  postfixUnaryExpression
                                                    primaryExpression
                                                      simpleIdentifier
                                                        Identifier("Unit")
            semis
              NL("\n")
          RCURL("}")
    semis
      NL("\n")
  EOF("<EOF>")
