File: byte.kt - e776c986a5d93145467dd0cbe41b6812
  packageHeader
    PACKAGE("package")
    identifier
      simpleIdentifier
        Identifier("test")
    semi
      NL("\n")
      NL("\n")
  importList
  topLevelObject
    declaration
      classDeclaration
        modifiers
          modifier
            classModifier
              ANNOTATION("annotation")
        CLASS("class")
        simpleIdentifier
          Identifier("Ann")
        primaryConstructor
          classParameters
            LPAREN("(")
            classParameter
              VAL("val")
              simpleIdentifier
                Identifier("b1")
              COLON(":")
              type
                typeReference
                  userType
                    simpleUserType
                      simpleIdentifier
                        Identifier("Byte")
            COMMA(",")
            classParameter
              VAL("val")
              simpleIdentifier
                Identifier("b2")
              COLON(":")
              type
                typeReference
                  userType
                    simpleUserType
                      simpleIdentifier
                        Identifier("Byte")
            COMMA(",")
            classParameter
              VAL("val")
              simpleIdentifier
                Identifier("b3")
              COLON(":")
              type
                typeReference
                  userType
                    simpleUserType
                      simpleIdentifier
                        Identifier("Byte")
            COMMA(",")
            classParameter
              VAL("val")
              simpleIdentifier
                Identifier("b4")
              COLON(":")
              type
                typeReference
                  userType
                    simpleUserType
                      simpleIdentifier
                        Identifier("Byte")
            RPAREN(")")
    semis
      NL("\n")
  topLevelObject
    declaration
      classDeclaration
        modifiers
          annotation
            singleAnnotation
              AT_PRE_WS("\n@")
              unescapedAnnotation
                constructorInvocation
                  userType
                    simpleUserType
                      simpleIdentifier
                        Identifier("Ann")
                  valueArguments
                    LPAREN("(")
                    valueArgument
                      expression
                        disjunction
                          conjunction
                            equality
                              comparison
                                genericCallLikeComparison
                                  infixOperation
                                    elvisExpression
                                      infixFunctionCall
                                        rangeExpression
                                          additiveExpression
                                            multiplicativeExpression
                                              asExpression
                                                prefixUnaryExpression
                                                  postfixUnaryExpression
                                                    primaryExpression
                                                      literalConstant
                                                        IntegerLiteral("1")
                    COMMA(",")
                    valueArgument
                      expression
                        disjunction
                          conjunction
                            equality
                              comparison
                                genericCallLikeComparison
                                  infixOperation
                                    elvisExpression
                                      infixFunctionCall
                                        rangeExpression
                                          additiveExpression
                                            multiplicativeExpression
                                              asExpression
                                                prefixUnaryExpression
                                                  postfixUnaryExpression
                                                    primaryExpression
                                                      literalConstant
                                                        IntegerLiteral("1")
                                                    postfixUnarySuffix
                                                      navigationSuffix
                                                        memberAccessOperator
                                                          DOT(".")
                                                        simpleIdentifier
                                                          Identifier("toByte")
                                                    postfixUnarySuffix
                                                      callSuffix
                                                        valueArguments
                                                          LPAREN("(")
                                                          RPAREN(")")
                    COMMA(",")
                    valueArgument
                      expression
                        disjunction
                          conjunction
                            equality
                              comparison
                                genericCallLikeComparison
                                  infixOperation
                                    elvisExpression
                                      infixFunctionCall
                                        rangeExpression
                                          additiveExpression
                                            multiplicativeExpression
                                              asExpression
                                                prefixUnaryExpression
                                                  postfixUnaryExpression
                                                    primaryExpression
                                                      literalConstant
                                                        IntegerLiteral("128")
                                                    postfixUnarySuffix
                                                      navigationSuffix
                                                        memberAccessOperator
                                                          DOT(".")
                                                        simpleIdentifier
                                                          Identifier("toByte")
                                                    postfixUnarySuffix
                                                      callSuffix
                                                        valueArguments
                                                          LPAREN("(")
                                                          RPAREN(")")
                    COMMA(",")
                    valueArgument
                      expression
                        disjunction
                          conjunction
                            equality
                              comparison
                                genericCallLikeComparison
                                  infixOperation
                                    elvisExpression
                                      infixFunctionCall
                                        rangeExpression
                                          additiveExpression
                                            multiplicativeExpression
                                              asExpression
                                                prefixUnaryExpression
                                                  postfixUnaryExpression
                                                    primaryExpression
                                                      literalConstant
                                                        IntegerLiteral("128")
                    RPAREN(")")
        CLASS("class")
        simpleIdentifier
          Identifier("MyClass")
    semis
      NL("\n")
      NL("\n")
  EOF("<EOF>")
