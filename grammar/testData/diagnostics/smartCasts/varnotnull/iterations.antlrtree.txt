File: iterations.kt - d42db7bb7557a63b8d8473b5e4e98c33
  packageHeader
  importList
  topLevelObject
    declaration
      classDeclaration
        modifiers
          modifier
            classModifier
              DATA("data")
        CLASS("class")
        simpleIdentifier
          Identifier("SomeObject")
        primaryConstructor
          classParameters
            LPAREN("(")
            classParameter
              VAL("val")
              simpleIdentifier
                Identifier("n")
              COLON(":")
              type
                nullableType
                  typeReference
                    userType
                      simpleUserType
                        simpleIdentifier
                          Identifier("SomeObject")
                  quest
                    QUEST_NO_WS("?")
            RPAREN(")")
        classBody
          LCURL("{")
          NL("\n")
          classMemberDeclarations
            classMemberDeclaration
              declaration
                functionDeclaration
                  FUN("fun")
                  simpleIdentifier
                    Identifier("doSomething")
                  functionValueParameters
                    LPAREN("(")
                    RPAREN(")")
                  functionBody
                    block
                      LCURL("{")
                      statements
                      RCURL("}")
            semis
              NL("\n")
            classMemberDeclaration
              declaration
                functionDeclaration
                  FUN("fun")
                  simpleIdentifier
                    Identifier("next")
                  functionValueParameters
                    LPAREN("(")
                    RPAREN(")")
                  COLON(":")
                  type
                    nullableType
                      typeReference
                        userType
                          simpleUserType
                            simpleIdentifier
                              Identifier("SomeObject")
                      quest
                        QUEST_WS("? ")
                  functionBody
                    ASSIGNMENT("=")
                    expression
                      disjunction
                        conjunction
                          equality
                            comparison
                              genericCallLikeComparison
                                infixOperation
                                  elvisExpression
                                    infixFunctionCall
                                      rangeExpression
                                        additiveExpression
                                          multiplicativeExpression
                                            asExpression
                                              prefixUnaryExpression
                                                postfixUnaryExpression
                                                  primaryExpression
                                                    simpleIdentifier
                                                      Identifier("n")
            semis
              NL("\n")
          RCURL("}")
    semis
      NL("\n")
      NL("\n")
      NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        simpleIdentifier
          Identifier("list")
        functionValueParameters
          LPAREN("(")
          functionValueParameter
            parameter
              simpleIdentifier
                Identifier("start")
              COLON(":")
              type
                typeReference
                  userType
                    simpleUserType
                      simpleIdentifier
                        Identifier("SomeObject")
          RPAREN(")")
        functionBody
          block
            LCURL("{")
            NL("\n")
            statements
              statement
                declaration
                  propertyDeclaration
                    VAR("var")
                    variableDeclaration
                      simpleIdentifier
                        Identifier("e")
                      COLON(":")
                      type
                        nullableType
                          typeReference
                            userType
                              simpleUserType
                                simpleIdentifier
                                  Identifier("SomeObject")
                          quest
                            QUEST_WS("? ")
                    ASSIGNMENT("=")
                    expression
                      disjunction
                        conjunction
                          equality
                            comparison
                              genericCallLikeComparison
                                infixOperation
                                  elvisExpression
                                    infixFunctionCall
                                      rangeExpression
                                        additiveExpression
                                          multiplicativeExpression
                                            asExpression
                                              prefixUnaryExpression
                                                postfixUnaryExpression
                                                  primaryExpression
                                                    simpleIdentifier
                                                      Identifier("start")
              semis
                NL("\n")
              statement
                loopStatement
                  whileStatement
                    WHILE("while")
                    LPAREN("(")
                    expression
                      disjunction
                        conjunction
                          equality
                            comparison
                              genericCallLikeComparison
                                infixOperation
                                  elvisExpression
                                    infixFunctionCall
                                      rangeExpression
                                        additiveExpression
                                          multiplicativeExpression
                                            asExpression
                                              prefixUnaryExpression
                                                postfixUnaryExpression
                                                  primaryExpression
                                                    simpleIdentifier
                                                      Identifier("e")
                            equalityOperator
                              EXCL_EQ("!=")
                            comparison
                              genericCallLikeComparison
                                infixOperation
                                  elvisExpression
                                    infixFunctionCall
                                      rangeExpression
                                        additiveExpression
                                          multiplicativeExpression
                                            asExpression
                                              prefixUnaryExpression
                                                postfixUnaryExpression
                                                  primaryExpression
                                                    literalConstant
                                                      NullLiteral("null")
                    RPAREN(")")
                    controlStructureBody
                      block
                        LCURL("{")
                        NL("\n")
                        NL("\n")
                        statements
                          statement
                            expression
                              disjunction
                                conjunction
                                  equality
                                    comparison
                                      genericCallLikeComparison
                                        infixOperation
                                          elvisExpression
                                            infixFunctionCall
                                              rangeExpression
                                                additiveExpression
                                                  multiplicativeExpression
                                                    asExpression
                                                      prefixUnaryExpression
                                                        postfixUnaryExpression
                                                          primaryExpression
                                                            simpleIdentifier
                                                              Identifier("e")
                                                          postfixUnarySuffix
                                                            navigationSuffix
                                                              memberAccessOperator
                                                                DOT(".")
                                                              simpleIdentifier
                                                                Identifier("doSomething")
                                                          postfixUnarySuffix
                                                            callSuffix
                                                              valueArguments
                                                                LPAREN("(")
                                                                RPAREN(")")
                          semis
                            NL("\n")
                          statement
                            assignment
                              directlyAssignableExpression
                                simpleIdentifier
                                  Identifier("e")
                              ASSIGNMENT("=")
                              expression
                                disjunction
                                  conjunction
                                    equality
                                      comparison
                                        genericCallLikeComparison
                                          infixOperation
                                            elvisExpression
                                              infixFunctionCall
                                                rangeExpression
                                                  additiveExpression
                                                    multiplicativeExpression
                                                      asExpression
                                                        prefixUnaryExpression
                                                          postfixUnaryExpression
                                                            primaryExpression
                                                              simpleIdentifier
                                                                Identifier("e")
                                                            postfixUnarySuffix
                                                              navigationSuffix
                                                                memberAccessOperator
                                                                  DOT(".")
                                                                simpleIdentifier
                                                                  Identifier("next")
                                                            postfixUnarySuffix
                                                              callSuffix
                                                                valueArguments
                                                                  LPAREN("(")
                                                                  RPAREN(")")
                          semis
                            NL("\n")
                        RCURL("}")
              semis
                NL("\n")
            RCURL("}")
  EOF("<EOF>")
