File: setNullInTry.kt - 3bebdaa6d7f0d32557ea371a5f481978
  NL("\n")
  NL("\n")
  NL("\n")
  packageHeader
  importList
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        simpleIdentifier
          Identifier("foo")
        functionValueParameters
          LPAREN("(")
          RPAREN(")")
        functionBody
          block
            LCURL("{")
            NL("\n")
            statements
              statement
                declaration
                  propertyDeclaration
                    VAR("var")
                    variableDeclaration
                      simpleIdentifier
                        Identifier("s")
                      COLON(":")
                      type
                        nullableType
                          typeReference
                            userType
                              simpleUserType
                                simpleIdentifier
                                  Identifier("String")
                          quest
                            QUEST_NO_WS("?")
              semis
                NL("\n")
              statement
                assignment
                  directlyAssignableExpression
                    simpleIdentifier
                      Identifier("s")
                  ASSIGNMENT("=")
                  expression
                    disjunction
                      conjunction
                        equality
                          comparison
                            genericCallLikeComparison
                              infixOperation
                                elvisExpression
                                  infixFunctionCall
                                    rangeExpression
                                      additiveExpression
                                        multiplicativeExpression
                                          asExpression
                                            prefixUnaryExpression
                                              postfixUnaryExpression
                                                primaryExpression
                                                  stringLiteral
                                                    lineStringLiteral
                                                      QUOTE_OPEN(""")
                                                      lineStringContent
                                                        LineStrText("Test")
                                                      QUOTE_CLOSE(""")
              semis
                NL("\n")
              statement
                expression
                  disjunction
                    conjunction
                      equality
                        comparison
                          genericCallLikeComparison
                            infixOperation
                              elvisExpression
                                infixFunctionCall
                                  rangeExpression
                                    additiveExpression
                                      multiplicativeExpression
                                        asExpression
                                          prefixUnaryExpression
                                            postfixUnaryExpression
                                              primaryExpression
                                                tryExpression
                                                  TRY("try")
                                                  block
                                                    LCURL("{")
                                                    NL("\n")
                                                    statements
                                                      statement
                                                        assignment
                                                          directlyAssignableExpression
                                                            simpleIdentifier
                                                              Identifier("s")
                                                          ASSIGNMENT("=")
                                                          expression
                                                            disjunction
                                                              conjunction
                                                                equality
                                                                  comparison
                                                                    genericCallLikeComparison
                                                                      infixOperation
                                                                        elvisExpression
                                                                          infixFunctionCall
                                                                            rangeExpression
                                                                              additiveExpression
                                                                                multiplicativeExpression
                                                                                  asExpression
                                                                                    prefixUnaryExpression
                                                                                      postfixUnaryExpression
                                                                                        primaryExpression
                                                                                          literalConstant
                                                                                            NullLiteral("null")
                                                      semis
                                                        NL("\n")
                                                    RCURL("}")
                                                  catchBlock
                                                    CATCH("catch")
                                                    LPAREN("(")
                                                    simpleIdentifier
                                                      Identifier("ex")
                                                    COLON(":")
                                                    type
                                                      typeReference
                                                        userType
                                                          simpleUserType
                                                            simpleIdentifier
                                                              Identifier("Exception")
                                                    RPAREN(")")
                                                    block
                                                      LCURL("{")
                                                      statements
                                                      RCURL("}")
              semis
                NL("\n")
              statement
                expression
                  disjunction
                    conjunction
                      equality
                        comparison
                          genericCallLikeComparison
                            infixOperation
                              elvisExpression
                                infixFunctionCall
                                  rangeExpression
                                    additiveExpression
                                      multiplicativeExpression
                                        asExpression
                                          prefixUnaryExpression
                                            postfixUnaryExpression
                                              primaryExpression
                                                simpleIdentifier
                                                  Identifier("s")
                                              postfixUnarySuffix
                                                navigationSuffix
                                                  memberAccessOperator
                                                    DOT(".")
                                                  simpleIdentifier
                                                    Identifier("hashCode")
                                              postfixUnarySuffix
                                                callSuffix
                                                  valueArguments
                                                    LPAREN("(")
                                                    RPAREN(")")
              semis
                NL("\n")
            RCURL("}")
  EOF("<EOF>")
