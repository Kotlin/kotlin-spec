File: noBackingField.kt - bb63054fabd22ee1818c662e2b784318 (WITH_ERRORS)
  NL("\n")
  NL("\n")
  packageHeader
  importList
  topLevelObject
    declaration
      classDeclaration
        INTERFACE("interface")
        simpleIdentifier
          Identifier("A")
        classBody
          LCURL("{")
          NL("\n")
          classMemberDeclarations
            classMemberDeclaration
              declaration
                functionDeclaration
                  FUN("fun")
                  simpleIdentifier
                    Identifier("a")
                  functionValueParameters
                    LPAREN("(")
                    RPAREN(")")
                  COLON(":")
                  type
                    typeReference
                      userType
                        simpleUserType
                          simpleIdentifier
                            Identifier("Int")
            semis
              NL("\n")
          RCURL("}")
    semis
      NL("\n")
  topLevelObject
    declaration
      classDeclaration
        INTERFACE("interface")
        simpleIdentifier
          Identifier("B")
        classBody
          LCURL("{")
          NL("\n")
          classMemberDeclarations
            classMemberDeclaration
              declaration
                functionDeclaration
                  FUN("fun")
                  simpleIdentifier
                    Identifier("b")
                  functionValueParameters
                    LPAREN("(")
                    RPAREN(")")
                  COLON(":")
                  type
                    typeReference
                      userType
                        simpleUserType
                          simpleIdentifier
                            Identifier("Int")
            semis
              NL("\n")
          RCURL("}")
    semis
      NL("\n")
      NL("\n")
  Identifier("context")
  LPAREN("(")
  Identifier("A")
  RPAREN(")")
  NL("\n")
  topLevelObject
    declaration
      propertyDeclaration
        VAL("val")
        variableDeclaration
          simpleIdentifier
            Identifier("a")
        ASSIGNMENT("=")
        expression
          disjunction
            conjunction
              equality
                comparison
                  genericCallLikeComparison
                    infixOperation
                      elvisExpression
                        infixFunctionCall
                          rangeExpression
                            additiveExpression
                              multiplicativeExpression
                                asExpression
                                  prefixUnaryExpression
                                    postfixUnaryExpression
                                      primaryExpression
                                        literalConstant
                                          IntegerLiteral("1")
    semis
      NL("\n")
      NL("\n")
  Identifier("context")
  LPAREN("(")
  Identifier("A")
  COMMA(",")
  Identifier("B")
  RPAREN(")")
  NL("\n")
  topLevelObject
    declaration
      propertyDeclaration
        VAR("var")
        variableDeclaration
          simpleIdentifier
            Identifier("b")
        ASSIGNMENT("=")
        expression
          disjunction
            conjunction
              equality
                comparison
                  genericCallLikeComparison
                    infixOperation
                      elvisExpression
                        infixFunctionCall
                          rangeExpression
                            additiveExpression
                              multiplicativeExpression
                                asExpression
                                  prefixUnaryExpression
                                    postfixUnaryExpression
                                      primaryExpression
                                        literalConstant
                                          IntegerLiteral("2")
    semis
      NL("\n")
      NL("\n")
  Identifier("context")
  LPAREN("(")
  Identifier("A")
  COMMA(",")
  Identifier("B")
  RPAREN(")")
  NL("\n")
  topLevelObject
    declaration
      propertyDeclaration
        VAL("val")
        variableDeclaration
          simpleIdentifier
            Identifier("c")
        getter
          GET("get")
          LPAREN("(")
          RPAREN(")")
          functionBody
            ASSIGNMENT("=")
            expression
              disjunction
                conjunction
                  equality
                    comparison
                      genericCallLikeComparison
                        infixOperation
                          elvisExpression
                            infixFunctionCall
                              rangeExpression
                                additiveExpression
                                  multiplicativeExpression
                                    asExpression
                                      prefixUnaryExpression
                                        postfixUnaryExpression
                                          primaryExpression
                                            simpleIdentifier
                                              Identifier("a")
                                          postfixUnarySuffix
                                            callSuffix
                                              valueArguments
                                                LPAREN("(")
                                                RPAREN(")")
                                  additiveOperator
                                    ADD("+")
                                  multiplicativeExpression
                                    asExpression
                                      prefixUnaryExpression
                                        postfixUnaryExpression
                                          primaryExpression
                                            simpleIdentifier
                                              Identifier("b")
                                          postfixUnarySuffix
                                            callSuffix
                                              valueArguments
                                                LPAREN("(")
                                                RPAREN(")")
  EOF("<EOF>")
