File: functionalType.kt - d2a796c88c8e9c614ee43d4b1454fc3b (WITH_ERRORS)
  NL("\n")
  NL("\n")
  NL("\n")
  packageHeader
  importList
  topLevelObject
    declaration
      classDeclaration
        CLASS("class")
        simpleIdentifier
          Identifier("Param")
    semis
      NL("\n")
  topLevelObject
    declaration
      classDeclaration
        CLASS("class")
        simpleIdentifier
          Identifier("C")
        classBody
          LCURL("{")
          NL("\n")
          classMemberDeclarations
            classMemberDeclaration
              declaration
                propertyDeclaration
                  VAL("val")
                  variableDeclaration
                    simpleIdentifier
                      Identifier("c")
                  ASSIGNMENT("=")
                  expression
                    disjunction
                      conjunction
                        equality
                          comparison
                            genericCallLikeComparison
                              infixOperation
                                elvisExpression
                                  infixFunctionCall
                                    rangeExpression
                                      additiveExpression
                                        multiplicativeExpression
                                          asExpression
                                            prefixUnaryExpression
                                              postfixUnaryExpression
                                                primaryExpression
                                                  literalConstant
                                                    IntegerLiteral("42")
                  NL("\n")
          RCURL("}")
    semis
      NL("\n")
  topLevelObject
    declaration
      classDeclaration
        CLASS("class")
        simpleIdentifier
          Identifier("R")
        classBody
          LCURL("{")
          NL("\n")
          classMemberDeclarations
            classMemberDeclaration
              declaration
                propertyDeclaration
                  VAL("val")
                  variableDeclaration
                    simpleIdentifier
                      Identifier("r")
                  ASSIGNMENT("=")
                  expression
                    disjunction
                      conjunction
                        equality
                          comparison
                            genericCallLikeComparison
                              infixOperation
                                elvisExpression
                                  infixFunctionCall
                                    rangeExpression
                                      additiveExpression
                                        multiplicativeExpression
                                          asExpression
                                            prefixUnaryExpression
                                              postfixUnaryExpression
                                                primaryExpression
                                                  literalConstant
                                                    IntegerLiteral("42")
                  NL("\n")
          RCURL("}")
    semis
      NL("\n")
      NL("\n")
  Identifier("context")
  LPAREN("(")
  Identifier("C")
  RPAREN(")")
  NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        receiverType
          typeReference
            userType
              simpleUserType
                simpleIdentifier
                  Identifier("R")
              DOT(".")
              simpleUserType
                simpleIdentifier
                  Identifier("f1")
        LPAREN("(")
        Identifier("g")
        COLON(":")
        Identifier("context")
        LPAREN("(")
        Identifier("C")
        RPAREN(")")
        Identifier("R")
        DOT(".")
        LPAREN("(")
        Identifier("Param")
        RPAREN(")")
        ARROW("->")
        Identifier("Unit")
        RPAREN(")")
        LCURL("{")
    semis
      NL("\n")
  Identifier("g")
  LPAREN("(")
  Identifier("this")
  topLevelObject
    declaration
  topLevelObject
    declaration
      AT_NO_WS("@")
      Identifier("C")
      COMMA(",")
      Identifier("this")
  topLevelObject
    declaration
  topLevelObject
    declaration
      AT_NO_WS("@")
      Identifier("R")
      COMMA(",")
      Identifier("Param")
      LPAREN("(")
      RPAREN(")")
      RPAREN(")")
    semis
      NL("\n")
  RCURL("}")
  NL("\n")
  NL("\n")
  Identifier("context")
  LPAREN("(")
  Identifier("C")
  RPAREN(")")
  NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        simpleIdentifier
          Identifier("f2")
        functionValueParameters
          LPAREN("(")
          functionValueParameter
            parameter
              simpleIdentifier
                Identifier("g")
              COLON(":")
              type
                typeReference
                  userType
                    simpleUserType
                      simpleIdentifier
                        Identifier("context")
          LPAREN("(")
          Identifier("C")
          RPAREN(")")
          LPAREN("(")
          Identifier("Param")
          RPAREN(")")
          ARROW("->")
          Identifier("Unit")
          RPAREN(")")
        functionBody
          block
            LCURL("{")
            NL("\n")
            statements
              statement
                expression
                  disjunction
                    conjunction
                      equality
                        comparison
                          genericCallLikeComparison
                            infixOperation
                              elvisExpression
                                infixFunctionCall
                                  rangeExpression
                                    additiveExpression
                                      multiplicativeExpression
                                        asExpression
                                          prefixUnaryExpression
                                            postfixUnaryExpression
                                              primaryExpression
                                                simpleIdentifier
                                                  Identifier("g")
                                              postfixUnarySuffix
                                                callSuffix
                                                  valueArguments
                                                    LPAREN("(")
                                                    valueArgument
                                                      expression
                                                        disjunction
                                                          conjunction
                                                            equality
                                                              comparison
                                                                genericCallLikeComparison
                                                                  infixOperation
                                                                    elvisExpression
                                                                      infixFunctionCall
                                                                        rangeExpression
                                                                          additiveExpression
                                                                            multiplicativeExpression
                                                                              asExpression
                                                                                prefixUnaryExpression
                                                                                  unaryPrefix
                                                                                    label
                                                                                      simpleIdentifier
                                                                                        Identifier("this")
                                                                                      AT_NO_WS("@")
                                                                                  postfixUnaryExpression
                                                                                    primaryExpression
                                                                                      simpleIdentifier
                                                                                        Identifier("C")
                                                    COMMA(",")
                                                    valueArgument
                                                      expression
                                                        disjunction
                                                          conjunction
                                                            equality
                                                              comparison
                                                                genericCallLikeComparison
                                                                  infixOperation
                                                                    elvisExpression
                                                                      infixFunctionCall
                                                                        rangeExpression
                                                                          additiveExpression
                                                                            multiplicativeExpression
                                                                              asExpression
                                                                                prefixUnaryExpression
                                                                                  postfixUnaryExpression
                                                                                    primaryExpression
                                                                                      simpleIdentifier
                                                                                        Identifier("Param")
                                                                                    postfixUnarySuffix
                                                                                      callSuffix
                                                                                        valueArguments
                                                                                          LPAREN("(")
                                                                                          RPAREN(")")
                                                    RPAREN(")")
              semis
                NL("\n")
            RCURL("}")
    semis
      NL("\n")
      NL("\n")
  Identifier("context")
  LPAREN("(")
  Identifier("C")
  RPAREN(")")
  NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        receiverType
          typeReference
            userType
              simpleUserType
                simpleIdentifier
                  Identifier("R")
              DOT(".")
              simpleUserType
                simpleIdentifier
                  Identifier("f3")
        LPAREN("(")
        Identifier("g")
        COLON(":")
        Identifier("context")
        LPAREN("(")
        Identifier("C")
        RPAREN(")")
        Identifier("R")
        DOT(".")
        LPAREN("(")
        RPAREN(")")
        ARROW("->")
        Identifier("Unit")
        RPAREN(")")
        LCURL("{")
    semis
      NL("\n")
  Identifier("g")
  LPAREN("(")
  Identifier("this")
  topLevelObject
    declaration
  topLevelObject
    declaration
      AT_NO_WS("@")
      Identifier("C")
      COMMA(",")
      Identifier("this")
  topLevelObject
    declaration
  topLevelObject
    declaration
      AT_NO_WS("@")
      Identifier("R")
      RPAREN(")")
    semis
      NL("\n")
  RCURL("}")
  NL("\n")
  NL("\n")
  Identifier("context")
  LPAREN("(")
  Identifier("C")
  RPAREN(")")
  NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        simpleIdentifier
          Identifier("f4")
        functionValueParameters
          LPAREN("(")
          functionValueParameter
            parameter
              simpleIdentifier
                Identifier("g")
              COLON(":")
              type
                typeReference
                  userType
                    simpleUserType
                      simpleIdentifier
                        Identifier("context")
          LPAREN("(")
          Identifier("C")
          RPAREN(")")
          LPAREN("(")
          RPAREN(")")
          ARROW("->")
          Identifier("Unit")
          RPAREN(")")
        functionBody
          block
            LCURL("{")
            NL("\n")
            statements
              statement
                expression
                  disjunction
                    conjunction
                      equality
                        comparison
                          genericCallLikeComparison
                            infixOperation
                              elvisExpression
                                infixFunctionCall
                                  rangeExpression
                                    additiveExpression
                                      multiplicativeExpression
                                        asExpression
                                          prefixUnaryExpression
                                            postfixUnaryExpression
                                              primaryExpression
                                                simpleIdentifier
                                                  Identifier("g")
                                              postfixUnarySuffix
                                                callSuffix
                                                  valueArguments
                                                    LPAREN("(")
                                                    valueArgument
                                                      expression
                                                        disjunction
                                                          conjunction
                                                            equality
                                                              comparison
                                                                genericCallLikeComparison
                                                                  infixOperation
                                                                    elvisExpression
                                                                      infixFunctionCall
                                                                        rangeExpression
                                                                          additiveExpression
                                                                            multiplicativeExpression
                                                                              asExpression
                                                                                prefixUnaryExpression
                                                                                  unaryPrefix
                                                                                    label
                                                                                      simpleIdentifier
                                                                                        Identifier("this")
                                                                                      AT_NO_WS("@")
                                                                                  postfixUnaryExpression
                                                                                    primaryExpression
                                                                                      simpleIdentifier
                                                                                        Identifier("C")
                                                    RPAREN(")")
              semis
                NL("\n")
            RCURL("}")
    semis
      NL("\n")
      NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        simpleIdentifier
          Identifier("test")
        functionValueParameters
          LPAREN("(")
          RPAREN(")")
  LCURL("{")
  NL("\n")
  topLevelObject
    declaration
      propertyDeclaration
        VAL("val")
        variableDeclaration
          simpleIdentifier
            Identifier("lf1")
          COLON(":")
          type
            typeReference
              userType
                simpleUserType
                  simpleIdentifier
                    Identifier("context")
        LPAREN("(")
        Identifier("C")
        RPAREN(")")
        Identifier("R")
        DOT(".")
        LPAREN("(")
        Identifier("Param")
        RPAREN(")")
        ARROW("->")
        Identifier("Unit")
        ASSIGNMENT("=")
        LCURL("{")
        Identifier("_")
        ARROW("->")
    semis
      NL("\n")
  Identifier("r")
  NL("\n")
  Identifier("c")
  NL("\n")
  RCURL("}")
  NL("\n")
  topLevelObject
    declaration
      propertyDeclaration
        VAL("val")
        variableDeclaration
          simpleIdentifier
            Identifier("lf2")
          COLON(":")
          type
            typeReference
              userType
                simpleUserType
                  simpleIdentifier
                    Identifier("context")
        LPAREN("(")
        Identifier("C")
        RPAREN(")")
        LPAREN("(")
        Identifier("Param")
        RPAREN(")")
        ARROW("->")
        Identifier("Unit")
        ASSIGNMENT("=")
        LCURL("{")
        Identifier("_")
        ARROW("->")
    semis
      NL("\n")
  Identifier("c")
  NL("\n")
  RCURL("}")
  NL("\n")
  topLevelObject
    declaration
      propertyDeclaration
        VAL("val")
        variableDeclaration
          simpleIdentifier
            Identifier("lf3")
          COLON(":")
          type
            typeReference
              userType
                simpleUserType
                  simpleIdentifier
                    Identifier("context")
        LPAREN("(")
        Identifier("C")
        RPAREN(")")
        Identifier("R")
        DOT(".")
        LPAREN("(")
        RPAREN(")")
        ARROW("->")
        Identifier("Unit")
        ASSIGNMENT("=")
        LCURL("{")
    semis
      NL("\n")
  Identifier("r")
  NL("\n")
  Identifier("c")
  NL("\n")
  RCURL("}")
  NL("\n")
  topLevelObject
    declaration
      propertyDeclaration
        VAL("val")
        variableDeclaration
          simpleIdentifier
            Identifier("lf4")
          COLON(":")
          type
            typeReference
              userType
                simpleUserType
                  simpleIdentifier
                    Identifier("context")
        LPAREN("(")
        Identifier("C")
        RPAREN(")")
        LPAREN("(")
        RPAREN(")")
        ARROW("->")
        Identifier("Unit")
        ASSIGNMENT("=")
        LCURL("{")
    semis
      NL("\n")
  Identifier("c")
  NL("\n")
  RCURL("}")
  NL("\n")
  NL("\n")
  Identifier("with")
  LPAREN("(")
  Identifier("C")
  LPAREN("(")
  RPAREN(")")
  RPAREN(")")
  LCURL("{")
  NL("\n")
  Identifier("with")
  LPAREN("(")
  Identifier("R")
  LPAREN("(")
  RPAREN(")")
  RPAREN(")")
  LCURL("{")
  NL("\n")
  Identifier("f1")
  LPAREN("(")
  Identifier("lf1")
  RPAREN(")")
  NL("\n")
  Identifier("f1")
  LCURL("{")
  Identifier("_")
  ARROW("->")
  NL("\n")
  Identifier("r")
  NL("\n")
  Identifier("c")
  NL("\n")
  RCURL("}")
  NL("\n")
  NL("\n")
  Identifier("f2")
  LPAREN("(")
  Identifier("lf2")
  RPAREN(")")
  NL("\n")
  Identifier("f2")
  LCURL("{")
  Identifier("_")
  ARROW("->")
  NL("\n")
  Identifier("c")
  NL("\n")
  RCURL("}")
  NL("\n")
  NL("\n")
  Identifier("f3")
  LPAREN("(")
  Identifier("lf3")
  RPAREN(")")
  NL("\n")
  Identifier("f3")
  LCURL("{")
  NL("\n")
  Identifier("r")
  NL("\n")
  Identifier("c")
  NL("\n")
  RCURL("}")
  NL("\n")
  NL("\n")
  Identifier("f4")
  LPAREN("(")
  Identifier("lf4")
  RPAREN(")")
  NL("\n")
  Identifier("f4")
  LCURL("{")
  NL("\n")
  Identifier("c")
  NL("\n")
  RCURL("}")
  NL("\n")
  RCURL("}")
  NL("\n")
  RCURL("}")
  NL("\n")
  RCURL("}")
  EOF("<EOF>")
