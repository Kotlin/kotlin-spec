File: misplacedConstraints.kt - 791e7af247e8a3b9efd3c8ff3d11cba8
  NL("\n")
  packageHeader
  importList
  topLevelObject
    declaration
      classDeclaration
        CLASS("class")
        simpleIdentifier
          Identifier("Foo")
        typeParameters
          LANGLE("<")
          typeParameter
            simpleIdentifier
              Identifier("T")
            COLON(":")
            type
              typeReference
                userType
                  simpleUserType
                    simpleIdentifier
                      Identifier("Cloneable")
          RANGLE(">")
        typeConstraints
          WHERE("where")
          typeConstraint
            simpleIdentifier
              Identifier("T")
            COLON(":")
            type
              typeReference
                userType
                  simpleUserType
                    simpleIdentifier
                      Identifier("Comparable")
                    typeArguments
                      LANGLE("<")
                      typeProjection
                        type
                          typeReference
                            userType
                              simpleUserType
                                simpleIdentifier
                                  Identifier("T")
                      RANGLE(">")
        classBody
          LCURL("{")
          NL("\n")
          classMemberDeclarations
            classMemberDeclaration
              declaration
                functionDeclaration
                  FUN("fun")
                  typeParameters
                    LANGLE("<")
                    typeParameter
                      simpleIdentifier
                        Identifier("U")
                      COLON(":")
                      type
                        typeReference
                          userType
                            simpleUserType
                              simpleIdentifier
                                Identifier("Cloneable")
                    RANGLE(">")
                  simpleIdentifier
                    Identifier("foo")
                  functionValueParameters
                    LPAREN("(")
                    functionValueParameter
                      parameter
                        simpleIdentifier
                          Identifier("u")
                        COLON(":")
                        type
                          typeReference
                            userType
                              simpleUserType
                                simpleIdentifier
                                  Identifier("U")
                    RPAREN(")")
                  COLON(":")
                  type
                    typeReference
                      userType
                        simpleUserType
                          simpleIdentifier
                            Identifier("U")
                  typeConstraints
                    WHERE("where")
                    typeConstraint
                      simpleIdentifier
                        Identifier("U")
                      COLON(":")
                      type
                        typeReference
                          userType
                            simpleUserType
                              simpleIdentifier
                                Identifier("Comparable")
                              typeArguments
                                LANGLE("<")
                                typeProjection
                                  type
                                    typeReference
                                      userType
                                        simpleUserType
                                          simpleIdentifier
                                            Identifier("U")
                                RANGLE(">")
                  functionBody
                    block
                      LCURL("{")
                      NL("\n")
                      statements
                        statement
                          declaration
                            functionDeclaration
                              FUN("fun")
                              typeParameters
                                LANGLE("<")
                                typeParameter
                                  simpleIdentifier
                                    Identifier("T")
                                  COLON(":")
                                  type
                                    typeReference
                                      userType
                                        simpleUserType
                                          simpleIdentifier
                                            Identifier("Any")
                                RANGLE(">")
                              simpleIdentifier
                                Identifier("bar")
                              functionValueParameters
                                LPAREN("(")
                                RPAREN(")")
                              typeConstraints
                                WHERE("where")
                                typeConstraint
                                  simpleIdentifier
                                    Identifier("T")
                                  COLON(":")
                                  type
                                    typeReference
                                      userType
                                        simpleUserType
                                          simpleIdentifier
                                            Identifier("U")
                              functionBody
                                block
                                  LCURL("{")
                                  statements
                                  RCURL("}")
                        semis
                          NL("\n")
                        statement
                          expression
                            disjunction
                              conjunction
                                equality
                                  comparison
                                    genericCallLikeComparison
                                      infixOperation
                                        elvisExpression
                                          infixFunctionCall
                                            rangeExpression
                                              additiveExpression
                                                multiplicativeExpression
                                                  asExpression
                                                    prefixUnaryExpression
                                                      postfixUnaryExpression
                                                        primaryExpression
                                                          jumpExpression
                                                            RETURN("return")
                                                            expression
                                                              disjunction
                                                                conjunction
                                                                  equality
                                                                    comparison
                                                                      genericCallLikeComparison
                                                                        infixOperation
                                                                          elvisExpression
                                                                            infixFunctionCall
                                                                              rangeExpression
                                                                                additiveExpression
                                                                                  multiplicativeExpression
                                                                                    asExpression
                                                                                      prefixUnaryExpression
                                                                                        postfixUnaryExpression
                                                                                          primaryExpression
                                                                                            simpleIdentifier
                                                                                              Identifier("u")
                        semis
                          NL("\n")
                      RCURL("}")
            semis
              NL("\n")
              NL("\n")
            classMemberDeclaration
              declaration
                propertyDeclaration
                  VAL("val")
                  typeParameters
                    LANGLE("<")
                    typeParameter
                      simpleIdentifier
                        Identifier("U")
                      COLON(":")
                      type
                        typeReference
                          userType
                            simpleUserType
                              simpleIdentifier
                                Identifier("Cloneable")
                    RANGLE(">")
                  receiverType
                    typeReference
                      userType
                        simpleUserType
                          simpleIdentifier
                            Identifier("U")
                  DOT(".")
                  variableDeclaration
                    simpleIdentifier
                      Identifier("foo")
                    COLON(":")
                    type
                      nullableType
                        typeReference
                          userType
                            simpleUserType
                              simpleIdentifier
                                Identifier("U")
                        quest
                          QUEST_WS("? ")
                  typeConstraints
                    WHERE("where")
                    typeConstraint
                      simpleIdentifier
                        Identifier("U")
                      COLON(":")
                      type
                        typeReference
                          userType
                            simpleUserType
                              simpleIdentifier
                                Identifier("Comparable")
                              typeArguments
                                LANGLE("<")
                                typeProjection
                                  type
                                    typeReference
                                      userType
                                        simpleUserType
                                          simpleIdentifier
                                            Identifier("U")
                                RANGLE(">")
                  NL("\n")
                  getter
                    GET("get")
                    LPAREN("(")
                    RPAREN(")")
                    functionBody
                      block
                        LCURL("{")
                        statements
                          statement
                            expression
                              disjunction
                                conjunction
                                  equality
                                    comparison
                                      genericCallLikeComparison
                                        infixOperation
                                          elvisExpression
                                            infixFunctionCall
                                              rangeExpression
                                                additiveExpression
                                                  multiplicativeExpression
                                                    asExpression
                                                      prefixUnaryExpression
                                                        postfixUnaryExpression
                                                          primaryExpression
                                                            jumpExpression
                                                              RETURN("return")
                                                              expression
                                                                disjunction
                                                                  conjunction
                                                                    equality
                                                                      comparison
                                                                        genericCallLikeComparison
                                                                          infixOperation
                                                                            elvisExpression
                                                                              infixFunctionCall
                                                                                rangeExpression
                                                                                  additiveExpression
                                                                                    multiplicativeExpression
                                                                                      asExpression
                                                                                        prefixUnaryExpression
                                                                                          postfixUnaryExpression
                                                                                            primaryExpression
                                                                                              literalConstant
                                                                                                NullLiteral("null")
                        RCURL("}")
            semis
              NL("\n")
          RCURL("}")
    semis
      NL("\n")
      NL("\n")
  topLevelObject
    declaration
      classDeclaration
        CLASS("class")
        simpleIdentifier
          Identifier("Bar")
        typeParameters
          LANGLE("<")
          typeParameter
            simpleIdentifier
              Identifier("T")
            COLON(":")
            type
              typeReference
                userType
                  simpleUserType
                    simpleIdentifier
                      Identifier("Cloneable")
          COMMA(",")
          typeParameter
            simpleIdentifier
              Identifier("U")
          RANGLE(">")
        typeConstraints
          WHERE("where")
          typeConstraint
            simpleIdentifier
              Identifier("U")
            COLON(":")
            type
              typeReference
                userType
                  simpleUserType
                    simpleIdentifier
                      Identifier("Comparable")
                    typeArguments
                      LANGLE("<")
                      typeProjection
                        type
                          typeReference
                            userType
                              simpleUserType
                                simpleIdentifier
                                  Identifier("T")
                      RANGLE(">")
        classBody
          LCURL("{")
          NL("\n")
          NL("\n")
          classMemberDeclarations
          RCURL("}")
  EOF("<EOF>")
