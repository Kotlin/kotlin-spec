File: QualifiedExpressionNullability.kt - 3fe5a6cf6ad30ddf5eb667bad5119fcd (WITH_ERRORS)
  NL("\n")
  packageHeader
  importList
  topLevelObject
    declaration
      classDeclaration
        CLASS("class")
        simpleIdentifier
          Identifier("Foo")
        classBody
          LCURL("{")
          NL("\n")
          classMemberDeclarations
            classMemberDeclaration
              declaration
                functionDeclaration
                  FUN("fun")
                  simpleIdentifier
                    Identifier("foo")
                  functionValueParameters
                    LPAREN("(")
                    functionValueParameter
                      parameter
                        simpleIdentifier
                          Identifier("a")
                        COLON(":")
                        type
                          typeReference
                            userType
                              simpleUserType
                                simpleIdentifier
                                  Identifier("Foo")
                    RPAREN(")")
                  COLON(":")
                  type
                    typeReference
                      userType
                        simpleUserType
                          simpleIdentifier
                            Identifier("Foo")
                  functionBody
                    ASSIGNMENT("=")
                    expression
                      disjunction
                        conjunction
                          equality
                            comparison
                              genericCallLikeComparison
                                infixOperation
                                  elvisExpression
                                    infixFunctionCall
                                      rangeExpression
                                        additiveExpression
                                          multiplicativeExpression
                                            asExpression
                                              prefixUnaryExpression
                                                postfixUnaryExpression
                                                  primaryExpression
                                                    simpleIdentifier
                                                      Identifier("a")
            semis
              NL("\n")
            classMemberDeclaration
              declaration
                propertyDeclaration
                  VAR("var")
                  variableDeclaration
                    simpleIdentifier
                      Identifier("f")
                    COLON(":")
                    type
                      nullableType
                        typeReference
                          userType
                            simpleUserType
                              simpleIdentifier
                                Identifier("Foo")
                        quest
                          QUEST_WS("? ")
                  ASSIGNMENT("=")
                  expression
                    disjunction
                      conjunction
                        equality
                          comparison
                            genericCallLikeComparison
                              infixOperation
                                elvisExpression
                                  infixFunctionCall
                                    rangeExpression
                                      additiveExpression
                                        multiplicativeExpression
                                          asExpression
                                            prefixUnaryExpression
                                              postfixUnaryExpression
                                                primaryExpression
                                                  literalConstant
                                                    NullLiteral("null")
                  NL("\n")
          RCURL("}")
    semis
      NL("\n")
      NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        simpleIdentifier
          Identifier("main")
        functionValueParameters
          LPAREN("(")
          RPAREN(")")
  LCURL("{")
  NL("\n")
  topLevelObject
    declaration
      propertyDeclaration
        VAL("val")
        variableDeclaration
          simpleIdentifier
            Identifier("x")
          COLON(":")
          type
            nullableType
              typeReference
                userType
                  simpleUserType
                    simpleIdentifier
                      Identifier("Foo")
              quest
                QUEST_WS("? ")
        ASSIGNMENT("=")
        expression
          disjunction
            conjunction
              equality
                comparison
                  genericCallLikeComparison
                    infixOperation
                      elvisExpression
                        infixFunctionCall
                          rangeExpression
                            additiveExpression
                              multiplicativeExpression
                                asExpression
                                  prefixUnaryExpression
                                    postfixUnaryExpression
                                      primaryExpression
                                        literalConstant
                                          NullLiteral("null")
    semis
      NL("\n")
  topLevelObject
    declaration
      propertyDeclaration
        VAL("val")
        variableDeclaration
          simpleIdentifier
            Identifier("y")
          COLON(":")
          type
            nullableType
              typeReference
                userType
                  simpleUserType
                    simpleIdentifier
                      Identifier("Foo")
              quest
                QUEST_WS("? ")
        ASSIGNMENT("=")
        expression
          disjunction
            conjunction
              equality
                comparison
                  genericCallLikeComparison
                    infixOperation
                      elvisExpression
                        infixFunctionCall
                          rangeExpression
                            additiveExpression
                              multiplicativeExpression
                                asExpression
                                  prefixUnaryExpression
                                    postfixUnaryExpression
                                      primaryExpression
                                        literalConstant
                                          NullLiteral("null")
    semis
      NL("\n")
      NL("\n")
  Identifier("x")
  DOT(".")
  Identifier("foo")
  LPAREN("(")
  Identifier("y")
  RPAREN(")")
  NL("\n")
  Identifier("x")
  EXCL_NO_WS("!")
  EXCL_NO_WS("!")
  DOT(".")
  Identifier("foo")
  LPAREN("(")
  Identifier("y")
  RPAREN(")")
  NL("\n")
  Identifier("x")
  DOT(".")
  Identifier("foo")
  LPAREN("(")
  Identifier("y")
  EXCL_NO_WS("!")
  EXCL_NO_WS("!")
  RPAREN(")")
  NL("\n")
  Identifier("x")
  EXCL_NO_WS("!")
  EXCL_NO_WS("!")
  DOT(".")
  Identifier("foo")
  LPAREN("(")
  Identifier("y")
  EXCL_NO_WS("!")
  EXCL_NO_WS("!")
  RPAREN(")")
  NL("\n")
  NL("\n")
  topLevelObject
    declaration
      propertyDeclaration
        VAL("val")
        variableDeclaration
          simpleIdentifier
            Identifier("a")
          COLON(":")
          type
            nullableType
              typeReference
                userType
                  simpleUserType
                    simpleIdentifier
                      Identifier("Foo")
              quest
                QUEST_WS("? ")
        ASSIGNMENT("=")
        expression
          disjunction
            conjunction
              equality
                comparison
                  genericCallLikeComparison
                    infixOperation
                      elvisExpression
                        infixFunctionCall
                          rangeExpression
                            additiveExpression
                              multiplicativeExpression
                                asExpression
                                  prefixUnaryExpression
                                    postfixUnaryExpression
                                      primaryExpression
                                        literalConstant
                                          NullLiteral("null")
    semis
      NL("\n")
  topLevelObject
    declaration
      propertyDeclaration
        VAL("val")
        variableDeclaration
          simpleIdentifier
            Identifier("b")
          COLON(":")
          type
            nullableType
              typeReference
                userType
                  simpleUserType
                    simpleIdentifier
                      Identifier("Foo")
              quest
                QUEST_WS("? ")
        ASSIGNMENT("=")
        expression
          disjunction
            conjunction
              equality
                comparison
                  genericCallLikeComparison
                    infixOperation
                      elvisExpression
                        infixFunctionCall
                          rangeExpression
                            additiveExpression
                              multiplicativeExpression
                                asExpression
                                  prefixUnaryExpression
                                    postfixUnaryExpression
                                      primaryExpression
                                        literalConstant
                                          NullLiteral("null")
    semis
      NL("\n")
  topLevelObject
    declaration
      propertyDeclaration
        VAL("val")
        variableDeclaration
          simpleIdentifier
            Identifier("c")
          COLON(":")
          type
            nullableType
              typeReference
                userType
                  simpleUserType
                    simpleIdentifier
                      Identifier("Foo")
              quest
                QUEST_WS("? ")
        ASSIGNMENT("=")
        expression
          disjunction
            conjunction
              equality
                comparison
                  genericCallLikeComparison
                    infixOperation
                      elvisExpression
                        infixFunctionCall
                          rangeExpression
                            additiveExpression
                              multiplicativeExpression
                                asExpression
                                  prefixUnaryExpression
                                    postfixUnaryExpression
                                      primaryExpression
                                        literalConstant
                                          NullLiteral("null")
    semis
      NL("\n")
      NL("\n")
  Identifier("a")
  DOT(".")
  Identifier("foo")
  LPAREN("(")
  Identifier("b")
  DOT(".")
  Identifier("foo")
  LPAREN("(")
  Identifier("c")
  RPAREN(")")
  RPAREN(")")
  NL("\n")
  Identifier("a")
  EXCL_NO_WS("!")
  EXCL_NO_WS("!")
  DOT(".")
  Identifier("foo")
  LPAREN("(")
  Identifier("b")
  DOT(".")
  Identifier("foo")
  LPAREN("(")
  Identifier("c")
  RPAREN(")")
  RPAREN(")")
  NL("\n")
  Identifier("a")
  DOT(".")
  Identifier("foo")
  LPAREN("(")
  Identifier("b")
  EXCL_NO_WS("!")
  EXCL_NO_WS("!")
  DOT(".")
  Identifier("foo")
  LPAREN("(")
  Identifier("c")
  RPAREN(")")
  RPAREN(")")
  NL("\n")
  Identifier("a")
  EXCL_NO_WS("!")
  EXCL_NO_WS("!")
  DOT(".")
  Identifier("foo")
  LPAREN("(")
  Identifier("b")
  EXCL_NO_WS("!")
  EXCL_NO_WS("!")
  DOT(".")
  Identifier("foo")
  LPAREN("(")
  Identifier("c")
  RPAREN(")")
  RPAREN(")")
  NL("\n")
  Identifier("a")
  DOT(".")
  Identifier("foo")
  LPAREN("(")
  Identifier("b")
  DOT(".")
  Identifier("foo")
  LPAREN("(")
  Identifier("c")
  EXCL_NO_WS("!")
  EXCL_NO_WS("!")
  RPAREN(")")
  RPAREN(")")
  NL("\n")
  Identifier("a")
  EXCL_NO_WS("!")
  EXCL_NO_WS("!")
  DOT(".")
  Identifier("foo")
  LPAREN("(")
  Identifier("b")
  DOT(".")
  Identifier("foo")
  LPAREN("(")
  Identifier("c")
  EXCL_NO_WS("!")
  EXCL_NO_WS("!")
  RPAREN(")")
  RPAREN(")")
  NL("\n")
  Identifier("a")
  DOT(".")
  Identifier("foo")
  LPAREN("(")
  Identifier("b")
  EXCL_NO_WS("!")
  EXCL_NO_WS("!")
  DOT(".")
  Identifier("foo")
  LPAREN("(")
  Identifier("c")
  EXCL_NO_WS("!")
  EXCL_NO_WS("!")
  RPAREN(")")
  RPAREN(")")
  NL("\n")
  Identifier("a")
  EXCL_NO_WS("!")
  EXCL_NO_WS("!")
  DOT(".")
  Identifier("foo")
  LPAREN("(")
  Identifier("b")
  EXCL_NO_WS("!")
  EXCL_NO_WS("!")
  DOT(".")
  Identifier("foo")
  LPAREN("(")
  Identifier("c")
  EXCL_NO_WS("!")
  EXCL_NO_WS("!")
  RPAREN(")")
  RPAREN(")")
  NL("\n")
  NL("\n")
  topLevelObject
    declaration
      propertyDeclaration
        VAL("val")
        variableDeclaration
          simpleIdentifier
            Identifier("z")
          COLON(":")
          type
            nullableType
              typeReference
                userType
                  simpleUserType
                    simpleIdentifier
                      Identifier("Foo")
              quest
                QUEST_WS("? ")
        ASSIGNMENT("=")
        expression
          disjunction
            conjunction
              equality
                comparison
                  genericCallLikeComparison
                    infixOperation
                      elvisExpression
                        infixFunctionCall
                          rangeExpression
                            additiveExpression
                              multiplicativeExpression
                                asExpression
                                  prefixUnaryExpression
                                    postfixUnaryExpression
                                      primaryExpression
                                        literalConstant
                                          NullLiteral("null")
    semis
      NL("\n")
  Identifier("z")
  EXCL_NO_WS("!")
  EXCL_NO_WS("!")
  DOT(".")
  Identifier("foo")
  LPAREN("(")
  Identifier("z")
  EXCL_NO_WS("!")
  EXCL_NO_WS("!")
  RPAREN(")")
  NL("\n")
  NL("\n")
  topLevelObject
    declaration
      propertyDeclaration
        VAL("val")
        variableDeclaration
          simpleIdentifier
            Identifier("w")
          COLON(":")
          type
            nullableType
              typeReference
                userType
                  simpleUserType
                    simpleIdentifier
                      Identifier("Foo")
              quest
                QUEST_WS("? ")
        ASSIGNMENT("=")
        expression
          disjunction
            conjunction
              equality
                comparison
                  genericCallLikeComparison
                    infixOperation
                      elvisExpression
                        infixFunctionCall
                          rangeExpression
                            additiveExpression
                              multiplicativeExpression
                                asExpression
                                  prefixUnaryExpression
                                    postfixUnaryExpression
                                      primaryExpression
                                        literalConstant
                                          NullLiteral("null")
    semis
      NL("\n")
  Identifier("w")
  DOT(".")
  Identifier("f")
  ASSIGNMENT("=")
  Identifier("z")
  NL("\n")
  LPAREN("(")
  Identifier("w")
  DOT(".")
  Identifier("f")
  RPAREN(")")
  ASSIGNMENT("=")
  Identifier("z")
  NL("\n")
  LPAREN("(")
  Identifier("label")
  AT_POST_WS("@ ")
  Identifier("w")
  DOT(".")
  Identifier("f")
  RPAREN(")")
  ASSIGNMENT("=")
  Identifier("z")
  NL("\n")
  Identifier("w")
  EXCL_NO_WS("!")
  EXCL_NO_WS("!")
  DOT(".")
  Identifier("f")
  ASSIGNMENT("=")
  Identifier("z")
  NL("\n")
  Identifier("w")
  DOT(".")
  Identifier("f")
  ASSIGNMENT("=")
  Identifier("z")
  NL("\n")
  Identifier("w")
  EXCL_NO_WS("!")
  EXCL_NO_WS("!")
  DOT(".")
  Identifier("f")
  ASSIGNMENT("=")
  Identifier("z")
  NL("\n")
  Identifier("w")
  DOT(".")
  Identifier("f")
  DOT(".")
  Identifier("f")
  ASSIGNMENT("=")
  Identifier("z")
  NL("\n")
  Identifier("w")
  DOT(".")
  Identifier("f")
  EXCL_NO_WS("!")
  EXCL_NO_WS("!")
  DOT(".")
  Identifier("f")
  ASSIGNMENT("=")
  Identifier("z")
  NL("\n")
  RCURL("}")
  NL("\n")
  EOF("<EOF>")
