File: expectAnnotationAndInlineClassWithDefaultValue.jvm.kt - 065d6a0f8861a65a2fc2ffc4ff254b4f
  packageHeader
  importList
  topLevelObject
    declaration
      classDeclaration
        modifiers
          modifier
            platformModifier
              ACTUAL("actual")
          modifier
            classModifier
              ANNOTATION("annotation")
        CLASS("class")
        simpleIdentifier
          Identifier("Measurement")
        primaryConstructor
          classParameters
            LPAREN("(")
            classParameter
              modifiers
                modifier
                  platformModifier
                    ACTUAL("actual")
              VAL("val")
              simpleIdentifier
                Identifier("iterations")
              COLON(":")
              type
                typeReference
                  userType
                    simpleUserType
                      simpleIdentifier
                        Identifier("Int")
            RPAREN(")")
  topLevelObject
    declaration
      classDeclaration
        modifiers
          annotation
            singleAnnotation
              AT_PRE_WS("\n@")
              unescapedAnnotation
                userType
                  simpleUserType
                    simpleIdentifier
                      Identifier("JvmInline")
          modifier
            platformModifier
              ACTUAL("actual")
          modifier
            classModifier
              VALUE("value")
        CLASS("class")
        simpleIdentifier
          Identifier("Inline")
        primaryConstructor
          classParameters
            LPAREN("(")
            classParameter
              VAL("val")
              simpleIdentifier
                VALUE("value")
              COLON(":")
              type
                typeReference
                  userType
                    simpleUserType
                      simpleIdentifier
                        Identifier("String")
            RPAREN(")")
    semis
      NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        modifiers
          annotation
            singleAnnotation
              AT_PRE_WS("\n@")
              unescapedAnnotation
                constructorInvocation
                  userType
                    simpleUserType
                      simpleIdentifier
                        Identifier("Measurement")
                  valueArguments
                    LPAREN("(")
                    RPAREN(")")
            NL("\n")
        FUN("fun")
        simpleIdentifier
          Identifier("test")
        functionValueParameters
          LPAREN("(")
          RPAREN(")")
        functionBody
          block
            LCURL("{")
            NL("\n")
            statements
              statement
                expression
                  disjunction
                    conjunction
                      equality
                        comparison
                          genericCallLikeComparison
                            infixOperation
                              elvisExpression
                                infixFunctionCall
                                  rangeExpression
                                    additiveExpression
                                      multiplicativeExpression
                                        asExpression
                                          prefixUnaryExpression
                                            postfixUnaryExpression
                                              primaryExpression
                                                simpleIdentifier
                                                  Identifier("Inline")
                                              postfixUnarySuffix
                                                callSuffix
                                                  valueArguments
                                                    LPAREN("(")
                                                    RPAREN(")")
              semis
                NL("\n")
            RCURL("}")
    semis
      NL("\n")
  EOF("<EOF>")
