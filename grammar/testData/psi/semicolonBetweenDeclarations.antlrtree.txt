File: semicolonBetweenDeclarations.kt - 5aaf98ed0f36443e019c2cddff4cca0a
  packageHeader
    PACKAGE("package")
    identifier
      simpleIdentifier
        Identifier("foo")
    semi
      SEMICOLON(";")
      NL("\n")
      NL("\n")
  importList
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        simpleIdentifier
          Identifier("foo1")
        functionValueParameters
          LPAREN("(")
          RPAREN(")")
        functionBody
          block
            LCURL("{")
            statements
            RCURL("}")
    semis
      SEMICOLON(";")
      NL("\n")
  topLevelObject
    declaration
      propertyDeclaration
        VAL("val")
        variableDeclaration
          simpleIdentifier
            Identifier("x")
        ASSIGNMENT("=")
        expression
          disjunction
            conjunction
              equality
                comparison
                  genericCallLikeComparison
                    infixOperation
                      elvisExpression
                        infixFunctionCall
                          rangeExpression
                            additiveExpression
                              multiplicativeExpression
                                asExpression
                                  prefixUnaryExpression
                                    postfixUnaryExpression
                                      primaryExpression
                                        literalConstant
                                          IntegerLiteral("1")
  DOUBLE_SEMICOLON(";;")
  DOUBLE_SEMICOLON(";;")
  NL("\n")
  topLevelObject
    declaration
      classDeclaration
        CLASS("class")
        simpleIdentifier
          Identifier("A")
        primaryConstructor
          classParameters
            LPAREN("(")
            RPAREN(")")
        classBody
          LCURL("{")
          NL("\n")
          classMemberDeclarations
            classMemberDeclaration
              declaration
                propertyDeclaration
                  VAL("val")
                  variableDeclaration
                    simpleIdentifier
                      Identifier("x")
                  ASSIGNMENT("=")
                  expression
                    disjunction
                      conjunction
                        equality
                          comparison
                            genericCallLikeComparison
                              infixOperation
                                elvisExpression
                                  infixFunctionCall
                                    rangeExpression
                                      additiveExpression
                                        multiplicativeExpression
                                          asExpression
                                            prefixUnaryExpression
                                              postfixUnaryExpression
                                                primaryExpression
                                                  literalConstant
                                                    IntegerLiteral("1")
                  SEMICOLON(";")
                  NL("\n")
                  NL("\n")
            classMemberDeclaration
              declaration
                functionDeclaration
                  FUN("fun")
                  simpleIdentifier
                    Identifier("foo")
                  functionValueParameters
                    LPAREN("(")
                    RPAREN(")")
                  functionBody
                    block
                      LCURL("{")
                      NL("\n")
                      statements
                        statement
                          declaration
                            classDeclaration
                              CLASS("class")
                              simpleIdentifier
                                Identifier("A1")
                        semis
                          SEMICOLON(";")
                          NL("\n")
                        statement
                          declaration
                            propertyDeclaration
                              VAL("val")
                              variableDeclaration
                                simpleIdentifier
                                  Identifier("x")
                              ASSIGNMENT("=")
                              expression
                                disjunction
                                  conjunction
                                    equality
                                      comparison
                                        genericCallLikeComparison
                                          infixOperation
                                            elvisExpression
                                              infixFunctionCall
                                                rangeExpression
                                                  additiveExpression
                                                    multiplicativeExpression
                                                      asExpression
                                                        prefixUnaryExpression
                                                          postfixUnaryExpression
                                                            primaryExpression
                                                              literalConstant
                                                                IntegerLiteral("1")
                              SEMICOLON(";")
                              NL("\n")
                      RCURL("}")
            semis
              NL("\n")
            classMemberDeclaration
              declaration
                functionDeclaration
                  FUN("fun")
                  simpleIdentifier
                    Identifier("bar")
                  functionValueParameters
                    LPAREN("(")
                    RPAREN(")")
            semis
              SEMICOLON(";")
              NL("\n")
              NL("\n")
            classMemberDeclaration
              anonymousInitializer
                INIT("init")
                block
                  LCURL("{")
                  statements
                  RCURL("}")
            semis
              SEMICOLON(";")
              NL("\n")
              NL("\n")
            classMemberDeclaration
              secondaryConstructor
                CONSTRUCTOR("constructor")
                functionValueParameters
                  LPAREN("(")
                  RPAREN(")")
                COLON(":")
                constructorDelegationCall
                  SUPER("super")
                  valueArguments
                    LPAREN("(")
                    RPAREN(")")
            semis
              SEMICOLON(";")
              NL("\n")
              NL("\n")
            classMemberDeclaration
              companionObject
                COMPANION("companion")
                OBJECT("object")
                classBody
                  LCURL("{")
                  classMemberDeclarations
                  RCURL("}")
            semis
              SEMICOLON(";")
              NL("\n")
          RCURL("}")
    semis
      SEMICOLON(";")
      NL("\n")
      NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        Identifier("foo")
    semis
      SEMICOLON(";")
      NL("\n")
  topLevelObject
    declaration
      propertyDeclaration
        VAL("val")
        SEMICOLON(";")
    semis
      NL("\n")
  topLevelObject
    declaration
      classDeclaration
        CLASS("class")
        simpleIdentifier
          Identifier("B")
  LCURL("{")
  NL("\n")
  topLevelObject
    declaration
      propertyDeclaration
        VAL("val")
        SEMICOLON(";")
        NL("\n")
        variableDeclaration
          simpleIdentifier
            INIT("init")
    semis
      SEMICOLON(";")
      NL("\n")
  CONSTRUCTOR("constructor")
  SEMICOLON(";")
  NL("\n")
  RCURL("}")
  NL("\n")
  EOF("<EOF>")
