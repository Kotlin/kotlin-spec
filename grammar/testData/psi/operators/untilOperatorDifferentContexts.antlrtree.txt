File: untilOperatorDifferentContexts.kt - e928bd4649ae9949fcaa305d8d9ba1a1 (WITH_ERRORS)
  packageHeader
  importList
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        simpleIdentifier
          Identifier("main")
        functionValueParameters
          LPAREN("(")
          RPAREN(")")
  LCURL("{")
  NL("\n")
  IntegerLiteral("0")
  RANGE("..")
  LANGLE("<")
  Identifier("n")
  NL("\n")
  RCURL("}")
  NL("\n")
  NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        simpleIdentifier
          Identifier("main")
        functionValueParameters
          LPAREN("(")
          VAL("val")
          functionValueParameter
            parameter
              simpleIdentifier
                Identifier("x")
              COLON(":")
              type
                typeReference
                  userType
                    simpleUserType
                      simpleIdentifier
                        Identifier("Int")
            ASSIGNMENT("=")
            expression
              disjunction
                conjunction
                  equality
                    comparison
                      genericCallLikeComparison
                        infixOperation
                          elvisExpression
                            infixFunctionCall
                              rangeExpression
                                additiveExpression
                                  multiplicativeExpression
                                    asExpression
                                      prefixUnaryExpression
                                        postfixUnaryExpression
                                          primaryExpression
                                            literalConstant
                                              IntegerLiteral("0")
                                RANGE("..")
                                LANGLE("<")
                                additiveExpression
                                  multiplicativeExpression
                                    asExpression
                                      prefixUnaryExpression
                                        postfixUnaryExpression
                                          primaryExpression
                                            simpleIdentifier
                                              Identifier("n")
          RPAREN(")")
        functionBody
          block
            LCURL("{")
            statements
            RCURL("}")
    semis
      NL("\n")
  topLevelObject
    declaration
  topLevelObject
    declaration
      AT_PRE_WS("\n@")
      Identifier("Suppress")
      LPAREN("(")
      IntegerLiteral("0")
      RANGE("..")
      LANGLE("<")
      Identifier("n")
      RPAREN(")")
    semis
      NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        simpleIdentifier
          Identifier("main")
        functionValueParameters
          LPAREN("(")
          RPAREN(")")
        functionBody
          block
            LCURL("{")
            statements
            RCURL("}")
    semis
      NL("\n")
      NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        simpleIdentifier
          Identifier("main")
        functionValueParameters
          LPAREN("(")
          RPAREN(")")
  LCURL("{")
  NL("\n")
  WHEN("when")
  LCURL("{")
  NL("\n")
  IntegerLiteral("0")
  RANGE("..")
  LANGLE("<")
  Identifier("n")
  ARROW("->")
  BooleanLiteral("true")
  NL("\n")
  Identifier("n")
  RANGE("..")
  LANGLE("<")
  Identifier("n")
  ADD("+")
  IntegerLiteral("1")
  ARROW("->")
  BooleanLiteral("true")
  NL("\n")
  Identifier("n")
  ADD("+")
  IntegerLiteral("1")
  RANGE("..")
  LANGLE("<")
  Identifier("n")
  ADD("+")
  IntegerLiteral("2")
  ARROW("->")
  BooleanLiteral("true")
  NL("\n")
  Identifier("n")
  MULT("*")
  IntegerLiteral("2")
  RANGE("..")
  LANGLE("<")
  Identifier("n")
  MULT("*")
  IntegerLiteral("3")
  ARROW("->")
  BooleanLiteral("true")
  NL("\n")
  RCURL("}")
  NL("\n")
  RCURL("}")
  NL("\n")
  NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        simpleIdentifier
          Identifier("main")
        functionValueParameters
          LPAREN("(")
          RPAREN(")")
  LCURL("{")
  NL("\n")
  IF("if")
  LPAREN("(")
  IntegerLiteral("0")
  RANGE("..")
  LANGLE("<")
  Identifier("n")
  RANGE("..")
  LANGLE("<")
  Identifier("n")
  RPAREN(")")
  LCURL("{")
  RCURL("}")
  ELSE("else")
  IF("if")
  LPAREN("(")
  IntegerLiteral("0")
  RANGE("..")
  Identifier("n")
  RANGE("..")
  LANGLE("<")
  Identifier("n")
  RANGE("..")
  Identifier("n")
  RPAREN(")")
  LCURL("{")
  RCURL("}")
  ELSE("else")
  IF("if")
  LPAREN("(")
  IntegerLiteral("0")
  RANGE("..")
  LANGLE("<")
  Identifier("n")
  RANGE("..")
  Identifier("n")
  RANGE("..")
  LANGLE("<")
  Identifier("n")
  RANGE("..")
  LANGLE("<")
  Identifier("n")
  RPAREN(")")
  LCURL("{")
  RCURL("}")
  ELSE("else")
  LCURL("{")
  LPAREN("(")
  LPAREN("(")
  IntegerLiteral("0")
  ADD("+")
  IntegerLiteral("1")
  RANGE("..")
  LANGLE("<")
  Identifier("n")
  SUB("-")
  IntegerLiteral("1")
  RANGE("..")
  IntegerLiteral("1")
  ADD("+")
  Identifier("n")
  RPAREN(")")
  SUB("-")
  IntegerLiteral("1")
  RANGE("..")
  LANGLE("<")
  IntegerLiteral("3")
  MULT("*")
  Identifier("n")
  RPAREN(")")
  RANGE("..")
  LANGLE("<")
  Identifier("n")
  RCURL("}")
  NL("\n")
  RCURL("}")
  NL("\n")
  EOF("<EOF>")
