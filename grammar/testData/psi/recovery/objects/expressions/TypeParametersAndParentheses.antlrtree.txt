File: TypeParametersAndParentheses.kt - e7f4408107109a5d28d26966e965e4e4
  packageHeader
  importList
  topLevelObject
    declaration
      propertyDeclaration
        VAL("val")
        variableDeclaration
          simpleIdentifier
            Identifier("foo")
        ASSIGNMENT("=")
        expression
          disjunction
            conjunction
              equality
                comparison
                  genericCallLikeComparison
                    infixOperation
                      elvisExpression
                        infixFunctionCall
                          rangeExpression
                            additiveExpression
                              multiplicativeExpression
                                asExpression
                                  prefixUnaryExpression
                                    postfixUnaryExpression
                                      primaryExpression
                                        objectLiteral
                                          OBJECT("object")
                  comparisonOperator
                    LANGLE("<")
                  genericCallLikeComparison
                    infixOperation
                      elvisExpression
                        infixFunctionCall
                          rangeExpression
                            additiveExpression
                              multiplicativeExpression
                                asExpression
                                  prefixUnaryExpression
                                    postfixUnaryExpression
                                      primaryExpression
                                        simpleIdentifier
                                          Identifier("T")
        COMMA(",")
        Identifier("R")
        RANGLE(">")
        LPAREN("(")
        Identifier("x")
        COLON(":")
        Identifier("Int")
        RPAREN(")")
        LCURL("{")
        RCURL("}")
    semis
      NL("\n")
      NL("\n")
  topLevelObject
    declaration
      propertyDeclaration
        VAL("val")
        variableDeclaration
          simpleIdentifier
            Identifier("foo")
        ASSIGNMENT("=")
        expression
          disjunction
            conjunction
              equality
                comparison
                  genericCallLikeComparison
                    infixOperation
                      elvisExpression
                        infixFunctionCall
                          rangeExpression
                            additiveExpression
                              multiplicativeExpression
                                asExpression
                                  prefixUnaryExpression
                                    postfixUnaryExpression
                                      primaryExpression
                                        objectLiteral
                                          OBJECT("object")
                    callSuffix
                      typeArguments
                        LANGLE("<")
                        typeProjection
                          type
                            typeReference
                              userType
                                simpleUserType
                                  simpleIdentifier
                                    Identifier("T")
                        COMMA(",")
                        typeProjection
                          type
                            typeReference
                              userType
                                simpleUserType
                                  simpleIdentifier
                                    Identifier("R")
                        RANGLE(">")
                      valueArguments
                        LPAREN("(")
                        RPAREN(")")
  COLON(":")
  Identifier("Bar")
  LCURL("{")
  NL("\n")
  NL("\n")
  RCURL("}")
  NL("\n")
  NL("\n")
  topLevelObject
    declaration
      propertyDeclaration
        VAL("val")
        variableDeclaration
          simpleIdentifier
            Identifier("foo")
        ASSIGNMENT("=")
        expression
          disjunction
            conjunction
              equality
                comparison
                  genericCallLikeComparison
                    infixOperation
                      elvisExpression
                        infixFunctionCall
                          rangeExpression
                            additiveExpression
                              multiplicativeExpression
                                asExpression
                                  prefixUnaryExpression
                                    postfixUnaryExpression
                                      primaryExpression
                                        objectLiteral
                                          OBJECT("object")
                                      postfixUnarySuffix
                                        typeArguments
                                          LANGLE("<")
                                          typeProjection
                                            type
                                              typeReference
                                                userType
                                                  simpleUserType
                                                    simpleIdentifier
                                                      Identifier("T")
                                          COMMA(",")
                                          typeProjection
                                            type
                                              typeReference
                                                userType
                                                  simpleUserType
                                                    simpleIdentifier
                                                      Identifier("R")
                                          RANGLE(">")
                                      postfixUnarySuffix
                                        callSuffix
                                          valueArguments
                                            LPAREN("(")
                                            RPAREN(")")
        NL("\n")
  EOF("<EOF>")
